Search.setIndex({"docnames": [".pytest_cache/README", "autoapi/index", "autoapi/torch_mist/baselines/index", "autoapi/torch_mist/critic/base/index", "autoapi/torch_mist/critic/index", "autoapi/torch_mist/critic/joint/index", "autoapi/torch_mist/critic/separable/index", "autoapi/torch_mist/critic/utils/index", "autoapi/torch_mist/distributions/conditional/categorical/index", "autoapi/torch_mist/distributions/conditional/correlated_normal/index", "autoapi/torch_mist/distributions/conditional/index", "autoapi/torch_mist/distributions/index", "autoapi/torch_mist/distributions/parametrizations/index", "autoapi/torch_mist/distributions/parametrizations/map/index", "autoapi/torch_mist/distributions/product/index", "autoapi/torch_mist/distributions/transforms/base/index", "autoapi/torch_mist/distributions/transforms/index", "autoapi/torch_mist/distributions/transforms/linear/index", "autoapi/torch_mist/distributions/transforms/permute/index", "autoapi/torch_mist/distributions/transforms/split/index", "autoapi/torch_mist/distributions/utils/index", "autoapi/torch_mist/estimators/base/index", "autoapi/torch_mist/estimators/discriminative/index", "autoapi/torch_mist/estimators/generative/ba/index", "autoapi/torch_mist/estimators/generative/base/index", "autoapi/torch_mist/estimators/generative/club/index", "autoapi/torch_mist/estimators/generative/doe/index", "autoapi/torch_mist/estimators/generative/gm/index", "autoapi/torch_mist/estimators/generative/index", "autoapi/torch_mist/estimators/generative/l1out/index", "autoapi/torch_mist/estimators/generative/pq/index", "autoapi/torch_mist/estimators/hybrid/index", "autoapi/torch_mist/estimators/index", "autoapi/torch_mist/index", "autoapi/torch_mist/nn/index", "autoapi/torch_mist/nn/utils/index", "autoapi/torch_mist/quantization/functions/index", "autoapi/torch_mist/quantization/index", "autoapi/torch_mist/quantization/vqvae/index", "autoapi/torch_mist/utils/data/index", "autoapi/torch_mist/utils/estimate/index", "autoapi/torch_mist/utils/index", "changelog", "conduct", "contributing", "example", "index"], "filenames": [".pytest_cache/README.md", "autoapi/index.rst", "autoapi/torch_mist/baselines/index.rst", "autoapi/torch_mist/critic/base/index.rst", "autoapi/torch_mist/critic/index.rst", "autoapi/torch_mist/critic/joint/index.rst", "autoapi/torch_mist/critic/separable/index.rst", "autoapi/torch_mist/critic/utils/index.rst", "autoapi/torch_mist/distributions/conditional/categorical/index.rst", "autoapi/torch_mist/distributions/conditional/correlated_normal/index.rst", "autoapi/torch_mist/distributions/conditional/index.rst", "autoapi/torch_mist/distributions/index.rst", "autoapi/torch_mist/distributions/parametrizations/index.rst", "autoapi/torch_mist/distributions/parametrizations/map/index.rst", "autoapi/torch_mist/distributions/product/index.rst", "autoapi/torch_mist/distributions/transforms/base/index.rst", "autoapi/torch_mist/distributions/transforms/index.rst", "autoapi/torch_mist/distributions/transforms/linear/index.rst", "autoapi/torch_mist/distributions/transforms/permute/index.rst", "autoapi/torch_mist/distributions/transforms/split/index.rst", "autoapi/torch_mist/distributions/utils/index.rst", "autoapi/torch_mist/estimators/base/index.rst", "autoapi/torch_mist/estimators/discriminative/index.rst", "autoapi/torch_mist/estimators/generative/ba/index.rst", "autoapi/torch_mist/estimators/generative/base/index.rst", "autoapi/torch_mist/estimators/generative/club/index.rst", "autoapi/torch_mist/estimators/generative/doe/index.rst", "autoapi/torch_mist/estimators/generative/gm/index.rst", "autoapi/torch_mist/estimators/generative/index.rst", "autoapi/torch_mist/estimators/generative/l1out/index.rst", "autoapi/torch_mist/estimators/generative/pq/index.rst", "autoapi/torch_mist/estimators/hybrid/index.rst", "autoapi/torch_mist/estimators/index.rst", "autoapi/torch_mist/index.rst", "autoapi/torch_mist/nn/index.rst", "autoapi/torch_mist/nn/utils/index.rst", "autoapi/torch_mist/quantization/functions/index.rst", "autoapi/torch_mist/quantization/index.rst", "autoapi/torch_mist/quantization/vqvae/index.rst", "autoapi/torch_mist/utils/data/index.rst", "autoapi/torch_mist/utils/estimate/index.rst", "autoapi/torch_mist/utils/index.rst", "changelog.md", "conduct.md", "contributing.md", "example.ipynb", "index.md"], "titles": ["pytest cache directory", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.baselines</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.joint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.separable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.conditional.categorical</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.conditional.correlated_normal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.conditional</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.parametrizations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.parametrizations.map</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.product</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.ba</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.club</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.doe</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.gm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.l1out</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.pq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.hybrid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.nn.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.quantization.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.quantization.vqvae</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.estimate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils</span></code>", "Changelog", "Code of Conduct", "Contributing", "Example usage", "Mist - A PyTorch Mutual information Estimation toolkit"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 9, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43, 44, 46], "contain": [0, 1, 2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "data": [0, 1, 33, 41], "from": [0, 13, 16, 17, 18, 19, 21, 32, 39, 43], "": [0, 16, 18, 21, 32, 43, 44], "plugin": 0, "which": [0, 9, 16, 17, 21, 32, 43], "provid": [0, 8, 9, 10, 15, 16, 20], "lf": 0, "ff": [0, 16, 18], "option": [0, 2, 4, 6, 7, 13, 20, 22, 23, 24, 27, 28, 31, 32, 36, 37, 38, 40], "well": 0, "fixtur": 0, "do": [0, 35, 43], "commit": [0, 43, 44], "version": [0, 43, 44], "control": 0, "see": 0, "doc": [0, 44], "more": [0, 16, 18], "inform": [0, 21, 32, 43], "page": 1, "auto": 1, "gener": [1, 14, 15, 16, 20, 31, 32, 33], "document": 1, "1": [1, 2, 3, 4, 5, 6, 7, 9, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 45], "torch_mist": [1, 42, 44, 45, 46], "critic": [1, 22, 32, 33, 43], "base": [1, 2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 46], "joint": [1, 4, 22, 32, 33], "separ": [1, 4, 22, 32, 33, 43], "util": [1, 4, 11, 33, 34], "distribut": [1, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39], "condit": [1, 11, 15, 16, 17, 20, 33, 35], "categor": [1, 10, 11, 33], "correlated_norm": [1, 10, 11, 33], "parametr": [1, 11, 33], "map": [1, 11, 12, 33], "transform": [1, 9, 11, 20, 33, 35], "linear": [1, 11, 16, 20, 26, 27, 28, 32, 33], "permut": [1, 11, 16, 33], "split": [1, 11, 16, 33], "product": [1, 11, 33], "estim": [1, 3, 4, 5, 6, 33, 41], "ba": [1, 26, 28, 32, 33], "club": [1, 28, 32, 33], "doe": [1, 28, 32, 33], "gm": [1, 28, 32, 33], "l1out": [1, 28, 32, 33], "pq": [1, 28, 32, 33], "discrimin": [1, 31, 32, 33], "hybrid": [1, 32, 33], "nn": [1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38], "quantiz": [1, 28, 30, 32, 33], "function": [1, 2, 3, 5, 6, 15, 21, 24, 31, 33, 35, 44], "vqvae": [1, 33, 37], "baselin": [1, 22, 32, 33], "creat": [1, 8, 9, 10, 15, 16, 18, 20, 43, 44, 46], "sphinx": 1, "autoapi": 1, "arg": [2, 3, 4, 21, 24, 28, 32, 35, 36, 37], "kwarg": [2, 3, 4, 21, 24, 28, 32, 35, 36, 37], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "torch": [2, 3, 4, 5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "all": [2, 3, 4, 5, 6, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43, 44], "neural": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "network": [2, 3, 4, 5, 6, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "your": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 44], "model": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "should": [2, 3, 4, 5, 6, 9, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 44], "also": [2, 3, 4, 5, 6, 9, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "subclass": [2, 3, 4, 5, 6, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "can": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 44], "other": [2, 3, 4, 5, 6, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43], "allow": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "nest": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "them": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "tree": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "structur": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "you": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 44, 46], "assign": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "submodul": [2, 3, 5, 6, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 35, 36, 38], "regular": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "attribut": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37], "import": [2, 3, 4, 5, 6, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 45], "f": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "def": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "__init__": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "self": [2, 3, 4, 5, 6, 13, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "super": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "conv1": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "conv2d": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "20": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "5": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "conv2": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "forward": [2, 3, 4, 5, 6, 9, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "x": [2, 3, 4, 5, 6, 8, 9, 10, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "relu": [2, 3, 4, 5, 6, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "return": [2, 3, 4, 5, 6, 8, 9, 10, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39], "wai": [2, 3, 4, 5, 6, 8, 9, 10, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43], "regist": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "have": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43, 44], "paramet": [2, 3, 4, 5, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "convert": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "too": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "when": [2, 3, 4, 5, 6, 9, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 43, 44], "call": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "etc": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "As": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "per": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "exampl": [2, 3, 4, 5, 6, 9, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43], "abov": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "an": [2, 3, 4, 5, 6, 8, 9, 10, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43], "parent": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "must": [2, 3, 4, 5, 6, 9, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "made": [2, 3, 4, 5, 6, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "befor": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 44], "child": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "variabl": [2, 3, 4, 5, 6, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "train": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "bool": [2, 3, 4, 5, 6, 9, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "boolean": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "repres": [2, 3, 4, 5, 6, 9, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43], "whether": [2, 3, 4, 5, 6, 9, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "i": [2, 3, 4, 5, 6, 9, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43, 44, 46], "evalu": [2, 3, 4, 5, 6, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "mode": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38], "abstract": [2, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22], "f_": [2, 22, 32], "tensor": [2, 3, 4, 5, 6, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "y": [2, 3, 4, 5, 6, 9, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 36, 37, 38], "none": [2, 4, 6, 7, 13, 15, 16, 17, 18, 20, 22, 23, 27, 28, 31, 32, 36, 37, 38, 40], "constantbaselin": [2, 22, 32], "valu": [2, 3, 4, 5, 6, 9, 15, 16, 17, 18, 20, 21, 32, 35], "float": [2, 4, 6, 7, 9, 10, 13, 16, 17, 22, 23, 27, 28, 30, 32, 36, 37, 38, 40], "0": [2, 4, 6, 7, 9, 13, 16, 17, 18, 22, 28, 30, 32, 36, 37, 38, 45], "exponentialmovingaverag": 2, "gamma": [2, 22, 32, 37, 38], "9": [2, 22, 32], "batchlogmeanexp": 2, "dim": [2, 16, 18, 35], "learnablebaselin": 2, "net": [2, 8, 10, 16, 17, 35, 36, 37], "learnablemlpbaselin": 2, "x_dim": [2, 4, 7, 22, 23, 25, 26, 27, 28, 29, 30, 32, 36, 37, 38], "int": [2, 4, 7, 9, 13, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40], "hidden_dim": [2, 4, 7, 16, 17, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38], "list": [2, 4, 7, 13, 15, 16, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38], "nonlinear": [2, 4, 7, 35], "ani": [2, 4, 7, 20, 22, 32, 36, 37, 40, 43, 44], "true": [2, 4, 7, 9, 16, 17, 22, 32], "learnablejointbaselin": [2, 22, 32], "learnablejointmlpbaselin": 2, "y_dim": [2, 4, 7, 22, 23, 25, 26, 27, 28, 29, 32, 36, 37, 38], "interpolatedbaselin": 2, "baseline_1": 2, "baseline_2": 2, "alpha": [2, 22, 32], "alphatubabaselin": 2, "comput": [3, 4, 5, 6, 9, 16, 17, 19, 21, 32], "pair": [3, 4, 5, 6], "param": [3, 4, 5, 6, 17, 21, 32], "The": [3, 4, 5, 6, 9, 13, 16, 17, 35, 43, 44], "ratio": [3, 4, 5, 6, 21, 32], "given": [3, 4, 5, 6, 9, 16, 17, 19, 44], "modul": [4, 10, 16, 28, 32, 37], "jointcrit": [4, 5], "joint_net": [4, 5], "separablecrit": [4, 6, 22, 32], "f_x": [4, 6], "f_y": [4, 6], "temperatur": [4, 6, 7, 28, 30, 32], "critic_typ": [4, 7, 22, 32], "str": [4, 7, 13, 15, 16, 20, 22, 23, 25, 26, 27, 28, 29, 32, 36, 37, 40], "critic_param": [4, 7, 22, 32], "dict": [4, 7, 13, 15, 16, 20, 22, 32, 36, 37, 38, 40], "joint_crit": [4, 7], "separable_crit": [4, 7], "projection_head": [4, 7], "symmetr": [4, 7], "output_dim": [4, 7, 20], "128": [4, 7], "conditionalcategor": [8, 10], "pyro": [8, 9, 10, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 32, 35, 37, 38], "conditionaldistribut": [8, 9, 10, 15, 16, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38], "helper": [8, 9, 10, 15, 16, 18, 20], "standard": [8, 9, 10, 15, 16, 20], "abc": [8, 9, 10, 15, 16, 20, 39], "us": [8, 9, 10, 15, 16, 17, 18, 19, 20, 35, 43, 44, 45], "inherit": [8, 9, 10, 15, 16, 17, 19, 20], "type": [8, 9, 10, 13, 15, 16, 17, 18, 20, 21, 32, 40], "correlatednorm": [9, 10], "rho": [9, 10], "context": [9, 10, 15, 16, 17, 18, 20], "cubicptransform": 9, "k1": 9, "k3": 9, "invert": [9, 16, 17, 18], "log": [9, 15, 16, 17, 18, 19, 20], "det": [9, 16, 17, 19], "jacobian": [9, 16, 17, 18, 19], "thei": [9, 16, 17, 19, 43, 44], "ar": [9, 14, 15, 16, 17, 19, 20, 21, 32, 43, 44], "primarili": [9, 16, 17], "transformeddistribut": [9, 16, 17, 18], "cach": [9, 16, 17], "whose": [9, 16, 17], "invers": [9, 16, 17, 19], "either": [9, 16, 17], "expens": [9, 16, 17], "numer": [9, 16, 17], "unstabl": [9, 16, 17], "note": [9, 16, 17, 18, 35, 44, 46], "care": [9, 16, 17], "taken": [9, 16, 17], "memoiz": [9, 16, 17], "sinc": [9, 16, 17, 18], "autograd": [9, 16, 17], "graph": [9, 16, 17], "mai": [9, 16, 17, 43], "revers": [9, 16, 17], "For": [9, 16, 17], "while": [9, 16, 17], "follow": [9, 16, 17, 21, 32, 43], "work": [9, 16, 17, 18, 44], "without": [9, 16, 17, 43], "t": [9, 16, 17, 21, 32], "log_abs_det_jacobian": [9, 16, 17, 18, 19], "backward": [9, 16, 17], "receiv": [9, 16, 17], "gradient": [9, 16, 17], "howev": [9, 16, 17, 18], "error": [9, 16, 17], "due": [9, 16, 17], "depend": [9, 16, 17], "z": [9, 16, 17, 35], "inv": [9, 16, 17], "grad": [9, 16, 17], "sum": [9, 16, 17, 18], "becaus": [9, 16, 17], "deriv": [9, 16, 17], "implement": [9, 16, 17, 35], "one": [9, 13, 16, 17], "both": [9, 16, 17, 43], "_call": [9, 16, 17, 18, 19], "_invers": [9, 16, 17, 18, 19], "set": [9, 16, 17, 43, 44], "biject": [9, 16, 17, 18], "cache_s": [9, 16, 17, 18], "size": [9, 14, 15, 16, 17, 20, 35, 43], "If": [9, 16, 17, 44], "zero": [9, 16, 17, 18], "done": [9, 16, 17, 44], "latest": [9, 16, 17], "singl": [9, 16, 17], "onli": [9, 16, 17], "support": [9, 16, 17, 44], "domain": [9, 16, 17, 19], "constraint": [9, 16, 17], "valid": [9, 16, 17], "input": [9, 16, 17, 18, 19, 35], "codomain": [9, 16, 17, 19], "output": [9, 16, 17, 18, 19, 35], "A": [9, 16, 17, 18], "iff": [9, 16, 17], "everi": [9, 16, 17, 44], "least": [9, 16, 17], "maintain": [9, 16, 17, 43], "weaker": [9, 16, 17], "pseudoinvers": [9, 16, 17], "properti": [9, 16, 17, 21, 36, 37], "sign": [9, 16, 17], "univari": [9, 16, 17], "monoton": [9, 16, 17], "increas": [9, 16, 17, 18], "decreas": [9, 16, 17], "method": [9, 13, 16, 17, 19], "dy": [9, 16, 17, 19], "dx": [9, 16, 17, 19], "randomfliptransform": 9, "fals": [9, 15, 16, 17, 22, 36, 37, 38], "cubiccorrelatednorm": [9, 10], "translat": 9, "b": [9, 35, 44], "skewedcorrelatednorm": [9, 10], "epsilon": [13, 16, 17], "1e": [13, 16, 17], "06": [13, 16, 17], "parametermap": 13, "dictionari": 13, "supported_distribut": 13, "n_paramet": 13, "map_paramet": 13, "parameter_list": 13, "respons": 13, "defin": [13, 16, 18, 43], "interest": [13, 43, 46], "name": [13, 44], "__call__": 13, "union": [13, 15, 16, 23, 27, 28, 32], "extra_repr": 13, "__repr__": [13, 15, 16, 20, 22, 24, 26, 27, 28, 32, 35], "repr": [13, 15, 16, 20, 22, 24, 26, 27, 28, 32, 35], "deltamap": 13, "delta": 13, "same": 13, "locat": 13, "locscalemap": 13, "scale": [13, 16, 17, 20], "scale_offset": 13, "logitsmap": 13, "temperaturelogitsmap": 13, "2": [13, 36, 37, 38], "shuffledbatchdistribut": 14, "probabl": [14, 15, 16, 20], "rsampl": [14, 15, 16, 20], "sample_shap": [14, 15, 16, 20], "shape": [14, 15, 16, 18, 20, 21, 32, 35], "reparameter": [14, 15, 16, 20], "sampl": [14, 15, 16, 18, 20, 21, 25, 28, 32], "batch": [14, 15, 16, 20], "distributionmodul": [15, 16], "validate_arg": [15, 16], "conditionaldistributionmodul": [15, 16, 20], "conditionaltransformeddistributionmodul": [15, 16], "base_dist": [15, 16, 18], "conditionaltransform": [15, 16, 17], "conditionaltransformeddistribut": [15, 16], "clear_cach": [15, 16], "transformeddistributionmodul": [15, 16, 20], "log_prob": [15, 16, 20], "densiti": [15, 16, 20], "mass": [15, 16, 20], "input_dim": [16, 17, 18, 19, 20, 35, 36, 37], "loc": [16, 17, 20], "initial_scal": [16, 17], "conditionedlinear": [16, 17], "transformmodul": [16, 17, 18, 19], "_param": [16, 17], "conditionallinear": [16, 17], "skip_connect": [16, 17], "conditionaltransformmodul": [16, 17], "learnabl": [16, 17, 19], "normal": [16, 17, 18, 19], "flow": [16, 17, 19, 35], "rather": [16, 17, 19], "than": [16, 17, 19], "so": [16, 17, 18, 19, 35], "conditional_linear": [16, 17, 20, 23, 25, 26, 27, 28, 29, 32], "context_dim": [16, 17, 20, 35], "conditional_skip_linear": [16, 17], "learn_loc": [16, 17], "splittransform": [16, 19], "out_dim": [16, 19], "dist": [16, 18, 19], "add_dim": [16, 19], "remove_dim": [16, 19], "reorder": [16, 18], "dimens": [16, 18, 35], "multipli": [16, 18], "matrix": [16, 18], "between": [16, 18], "affineautoregress": [16, 18], "flexibl": [16, 18], "result": [16, 18], "stabil": [16, 18], "learn": [16, 18], "whilst": [16, 18], "being": [16, 18], "autoregress": [16, 18, 35], "absolut": [16, 18], "determin": [16, 18, 43], "easili": [16, 18], "calcul": [16, 18], "two": [16, 18, 35], "layer": [16, 18, 35], "equival": [16, 18], "insid": [16, 18], "those": [16, 18], "iaf": [16, 18], "usag": [16, 18, 35], "autoregressivenn": [16, 18], "10": [16, 18, 35, 38], "ones": [16, 18], "iaf1": [16, 18], "40": [16, 18], "randperm": [16, 18], "dtype": [16, 18], "long": [16, 18], "iaf2": [16, 18], "flow_dist": [16, 18], "longtensor": [16, 18], "order": [16, 18], "appli": [16, 18, 21, 35, 43], "neg": [16, 18], "event": [16, 18, 43], "ab": [16, 18], "update_devic": [16, 18], "invok": [16, 18], "prototyp": [16, 18], "previou": [16, 18], "elementwis": [16, 18], "e": [16, 18, 35, 43], "dy_0": [16, 18], "dx_0": [16, 18], "dy_": [16, 18], "n": [16, 18, 21, 32], "dx_": [16, 18], "express": [16, 18, 43], "turn": [16, 18], "out": [16, 18, 46], "alwai": [16, 18, 44], "vector": [16, 18], "object": [16, 18, 21, 32], "consist": [16, 18], "tupl": [16, 18, 39, 40], "correspond": [16, 18], "integ": [16, 18], "indic": [16, 18], "default": [16, 18, 35], "random": [16, 18], "fetch_transform": 20, "transform_nam": [20, 23, 25, 28, 29, 32], "normalmodul": 20, "conditionalstandardnormalmodul": 20, "n_dim": 20, "conditional_transformed_norm": 20, "n_transform": [20, 23, 25, 28, 29, 32], "transform_param": 20, "transformed_norm": 20, "conditional_categor": 20, "n_class": 20, "conditional_mutivariate_categor": 20, "loss": [21, 32, 36, 37, 38], "__add__": 21, "__sub__": 21, "fn": 21, "logratioestim": [21, 32], "log_ratio": [21, 22, 24, 28, 30, 31, 32], "mutualinformationestim": [21, 22, 24, 28, 31, 32, 40], "lower_bound": [21, 22, 32], "upper_bound": [21, 22, 32], "d": [21, 32], "p": [21, 32], "m": [21, 32], "j": [21, 22, 32], "quantiti": [21, 32], "differenti": [21, 32], "maxim": [21, 32], "mutual": [21, 32], "w": [21, 32], "r": [21, 32], "propos": [21, 32, 44], "encod": [21, 32, 37, 38], "compon": [21, 32], "discriminativemutualinformationestim": [22, 31, 32], "unnormalized_log_ratio": [22, 32], "mc_sampl": [22, 32], "sample_propos": 22, "_compute_log_ratio": [22, 32], "y_": [22, 32], "_compute_log_ratio_grad": [22, 32], "nwj": [22, 32], "tuba": [22, 32], "grad_baselin": [22, 32], "mine": [22, 32], "infonc": [22, 32], "alphatuba": [22, 32], "smile": [22, 32], "tau": [22, 32], "flo": [22, 32], "baseline_param": [22, 32], "alpha_tuba": [22, 32], "01": [22, 32], "learnable_baselin": [22, 32], "conditional_y_x": [23, 24, 25, 26, 28, 29, 32], "marginal_i": [23, 26, 27, 28, 32], "entropy_i": [23, 27, 28, 32], "variationalproposalmutualinformationestim": [23, 24, 25, 28, 29, 31, 32], "log_prob_i": [23, 24, 25, 27, 28, 29, 32], "compute_loss": [23, 24, 27, 28, 32], "log_p_i": [23, 24, 27, 28, 32], "log_p_y_x": [23, 24, 27, 28, 32], "generativemutualinformationestim": [24, 27, 28, 30, 32], "log_prob_y_x": [24, 27, 28, 32], "conditional_transform_nam": [26, 28, 32], "n_conditional_transform": [26, 28, 32], "marginal_transform_nam": [26, 27, 28, 32], "n_marginal_transform": [26, 27, 28, 32], "joint_xi": [27, 28, 32], "marginal_x": [27, 28, 32], "entropy_x": [27, 28, 32], "log_prob_x": [27, 28, 32], "joint_transform_nam": [27, 28, 32], "n_joint_transform": [27, 28, 32], "conditional_qy_x": [28, 30, 32], "quantizationfunct": [28, 30, 32, 36, 37], "hybridmutualinformationestim": [31, 32], "generative_estim": [31, 32], "discriminative_estim": [31, 32], "__version__": [33, 45], "jointdensenn": 35, "param_dim": 35, "densenn": 35, "simpl": 35, "dens": 35, "feedforward": 35, "g": 35, "some": 35, "conditionalplanarflow": 35, "uncondit": 35, "affinecoupl": 35, "requir": [35, 44], "rand": 35, "100": 35, "50": 35, "c": 35, "dimension": 35, "hidden": 35, "unit": 35, "p_n": 35, "final": 35, "unbound": 35, "real": 35, "number": 35, "constant": 35, "ident": [35, 43], "skipdensenn": 35, "mergeoutput": 35, "n_bin": [36, 37, 38], "learnablequant": [36, 37], "vectorquant": [36, 37], "codebook_lookup": [36, 37], "learnablevectorquant": [36, 37, 38], "quantization_dim": [36, 37, 38], "fixedquant": [36, 37], "threshold": [36, 37], "learnable_vector_quant": [36, 37], "trained_vector_quant": [36, 37], "dataload": [36, 37, 40], "iter": [36, 37, 39, 40], "cross_mod": [36, 37, 38], "decoder_transform_param": [36, 37, 38], "beta": [36, 37, 38], "n_train_epoch": [36, 37], "optimizer_class": [36, 37, 40], "optim": [36, 37, 40], "adam": [36, 37, 40], "optimizer_param": [36, 37, 40], "decod": [37, 38], "25": [37, 38], "99": [37, 38], "initial_pati": 38, "sampledataload": 39, "joint_dist": 39, "batch_siz": 39, "max_sampl": 39, "100000": 39, "split_dim": 39, "collect": [39, 40], "__next__": 39, "next": 39, "item": 39, "exhaust": 39, "rais": 39, "stopiter": 39, "__len__": 39, "optimize_mi_estim": 40, "n_epoch": 40, "panda": 40, "datafram": 40, "estimate_mi": 40, "estimate_mi_std": 40, "first": 42, "releas": [42, 44, 46], "In": 43, "foster": 43, "open": [43, 44], "welcom": [43, 44], "environ": 43, "we": 43, "contributor": 43, "make": [43, 44], "particip": 43, "project": [43, 44, 45, 46], "commun": 43, "harass": 43, "free": [43, 44], "experi": 43, "everyon": 43, "regardless": 43, "ag": 43, "bodi": 43, "disabl": 43, "ethnic": 43, "gender": 43, "level": 43, "nation": 43, "person": 43, "appear": 43, "race": 43, "religion": 43, "sexual": 43, "orient": 43, "behavior": 43, "contribut": 43, "posit": 43, "includ": [43, 44], "inclus": 43, "languag": 43, "Being": 43, "respect": 43, "differ": 43, "viewpoint": 43, "gracefulli": 43, "accept": 43, "construct": 43, "focus": 43, "what": 43, "best": 43, "show": 43, "empathi": 43, "toward": 43, "member": 43, "unaccept": 43, "imageri": 43, "unwelcom": 43, "attent": 43, "advanc": 43, "troll": 43, "insult": 43, "derogatori": 43, "comment": 43, "polit": 43, "attack": 43, "public": 43, "privat": 43, "publish": 43, "physic": 43, "electron": 43, "address": 43, "explicit": 43, "permiss": 43, "could": 43, "reason": 43, "consid": 43, "inappropri": 43, "profession": 43, "clarifi": 43, "expect": 43, "take": 43, "appropri": [43, 44], "fair": 43, "correct": 43, "action": 43, "instanc": 43, "right": 43, "remov": 43, "edit": 43, "reject": 43, "wiki": 43, "issu": [43, 44], "align": 43, "ban": 43, "temporarili": 43, "perman": 43, "deem": 43, "threaten": 43, "offens": 43, "harm": 43, "within": 43, "space": 43, "individu": 43, "its": [43, 44, 46], "offici": [43, 44], "mail": 43, "post": [43, 44], "via": 43, "social": 43, "media": 43, "account": 43, "act": 43, "appoint": 43, "onlin": 43, "offlin": 43, "represent": 43, "further": 43, "abus": 43, "otherwis": 43, "report": 43, "contact": 43, "team": 43, "review": 43, "investig": 43, "complaint": 43, "respond": 43, "circumst": 43, "oblig": 43, "confidenti": 43, "regard": 43, "incid": 43, "detail": [43, 44], "specif": 43, "polici": 43, "who": 43, "good": 43, "faith": 43, "face": 43, "temporari": 43, "repercuss": 43, "leadership": 43, "adapt": 43, "coven": 43, "homepag": 43, "4": 43, "greatli": 44, "appreci": 44, "littl": 44, "bit": 44, "help": 44, "credit": 44, "pleas": [44, 46], "oper": 44, "system": 44, "about": 44, "local": 44, "setup": 44, "might": 44, "troubleshoot": 44, "step": 44, "reproduc": 44, "look": 44, "through": 44, "github": 44, "anyth": 44, "tag": 44, "want": 44, "whoever": 44, "enhanc": 44, "never": 44, "enough": 44, "feel": 44, "part": 44, "docstr": 44, "even": 44, "web": 44, "blog": 44, "articl": 44, "explain": 44, "how": 44, "would": 44, "keep": 44, "scope": 44, "narrow": 44, "possibl": 44, "easier": 44, "rememb": 44, "volunt": 44, "driven": 44, "readi": 44, "here": 44, "up": 44, "develop": 44, "download": 44, "copi": 44, "instal": 44, "poetri": 44, "git": 44, "similar": 44, "branch": 44, "chang": 44, "checkout": 44, "bugfix": 44, "re": 44, "check": [44, 46], "conform": 44, "format": 44, "pass": 44, "test": 44, "meet": 44, "addit": 44, "add": 44, "updat": 44, "current": 44, "python": 44, "By": [44, 46], "agre": [44, 46], "abid": [44, 46], "term": [44, 46], "To": 45, "print": 45, "TO": 46, "BE": 46, "soon": 46, "pip": 46, "todo": 46, "guidelin": 46, "code": 46, "conduct": 46, "wa": 46, "marco": 46, "federici": 46, "It": 46, "under": 46, "mit": 46, "cookiecutt": 46, "py": 46, "pkg": 46, "templat": 46}, "objects": {"": [[33, 0, 0, "-", "torch_mist"]], "torch_mist": [[33, 1, 1, "", "__version__"], [2, 0, 0, "-", "baselines"], [4, 0, 0, "-", "critic"], [11, 0, 0, "-", "distributions"], [32, 0, 0, "-", "estimators"], [34, 0, 0, "-", "nn"], [37, 0, 0, "-", "quantization"], [41, 0, 0, "-", "utils"]], "torch_mist.baselines": [[2, 2, 1, "", "AlphaTUBABaseline"], [2, 2, 1, "", "Baseline"], [2, 2, 1, "", "BatchLogMeanExp"], [2, 2, 1, "", "ConstantBaseline"], [2, 2, 1, "", "ExponentialMovingAverage"], [2, 2, 1, "", "InterpolatedBaseline"], [2, 2, 1, "", "LearnableBaseline"], [2, 2, 1, "", "LearnableJointBaseline"], [2, 2, 1, "", "LearnableJointMLPBaseline"], [2, 2, 1, "", "LearnableMLPBaseline"]], "torch_mist.baselines.Baseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.BatchLogMeanExp": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.ConstantBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.ExponentialMovingAverage": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.InterpolatedBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.LearnableBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.LearnableJointBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.critic": [[4, 2, 1, "", "Critic"], [4, 2, 1, "", "JointCritic"], [4, 2, 1, "", "SeparableCritic"], [3, 0, 0, "-", "base"], [4, 4, 1, "", "critic"], [5, 0, 0, "-", "joint"], [4, 4, 1, "", "joint_critic"], [6, 0, 0, "-", "separable"], [4, 4, 1, "", "separable_critic"], [7, 0, 0, "-", "utils"]], "torch_mist.critic.Critic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.JointCritic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.SeparableCritic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.base": [[3, 2, 1, "", "Critic"]], "torch_mist.critic.base.Critic": [[3, 3, 1, "", "forward"]], "torch_mist.critic.joint": [[5, 2, 1, "", "JointCritic"]], "torch_mist.critic.joint.JointCritic": [[5, 3, 1, "", "forward"]], "torch_mist.critic.separable": [[6, 2, 1, "", "SeparableCritic"]], "torch_mist.critic.separable.SeparableCritic": [[6, 3, 1, "", "forward"]], "torch_mist.critic.utils": [[7, 4, 1, "", "critic"], [7, 4, 1, "", "joint_critic"], [7, 4, 1, "", "separable_critic"]], "torch_mist.distributions": [[10, 0, 0, "-", "conditional"], [12, 0, 0, "-", "parametrizations"], [14, 0, 0, "-", "product"], [16, 0, 0, "-", "transforms"], [20, 0, 0, "-", "utils"]], "torch_mist.distributions.conditional": [[10, 2, 1, "", "ConditionalCategorical"], [10, 2, 1, "", "CorrelatedNormal"], [10, 2, 1, "", "CubicCorrelatedNormal"], [10, 2, 1, "", "SkewedCorrelatedNormal"], [8, 0, 0, "-", "categorical"], [9, 0, 0, "-", "correlated_normal"]], "torch_mist.distributions.conditional.ConditionalCategorical": [[10, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.CorrelatedNormal": [[10, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.CubicCorrelatedNormal": [[10, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.SkewedCorrelatedNormal": [[10, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.categorical": [[8, 2, 1, "", "ConditionalCategorical"]], "torch_mist.distributions.conditional.categorical.ConditionalCategorical": [[8, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.correlated_normal": [[9, 2, 1, "", "CorrelatedNormal"], [9, 2, 1, "", "CubicCorrelatedNormal"], [9, 2, 1, "", "CubicPTransform"], [9, 2, 1, "", "RandomFlipTransform"], [9, 2, 1, "", "SkewedCorrelatedNormal"], [9, 2, 1, "", "Translate"]], "torch_mist.distributions.conditional.correlated_normal.CorrelatedNormal": [[9, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.correlated_normal.CubicCorrelatedNormal": [[9, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.correlated_normal.CubicPTransform": [[9, 3, 1, "", "_call"], [9, 3, 1, "", "_inverse"], [9, 5, 1, "id0", "bijective"], [9, 5, 1, "id2", "codomain"], [9, 5, 1, "id1", "domain"], [9, 3, 1, "", "log_abs_det_jacobian"], [9, 5, 1, "", "sign"]], "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform": [[9, 3, 1, "", "_call"], [9, 5, 1, "id3", "bijective"], [9, 5, 1, "id5", "codomain"], [9, 5, 1, "id4", "domain"], [9, 5, 1, "", "sign"]], "torch_mist.distributions.conditional.correlated_normal.SkewedCorrelatedNormal": [[9, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.correlated_normal.Translate": [[9, 3, 1, "", "_call"], [9, 3, 1, "", "_inverse"], [9, 5, 1, "id6", "bijective"], [9, 5, 1, "id8", "codomain"], [9, 5, 1, "id7", "domain"], [9, 3, 1, "", "log_abs_det_jacobian"], [9, 5, 1, "", "sign"]], "torch_mist.distributions.parametrizations": [[13, 0, 0, "-", "map"]], "torch_mist.distributions.parametrizations.map": [[13, 2, 1, "", "DeltaMap"], [13, 1, 1, "", "EPSILON"], [13, 2, 1, "", "LocScaleMap"], [13, 2, 1, "", "LogitsMap"], [13, 2, 1, "", "ParameterMap"], [13, 2, 1, "", "TemperatureLogitsMap"]], "torch_mist.distributions.parametrizations.map.DeltaMap": [[13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "n_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.LocScaleMap": [[13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.LogitsMap": [[13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "n_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.ParameterMap": [[13, 3, 1, "", "__call__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "extra_repr"], [13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "n_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.TemperatureLogitsMap": [[13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "n_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.product": [[14, 2, 1, "", "ShuffledBatchDistribution"]], "torch_mist.distributions.product.ShuffledBatchDistribution": [[14, 3, 1, "", "rsample"], [14, 3, 1, "", "sample"]], "torch_mist.distributions.transforms": [[16, 2, 1, "", "ConditionalDistributionModule"], [16, 2, 1, "", "ConditionalLinear"], [16, 2, 1, "", "ConditionalTransformedDistributionModule"], [16, 2, 1, "", "DistributionModule"], [16, 2, 1, "", "Linear"], [16, 2, 1, "", "Permute"], [16, 2, 1, "", "SplitTransform"], [16, 2, 1, "", "TransformedDistributionModule"], [15, 0, 0, "-", "base"], [16, 4, 1, "", "conditional_linear"], [16, 4, 1, "", "conditional_skip_linear"], [17, 0, 0, "-", "linear"], [18, 0, 0, "-", "permute"], [19, 0, 0, "-", "split"]], "torch_mist.distributions.transforms.ConditionalLinear": [[16, 3, 1, "", "_params"], [16, 5, 1, "", "bijective"], [16, 5, 1, "", "codomain"], [16, 3, 1, "", "condition"], [16, 5, 1, "", "domain"]], "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule": [[16, 3, 1, "", "__repr__"], [16, 3, 1, "", "clear_cache"], [16, 3, 1, "", "condition"]], "torch_mist.distributions.transforms.DistributionModule": [[16, 3, 1, "", "__repr__"]], "torch_mist.distributions.transforms.Linear": [[16, 3, 1, "", "_params"], [16, 5, 1, "", "bijective"], [16, 5, 1, "", "codomain"], [16, 5, 1, "", "domain"], [16, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.Permute": [[16, 3, 1, "", "_call"], [16, 3, 1, "", "_inverse"], [16, 3, 1, "", "log_abs_det_jacobian"], [16, 3, 1, "", "update_device"]], "torch_mist.distributions.transforms.SplitTransform": [[16, 3, 1, "", "_call"], [16, 3, 1, "", "_inverse"], [16, 3, 1, "", "add_dims"], [16, 5, 1, "", "codomain"], [16, 3, 1, "", "dist"], [16, 5, 1, "", "domain"], [16, 3, 1, "", "log_abs_det_jacobian"], [16, 3, 1, "", "remove_dims"]], "torch_mist.distributions.transforms.TransformedDistributionModule": [[16, 3, 1, "", "__repr__"], [16, 3, 1, "", "log_prob"], [16, 3, 1, "", "rsample"]], "torch_mist.distributions.transforms.base": [[15, 2, 1, "", "ConditionalDistributionModule"], [15, 2, 1, "", "ConditionalTransformedDistributionModule"], [15, 2, 1, "", "DistributionModule"], [15, 2, 1, "", "TransformedDistributionModule"]], "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule": [[15, 3, 1, "", "__repr__"], [15, 3, 1, "", "clear_cache"], [15, 3, 1, "", "condition"]], "torch_mist.distributions.transforms.base.DistributionModule": [[15, 3, 1, "", "__repr__"]], "torch_mist.distributions.transforms.base.TransformedDistributionModule": [[15, 3, 1, "", "__repr__"], [15, 3, 1, "", "log_prob"], [15, 3, 1, "", "rsample"]], "torch_mist.distributions.transforms.linear": [[17, 2, 1, "", "ConditionalLinear"], [17, 2, 1, "", "ConditionedLinear"], [17, 2, 1, "", "Linear"], [17, 4, 1, "", "conditional_linear"], [17, 4, 1, "", "conditional_skip_linear"], [17, 4, 1, "", "linear"]], "torch_mist.distributions.transforms.linear.ConditionalLinear": [[17, 3, 1, "", "_params"], [17, 5, 1, "", "bijective"], [17, 5, 1, "", "codomain"], [17, 3, 1, "", "condition"], [17, 5, 1, "", "domain"]], "torch_mist.distributions.transforms.linear.ConditionedLinear": [[17, 3, 1, "", "_call"], [17, 3, 1, "", "_inverse"], [17, 5, 1, "id2", "bijective"], [17, 5, 1, "id1", "codomain"], [17, 5, 1, "id0", "domain"], [17, 3, 1, "", "log_abs_det_jacobian"], [17, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.linear.Linear": [[17, 3, 1, "", "_params"], [17, 5, 1, "", "bijective"], [17, 5, 1, "", "codomain"], [17, 5, 1, "", "domain"], [17, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.permute": [[18, 2, 1, "", "Permute"], [18, 4, 1, "", "permute"]], "torch_mist.distributions.transforms.permute.Permute": [[18, 3, 1, "", "_call"], [18, 3, 1, "", "_inverse"], [18, 3, 1, "", "log_abs_det_jacobian"], [18, 3, 1, "", "update_device"]], "torch_mist.distributions.transforms.split": [[19, 2, 1, "", "SplitTransform"]], "torch_mist.distributions.transforms.split.SplitTransform": [[19, 3, 1, "", "_call"], [19, 3, 1, "", "_inverse"], [19, 3, 1, "", "add_dims"], [19, 5, 1, "", "codomain"], [19, 3, 1, "", "dist"], [19, 5, 1, "", "domain"], [19, 3, 1, "", "log_abs_det_jacobian"], [19, 3, 1, "", "remove_dims"]], "torch_mist.distributions.utils": [[20, 2, 1, "", "ConditionalStandardNormalModule"], [20, 2, 1, "", "NormalModule"], [20, 4, 1, "", "conditional_categorical"], [20, 4, 1, "", "conditional_mutivariate_categorical"], [20, 4, 1, "", "conditional_transformed_normal"], [20, 4, 1, "", "fetch_transform"], [20, 4, 1, "", "transformed_normal"]], "torch_mist.distributions.utils.ConditionalStandardNormalModule": [[20, 3, 1, "", "condition"]], "torch_mist.distributions.utils.NormalModule": [[20, 3, 1, "", "__repr__"], [20, 3, 1, "", "log_prob"], [20, 3, 1, "", "rsample"]], "torch_mist.estimators": [[32, 2, 1, "", "AlphaTUBA"], [32, 2, 1, "", "BA"], [32, 2, 1, "", "CLUB"], [32, 2, 1, "", "DoE"], [32, 2, 1, "", "FLO"], [32, 2, 1, "", "GM"], [32, 2, 1, "", "GenerativeMutualInformationEstimator"], [32, 2, 1, "", "HybridMutualInformationEstimator"], [32, 2, 1, "", "InfoNCE"], [32, 2, 1, "", "JS"], [32, 2, 1, "", "L1Out"], [32, 2, 1, "", "MINE"], [32, 2, 1, "", "MutualInformationEstimator"], [32, 2, 1, "", "NWJ"], [32, 2, 1, "", "PQ"], [32, 2, 1, "", "SMILE"], [32, 2, 1, "", "TUBA"], [32, 2, 1, "", "VariationalProposalMutualInformationEstimator"], [32, 4, 1, "", "alpha_tuba"], [32, 4, 1, "", "ba"], [21, 0, 0, "-", "base"], [32, 4, 1, "", "club"], [22, 0, 0, "-", "discriminative"], [32, 4, 1, "", "doe"], [32, 4, 1, "", "flo"], [28, 0, 0, "-", "generative"], [32, 4, 1, "", "gm"], [31, 0, 0, "-", "hybrid"], [32, 4, 1, "", "infonce"], [32, 4, 1, "", "js"], [32, 4, 1, "", "l1out"], [32, 4, 1, "", "mine"], [32, 4, 1, "", "nwj"], [32, 4, 1, "", "pq"], [32, 4, 1, "", "smile"], [32, 4, 1, "", "tuba"]], "torch_mist.estimators.BA": [[32, 3, 1, "", "compute_loss"], [32, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.CLUB": [[32, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.DoE": [[32, 3, 1, "", "__repr__"]], "torch_mist.estimators.FLO": [[32, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.GM": [[32, 3, 1, "", "__repr__"], [32, 3, 1, "", "compute_loss"], [32, 3, 1, "", "log_prob_x"], [32, 3, 1, "", "log_prob_y"], [32, 3, 1, "", "log_prob_y_x"]], "torch_mist.estimators.GenerativeMutualInformationEstimator": [[32, 3, 1, "", "compute_loss"], [32, 3, 1, "", "log_prob_y"], [32, 3, 1, "", "log_prob_y_x"], [32, 3, 1, "", "log_ratio"]], "torch_mist.estimators.HybridMutualInformationEstimator": [[32, 3, 1, "", "log_ratio"]], "torch_mist.estimators.InfoNCE": [[32, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.JS": [[32, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.L1Out": [[32, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.MutualInformationEstimator": [[32, 3, 1, "", "forward"], [32, 5, 1, "", "lower_bound"], [32, 5, 1, "", "upper_bound"]], "torch_mist.estimators.NWJ": [[32, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.PQ": [[32, 3, 1, "", "log_ratio"]], "torch_mist.estimators.SMILE": [[32, 3, 1, "", "_compute_log_ratio"], [32, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.TUBA": [[32, 3, 1, "", "__repr__"], [32, 3, 1, "", "_compute_log_ratio"], [32, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.VariationalProposalMutualInformationEstimator": [[32, 3, 1, "", "__repr__"], [32, 3, 1, "", "compute_loss"], [32, 3, 1, "", "log_prob_y_x"]], "torch_mist.estimators.base": [[21, 2, 1, "", "Estimation"], [21, 2, 1, "", "LogRatioEstimator"], [21, 2, 1, "", "MutualInformationEstimator"]], "torch_mist.estimators.base.Estimation": [[21, 3, 1, "", "__add__"], [21, 3, 1, "", "__sub__"], [21, 3, 1, "", "apply"], [21, 5, 1, "", "loss"], [21, 6, 1, "", "shape"], [21, 5, 1, "", "value"]], "torch_mist.estimators.base.LogRatioEstimator": [[21, 3, 1, "", "forward"], [21, 3, 1, "", "log_ratio"]], "torch_mist.estimators.base.MutualInformationEstimator": [[21, 3, 1, "", "forward"], [21, 5, 1, "", "lower_bound"], [21, 5, 1, "", "upper_bound"]], "torch_mist.estimators.discriminative": [[22, 2, 1, "", "AlphaTUBA"], [22, 2, 1, "", "DiscriminativeMutualInformationEstimator"], [22, 2, 1, "", "FLO"], [22, 2, 1, "", "InfoNCE"], [22, 2, 1, "", "JS"], [22, 2, 1, "", "MINE"], [22, 2, 1, "", "NWJ"], [22, 2, 1, "", "SMILE"], [22, 2, 1, "", "TUBA"], [22, 4, 1, "", "alpha_tuba"], [22, 4, 1, "", "flo"], [22, 4, 1, "", "infonce"], [22, 4, 1, "", "js"], [22, 4, 1, "", "mine"], [22, 4, 1, "", "nwj"], [22, 4, 1, "", "smile"], [22, 4, 1, "", "tuba"]], "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator": [[22, 3, 1, "", "__repr__"], [22, 3, 1, "", "_compute_log_ratio"], [22, 3, 1, "", "_compute_log_ratio_grad"], [22, 3, 1, "", "log_ratio"], [22, 5, 1, "", "lower_bound"], [22, 3, 1, "", "sample_proposal"], [22, 5, 1, "", "upper_bound"]], "torch_mist.estimators.discriminative.FLO": [[22, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.discriminative.InfoNCE": [[22, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.discriminative.JS": [[22, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.discriminative.NWJ": [[22, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.discriminative.SMILE": [[22, 3, 1, "", "_compute_log_ratio"], [22, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.discriminative.TUBA": [[22, 3, 1, "", "__repr__"], [22, 3, 1, "", "_compute_log_ratio"], [22, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.generative": [[28, 2, 1, "", "BA"], [28, 2, 1, "", "CLUB"], [28, 2, 1, "", "DoE"], [28, 2, 1, "", "GM"], [28, 2, 1, "", "GenerativeMutualInformationEstimator"], [28, 2, 1, "", "L1Out"], [28, 2, 1, "", "PQ"], [28, 2, 1, "", "VariationalProposalMutualInformationEstimator"], [28, 4, 1, "", "ba"], [23, 0, 0, "-", "ba"], [24, 0, 0, "-", "base"], [28, 4, 1, "", "club"], [25, 0, 0, "-", "club"], [28, 4, 1, "", "doe"], [26, 0, 0, "-", "doe"], [28, 4, 1, "", "gm"], [27, 0, 0, "-", "gm"], [29, 0, 0, "-", "l1out"], [30, 0, 0, "-", "pq"]], "torch_mist.estimators.generative.BA": [[28, 3, 1, "", "compute_loss"], [28, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.generative.CLUB": [[28, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.generative.DoE": [[28, 3, 1, "", "__repr__"]], "torch_mist.estimators.generative.GM": [[28, 3, 1, "", "__repr__"], [28, 3, 1, "", "compute_loss"], [28, 3, 1, "", "log_prob_x"], [28, 3, 1, "", "log_prob_y"], [28, 3, 1, "", "log_prob_y_x"]], "torch_mist.estimators.generative.GenerativeMutualInformationEstimator": [[28, 3, 1, "", "compute_loss"], [28, 3, 1, "", "log_prob_y"], [28, 3, 1, "", "log_prob_y_x"], [28, 3, 1, "", "log_ratio"]], "torch_mist.estimators.generative.L1Out": [[28, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.generative.PQ": [[28, 3, 1, "", "log_ratio"]], "torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator": [[28, 3, 1, "", "__repr__"], [28, 3, 1, "", "compute_loss"], [28, 3, 1, "", "log_prob_y_x"]], "torch_mist.estimators.generative.ba": [[23, 2, 1, "", "BA"], [23, 4, 1, "", "ba"]], "torch_mist.estimators.generative.ba.BA": [[23, 3, 1, "", "compute_loss"], [23, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.generative.base": [[24, 2, 1, "", "GenerativeMutualInformationEstimator"], [24, 2, 1, "", "VariationalProposalMutualInformationEstimator"]], "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator": [[24, 3, 1, "", "compute_loss"], [24, 3, 1, "", "log_prob_y"], [24, 3, 1, "", "log_prob_y_x"], [24, 3, 1, "", "log_ratio"]], "torch_mist.estimators.generative.base.VariationalProposalMutualInformationEstimator": [[24, 3, 1, "", "__repr__"], [24, 3, 1, "", "compute_loss"], [24, 3, 1, "", "log_prob_y_x"]], "torch_mist.estimators.generative.club": [[25, 2, 1, "", "CLUB"], [25, 4, 1, "", "club"]], "torch_mist.estimators.generative.club.CLUB": [[25, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.generative.doe": [[26, 2, 1, "", "DoE"], [26, 4, 1, "", "doe"]], "torch_mist.estimators.generative.doe.DoE": [[26, 3, 1, "", "__repr__"]], "torch_mist.estimators.generative.gm": [[27, 2, 1, "", "GM"], [27, 4, 1, "", "gm"]], "torch_mist.estimators.generative.gm.GM": [[27, 3, 1, "", "__repr__"], [27, 3, 1, "", "compute_loss"], [27, 3, 1, "", "log_prob_x"], [27, 3, 1, "", "log_prob_y"], [27, 3, 1, "", "log_prob_y_x"]], "torch_mist.estimators.generative.l1out": [[29, 2, 1, "", "L1Out"], [29, 4, 1, "", "l1out"]], "torch_mist.estimators.generative.l1out.L1Out": [[29, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.generative.pq": [[30, 2, 1, "", "PQ"], [30, 4, 1, "", "pq"]], "torch_mist.estimators.generative.pq.PQ": [[30, 3, 1, "", "log_ratio"]], "torch_mist.estimators.hybrid": [[31, 2, 1, "", "HybridMutualInformationEstimator"]], "torch_mist.estimators.hybrid.HybridMutualInformationEstimator": [[31, 3, 1, "", "log_ratio"]], "torch_mist.nn": [[35, 0, 0, "-", "utils"]], "torch_mist.nn.utils": [[35, 2, 1, "", "Constant"], [35, 2, 1, "", "Identity"], [35, 2, 1, "", "JointDenseNN"], [35, 2, 1, "", "MergeOutputs"], [35, 2, 1, "", "SkipDenseNN"]], "torch_mist.nn.utils.Constant": [[35, 3, 1, "", "__repr__"], [35, 3, 1, "", "forward"]], "torch_mist.nn.utils.Identity": [[35, 3, 1, "", "forward"]], "torch_mist.nn.utils.JointDenseNN": [[35, 3, 1, "", "forward"]], "torch_mist.nn.utils.MergeOutputs": [[35, 3, 1, "", "forward"]], "torch_mist.nn.utils.SkipDenseNN": [[35, 3, 1, "", "forward"]], "torch_mist.quantization": [[37, 2, 1, "", "FixedQuantization"], [37, 2, 1, "", "LearnableQuantization"], [37, 2, 1, "", "LearnableVectorQuantization"], [37, 2, 1, "", "QuantizationFunction"], [37, 2, 1, "", "VQVAE"], [37, 2, 1, "", "VectorQuantization"], [36, 0, 0, "-", "functions"], [37, 4, 1, "", "learnable_vector_quantization"], [37, 4, 1, "", "trained_vector_quantization"], [38, 0, 0, "-", "vqvae"]], "torch_mist.quantization.FixedQuantization": [[37, 3, 1, "", "forward"], [37, 6, 1, "", "n_bins"]], "torch_mist.quantization.LearnableQuantization": [[37, 3, 1, "", "loss"]], "torch_mist.quantization.LearnableVectorQuantization": [[37, 3, 1, "", "forward"]], "torch_mist.quantization.QuantizationFunction": [[37, 3, 1, "", "forward"], [37, 6, 1, "", "n_bins"]], "torch_mist.quantization.VQVAE": [[37, 3, 1, "", "loss"]], "torch_mist.quantization.VectorQuantization": [[37, 3, 1, "", "codebook_lookup"], [37, 3, 1, "", "forward"], [37, 6, 1, "", "n_bins"]], "torch_mist.quantization.functions": [[36, 2, 1, "", "FixedQuantization"], [36, 2, 1, "", "LearnableQuantization"], [36, 2, 1, "", "LearnableVectorQuantization"], [36, 2, 1, "", "QuantizationFunction"], [36, 2, 1, "", "VectorQuantization"], [36, 4, 1, "", "learnable_vector_quantization"], [36, 4, 1, "", "trained_vector_quantization"]], "torch_mist.quantization.functions.FixedQuantization": [[36, 3, 1, "", "forward"], [36, 6, 1, "", "n_bins"]], "torch_mist.quantization.functions.LearnableQuantization": [[36, 3, 1, "", "loss"]], "torch_mist.quantization.functions.LearnableVectorQuantization": [[36, 3, 1, "", "forward"]], "torch_mist.quantization.functions.QuantizationFunction": [[36, 3, 1, "", "forward"], [36, 6, 1, "", "n_bins"]], "torch_mist.quantization.functions.VectorQuantization": [[36, 3, 1, "", "codebook_lookup"], [36, 3, 1, "", "forward"], [36, 6, 1, "", "n_bins"]], "torch_mist.quantization.vqvae": [[38, 1, 1, "", "INITIAL_PATIENCE"], [38, 2, 1, "", "VQVAE"], [38, 4, 1, "", "vqvae"]], "torch_mist.quantization.vqvae.VQVAE": [[38, 3, 1, "", "loss"]], "torch_mist.utils": [[39, 0, 0, "-", "data"], [40, 0, 0, "-", "estimate"]], "torch_mist.utils.data": [[39, 2, 1, "", "SampleDataLoader"]], "torch_mist.utils.data.SampleDataLoader": [[39, 3, 1, "", "__len__"], [39, 3, 1, "", "__next__"]], "torch_mist.utils.estimate": [[40, 4, 1, "", "estimate_mi"], [40, 4, 1, "", "estimate_mi_std"], [40, 4, 1, "", "optimize_mi_estimator"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:function", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"pytest": 0, "cach": 0, "directori": 0, "api": 1, "refer": 1, "torch_mist": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "baselin": 2, "modul": [2, 3, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 35, 36, 38, 39, 40], "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40], "class": [2, 3, 4, 5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39], "critic": [3, 4, 5, 6, 7], "base": [3, 15, 21, 24], "submodul": [4, 10, 11, 12, 16, 28, 32, 33, 34, 37, 41], "packag": [4, 10, 16, 28, 32, 33, 37], "function": [4, 7, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 36, 37, 38, 40], "joint": 5, "separ": 6, "util": [7, 20, 35, 39, 40, 41], "distribut": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "condit": [8, 9, 10], "categor": 8, "correlated_norm": 9, "subpackag": [11, 32, 33], "parametr": [12, 13], "map": 13, "attribut": [13, 38, 43], "product": 14, "transform": [15, 16, 17, 18, 19], "linear": 17, "permut": 18, "split": 19, "estim": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 46], "discrimin": 22, "gener": [23, 24, 25, 26, 27, 28, 29, 30], "ba": 23, "club": 25, "doe": 26, "gm": 27, "l1out": 29, "pq": 30, "hybrid": 31, "nn": [34, 35], "quantiz": [36, 37, 38], "vqvae": 38, "data": 39, "changelog": 42, "v0": 42, "1": 42, "0": 42, "20": 42, "06": 42, "2023": 42, "code": [43, 44], "conduct": [43, 44], "our": 43, "pledg": 43, "standard": 43, "respons": 43, "scope": 43, "enforc": 43, "contribut": [44, 46], "type": 44, "report": 44, "bug": 44, "fix": 44, "implement": 44, "featur": 44, "write": 44, "document": 44, "submit": 44, "feedback": 44, "get": 44, "start": 44, "pull": 44, "request": 44, "guidelin": 44, "exampl": 45, "usag": [45, 46], "mist": 46, "A": 46, "pytorch": 46, "mutual": 46, "inform": 46, "toolkit": 46, "instal": 46, "licens": 46, "credit": 46}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pytest cache directory": [[0, "pytest-cache-directory"]], "API Reference": [[1, "api-reference"]], "torch_mist.baselines": [[2, "module-torch_mist.baselines"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [35, "module-contents"], [36, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"]], "torch_mist.critic.base": [[3, "module-torch_mist.critic.base"]], "torch_mist.critic": [[4, "module-torch_mist.critic"]], "Submodules": [[4, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [16, "submodules"], [28, "submodules"], [32, "submodules"], [33, "submodules"], [34, "submodules"], [37, "submodules"], [41, "submodules"]], "Package Contents": [[4, "package-contents"], [10, "package-contents"], [16, "package-contents"], [28, "package-contents"], [32, "package-contents"], [33, "package-contents"], [37, "package-contents"]], "Functions": [[4, "functions"], [7, "functions"], [16, "functions"], [17, "functions"], [18, "functions"], [20, "functions"], [22, "functions"], [23, "functions"], [25, "functions"], [26, "functions"], [27, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [32, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [40, "functions"]], "torch_mist.critic.joint": [[5, "module-torch_mist.critic.joint"]], "torch_mist.critic.separable": [[6, "module-torch_mist.critic.separable"]], "torch_mist.critic.utils": [[7, "module-torch_mist.critic.utils"]], "torch_mist.distributions.conditional.categorical": [[8, "module-torch_mist.distributions.conditional.categorical"]], "torch_mist.distributions.conditional.correlated_normal": [[9, "module-torch_mist.distributions.conditional.correlated_normal"]], "torch_mist.distributions.conditional": [[10, "module-torch_mist.distributions.conditional"]], "torch_mist.distributions": [[11, "module-torch_mist.distributions"]], "Subpackages": [[11, "subpackages"], [32, "subpackages"], [33, "subpackages"]], "torch_mist.distributions.parametrizations": [[12, "module-torch_mist.distributions.parametrizations"]], "torch_mist.distributions.parametrizations.map": [[13, "module-torch_mist.distributions.parametrizations.map"]], "Attributes": [[13, "attributes"], [38, "attributes"]], "torch_mist.distributions.product": [[14, "module-torch_mist.distributions.product"]], "torch_mist.distributions.transforms.base": [[15, "module-torch_mist.distributions.transforms.base"]], "torch_mist.distributions.transforms": [[16, "module-torch_mist.distributions.transforms"]], "torch_mist.distributions.transforms.linear": [[17, "module-torch_mist.distributions.transforms.linear"]], "torch_mist.distributions.transforms.permute": [[18, "module-torch_mist.distributions.transforms.permute"]], "torch_mist.distributions.transforms.split": [[19, "module-torch_mist.distributions.transforms.split"]], "torch_mist.distributions.utils": [[20, "module-torch_mist.distributions.utils"]], "torch_mist.estimators.base": [[21, "module-torch_mist.estimators.base"]], "torch_mist.estimators.discriminative": [[22, "module-torch_mist.estimators.discriminative"]], "torch_mist.estimators.generative.ba": [[23, "module-torch_mist.estimators.generative.ba"]], "torch_mist.estimators.generative.base": [[24, "module-torch_mist.estimators.generative.base"]], "torch_mist.estimators.generative.club": [[25, "module-torch_mist.estimators.generative.club"]], "torch_mist.estimators.generative.doe": [[26, "module-torch_mist.estimators.generative.doe"]], "torch_mist.estimators.generative.gm": [[27, "module-torch_mist.estimators.generative.gm"]], "torch_mist.estimators.generative": [[28, "module-torch_mist.estimators.generative"]], "torch_mist.estimators.generative.l1out": [[29, "module-torch_mist.estimators.generative.l1out"]], "torch_mist.estimators.generative.pq": [[30, "module-torch_mist.estimators.generative.pq"]], "torch_mist.estimators.hybrid": [[31, "module-torch_mist.estimators.hybrid"]], "torch_mist.estimators": [[32, "module-torch_mist.estimators"]], "torch_mist": [[33, "module-torch_mist"]], "torch_mist.nn": [[34, "module-torch_mist.nn"]], "torch_mist.nn.utils": [[35, "module-torch_mist.nn.utils"]], "torch_mist.quantization.functions": [[36, "module-torch_mist.quantization.functions"]], "torch_mist.quantization": [[37, "module-torch_mist.quantization"]], "torch_mist.quantization.vqvae": [[38, "module-torch_mist.quantization.vqvae"]], "torch_mist.utils.data": [[39, "module-torch_mist.utils.data"]], "torch_mist.utils.estimate": [[40, "module-torch_mist.utils.estimate"]], "torch_mist.utils": [[41, "module-torch_mist.utils"]], "Changelog": [[42, "changelog"]], "v0.1.0 (20/06/2023)": [[42, "v0-1-0-20-06-2023"]], "Code of Conduct": [[43, "code-of-conduct"], [44, "code-of-conduct"]], "Our Pledge": [[43, "our-pledge"]], "Our Standards": [[43, "our-standards"]], "Our Responsibilities": [[43, "our-responsibilities"]], "Scope": [[43, "scope"]], "Enforcement": [[43, "enforcement"]], "Attribution": [[43, "attribution"]], "Contributing": [[44, "contributing"], [46, "contributing"]], "Types of Contributions": [[44, "types-of-contributions"]], "Report Bugs": [[44, "report-bugs"]], "Fix Bugs": [[44, "fix-bugs"]], "Implement Features": [[44, "implement-features"]], "Write Documentation": [[44, "write-documentation"]], "Submit Feedback": [[44, "submit-feedback"]], "Get Started!": [[44, "get-started"]], "Pull Request Guidelines": [[44, "pull-request-guidelines"]], "Example usage": [[45, "example-usage"]], "Mist - A PyTorch Mutual information Estimation toolkit": [[46, "mist-a-pytorch-mutual-information-estimation-toolkit"]], "Installation": [[46, "installation"]], "Usage": [[46, "usage"]], "License": [[46, "license"]], "Credits": [[46, "credits"]]}, "indexentries": {"alphatubabaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.AlphaTUBABaseline"]], "baseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.Baseline"]], "batchlogmeanexp (class in torch_mist.baselines)": [[2, "torch_mist.baselines.BatchLogMeanExp"]], "constantbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.ConstantBaseline"]], "exponentialmovingaverage (class in torch_mist.baselines)": [[2, "torch_mist.baselines.ExponentialMovingAverage"]], "interpolatedbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.InterpolatedBaseline"]], "learnablebaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableBaseline"]], "learnablejointbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableJointBaseline"]], "learnablejointmlpbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableJointMLPBaseline"]], "learnablemlpbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableMLPBaseline"]], "forward() (torch_mist.baselines.baseline method)": [[2, "torch_mist.baselines.Baseline.forward"]], "forward() (torch_mist.baselines.batchlogmeanexp method)": [[2, "torch_mist.baselines.BatchLogMeanExp.forward"]], "forward() (torch_mist.baselines.constantbaseline method)": [[2, "torch_mist.baselines.ConstantBaseline.forward"]], "forward() (torch_mist.baselines.exponentialmovingaverage method)": [[2, "torch_mist.baselines.ExponentialMovingAverage.forward"]], "forward() (torch_mist.baselines.interpolatedbaseline method)": [[2, "torch_mist.baselines.InterpolatedBaseline.forward"]], "forward() (torch_mist.baselines.learnablebaseline method)": [[2, "torch_mist.baselines.LearnableBaseline.forward"]], "forward() (torch_mist.baselines.learnablejointbaseline method)": [[2, "torch_mist.baselines.LearnableJointBaseline.forward"]], "module": [[2, "module-torch_mist.baselines"], [3, "module-torch_mist.critic.base"], [4, "module-torch_mist.critic"], [5, "module-torch_mist.critic.joint"], [6, "module-torch_mist.critic.separable"], [7, "module-torch_mist.critic.utils"], [8, "module-torch_mist.distributions.conditional.categorical"], [9, "module-torch_mist.distributions.conditional.correlated_normal"], [10, "module-torch_mist.distributions.conditional"], [11, "module-torch_mist.distributions"], [12, "module-torch_mist.distributions.parametrizations"], [13, "module-torch_mist.distributions.parametrizations.map"], [14, "module-torch_mist.distributions.product"], [15, "module-torch_mist.distributions.transforms.base"], [16, "module-torch_mist.distributions.transforms"], [17, "module-torch_mist.distributions.transforms.linear"], [18, "module-torch_mist.distributions.transforms.permute"], [19, "module-torch_mist.distributions.transforms.split"], [20, "module-torch_mist.distributions.utils"], [21, "module-torch_mist.estimators.base"], [22, "module-torch_mist.estimators.discriminative"], [23, "module-torch_mist.estimators.generative.ba"], [24, "module-torch_mist.estimators.generative.base"], [25, "module-torch_mist.estimators.generative.club"], [26, "module-torch_mist.estimators.generative.doe"], [27, "module-torch_mist.estimators.generative.gm"], [28, "module-torch_mist.estimators.generative"], [29, "module-torch_mist.estimators.generative.l1out"], [30, "module-torch_mist.estimators.generative.pq"], [31, "module-torch_mist.estimators.hybrid"], [32, "module-torch_mist.estimators"], [33, "module-torch_mist"], [34, "module-torch_mist.nn"], [35, "module-torch_mist.nn.utils"], [36, "module-torch_mist.quantization.functions"], [37, "module-torch_mist.quantization"], [38, "module-torch_mist.quantization.vqvae"], [39, "module-torch_mist.utils.data"], [40, "module-torch_mist.utils.estimate"], [41, "module-torch_mist.utils"]], "torch_mist.baselines": [[2, "module-torch_mist.baselines"]], "critic (class in torch_mist.critic.base)": [[3, "torch_mist.critic.base.Critic"]], "forward() (torch_mist.critic.base.critic method)": [[3, "torch_mist.critic.base.Critic.forward"]], "torch_mist.critic.base": [[3, "module-torch_mist.critic.base"]], "critic (class in torch_mist.critic)": [[4, "torch_mist.critic.Critic"]], "jointcritic (class in torch_mist.critic)": [[4, "torch_mist.critic.JointCritic"]], "separablecritic (class in torch_mist.critic)": [[4, "torch_mist.critic.SeparableCritic"]], "critic() (in module torch_mist.critic)": [[4, "torch_mist.critic.critic"]], "forward() (torch_mist.critic.critic method)": [[4, "torch_mist.critic.Critic.forward"]], "forward() (torch_mist.critic.jointcritic method)": [[4, "torch_mist.critic.JointCritic.forward"]], "forward() (torch_mist.critic.separablecritic method)": [[4, "torch_mist.critic.SeparableCritic.forward"]], "joint_critic() (in module torch_mist.critic)": [[4, "torch_mist.critic.joint_critic"]], "separable_critic() (in module torch_mist.critic)": [[4, "torch_mist.critic.separable_critic"]], "torch_mist.critic": [[4, "module-torch_mist.critic"]], "jointcritic (class in torch_mist.critic.joint)": [[5, "torch_mist.critic.joint.JointCritic"]], "forward() (torch_mist.critic.joint.jointcritic method)": [[5, "torch_mist.critic.joint.JointCritic.forward"]], "torch_mist.critic.joint": [[5, "module-torch_mist.critic.joint"]], "separablecritic (class in torch_mist.critic.separable)": [[6, "torch_mist.critic.separable.SeparableCritic"]], "forward() (torch_mist.critic.separable.separablecritic method)": [[6, "torch_mist.critic.separable.SeparableCritic.forward"]], "torch_mist.critic.separable": [[6, "module-torch_mist.critic.separable"]], "critic() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.critic"]], "joint_critic() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.joint_critic"]], "separable_critic() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.separable_critic"]], "torch_mist.critic.utils": [[7, "module-torch_mist.critic.utils"]], "conditionalcategorical (class in torch_mist.distributions.conditional.categorical)": [[8, "torch_mist.distributions.conditional.categorical.ConditionalCategorical"]], "condition() (torch_mist.distributions.conditional.categorical.conditionalcategorical method)": [[8, "torch_mist.distributions.conditional.categorical.ConditionalCategorical.condition"]], "torch_mist.distributions.conditional.categorical": [[8, "module-torch_mist.distributions.conditional.categorical"]], "correlatednormal (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.CorrelatedNormal"]], "cubiccorrelatednormal (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicCorrelatedNormal"]], "cubicptransform (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform"]], "randomfliptransform (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform"]], "skewedcorrelatednormal (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.SkewedCorrelatedNormal"]], "translate (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.Translate"]], "_call() (torch_mist.distributions.conditional.correlated_normal.cubicptransform method)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform._call"]], "_call() (torch_mist.distributions.conditional.correlated_normal.randomfliptransform method)": [[9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform._call"]], "_call() (torch_mist.distributions.conditional.correlated_normal.translate method)": [[9, "torch_mist.distributions.conditional.correlated_normal.Translate._call"]], "_inverse() (torch_mist.distributions.conditional.correlated_normal.cubicptransform method)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform._inverse"]], "_inverse() (torch_mist.distributions.conditional.correlated_normal.translate method)": [[9, "torch_mist.distributions.conditional.correlated_normal.Translate._inverse"]], "bijective (torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[9, "id0"], [9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform.bijective"]], "bijective (torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[9, "id3"], [9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.bijective"]], "bijective (torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[9, "id6"], [9, "torch_mist.distributions.conditional.correlated_normal.Translate.bijective"]], "codomain (torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[9, "id2"], [9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform.codomain"]], "codomain (torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[9, "id5"], [9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.codomain"]], "codomain (torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[9, "id8"], [9, "torch_mist.distributions.conditional.correlated_normal.Translate.codomain"]], "condition() (torch_mist.distributions.conditional.correlated_normal.correlatednormal method)": [[9, "torch_mist.distributions.conditional.correlated_normal.CorrelatedNormal.condition"]], "condition() (torch_mist.distributions.conditional.correlated_normal.cubiccorrelatednormal method)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicCorrelatedNormal.condition"]], "condition() (torch_mist.distributions.conditional.correlated_normal.skewedcorrelatednormal method)": [[9, "torch_mist.distributions.conditional.correlated_normal.SkewedCorrelatedNormal.condition"]], "domain (torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[9, "id1"], [9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform.domain"]], "domain (torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[9, "id4"], [9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.domain"]], "domain (torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[9, "id7"], [9, "torch_mist.distributions.conditional.correlated_normal.Translate.domain"]], "log_abs_det_jacobian() (torch_mist.distributions.conditional.correlated_normal.cubicptransform method)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform.log_abs_det_jacobian"]], "log_abs_det_jacobian() (torch_mist.distributions.conditional.correlated_normal.translate method)": [[9, "torch_mist.distributions.conditional.correlated_normal.Translate.log_abs_det_jacobian"]], "sign (torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform.sign"]], "sign (torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.sign"]], "sign (torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[9, "torch_mist.distributions.conditional.correlated_normal.Translate.sign"]], "torch_mist.distributions.conditional.correlated_normal": [[9, "module-torch_mist.distributions.conditional.correlated_normal"]], "conditionalcategorical (class in torch_mist.distributions.conditional)": [[10, "torch_mist.distributions.conditional.ConditionalCategorical"]], "correlatednormal (class in torch_mist.distributions.conditional)": [[10, "torch_mist.distributions.conditional.CorrelatedNormal"]], "cubiccorrelatednormal (class in torch_mist.distributions.conditional)": [[10, "torch_mist.distributions.conditional.CubicCorrelatedNormal"]], "skewedcorrelatednormal (class in torch_mist.distributions.conditional)": [[10, "torch_mist.distributions.conditional.SkewedCorrelatedNormal"]], "condition() (torch_mist.distributions.conditional.conditionalcategorical method)": [[10, "torch_mist.distributions.conditional.ConditionalCategorical.condition"]], "condition() (torch_mist.distributions.conditional.correlatednormal method)": [[10, "torch_mist.distributions.conditional.CorrelatedNormal.condition"]], "condition() (torch_mist.distributions.conditional.cubiccorrelatednormal method)": [[10, "torch_mist.distributions.conditional.CubicCorrelatedNormal.condition"]], "condition() (torch_mist.distributions.conditional.skewedcorrelatednormal method)": [[10, "torch_mist.distributions.conditional.SkewedCorrelatedNormal.condition"]], "torch_mist.distributions.conditional": [[10, "module-torch_mist.distributions.conditional"]], "torch_mist.distributions": [[11, "module-torch_mist.distributions"]], "torch_mist.distributions.parametrizations": [[12, "module-torch_mist.distributions.parametrizations"]], "deltamap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap"]], "epsilon (in module torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.EPSILON"]], "locscalemap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.LocScaleMap"]], "logitsmap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap"]], "parametermap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap"]], "temperaturelogitsmap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.TemperatureLogitsMap"]], "__call__() (torch_mist.distributions.parametrizations.map.parametermap method)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.__call__"]], "__repr__() (torch_mist.distributions.parametrizations.map.parametermap method)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.__repr__"]], "extra_repr() (torch_mist.distributions.parametrizations.map.parametermap method)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.extra_repr"]], "map_parameters() (torch_mist.distributions.parametrizations.map.deltamap method)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.locscalemap method)": [[13, "torch_mist.distributions.parametrizations.map.LocScaleMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.logitsmap method)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.parametermap method)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.temperaturelogitsmap method)": [[13, "torch_mist.distributions.parametrizations.map.TemperatureLogitsMap.map_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.deltamap attribute)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap.n_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.logitsmap attribute)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap.n_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.parametermap attribute)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.n_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.temperaturelogitsmap attribute)": [[13, "torch_mist.distributions.parametrizations.map.TemperatureLogitsMap.n_parameters"]], "supported_distributions (torch_mist.distributions.parametrizations.map.deltamap attribute)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.locscalemap attribute)": [[13, "torch_mist.distributions.parametrizations.map.LocScaleMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.logitsmap attribute)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.parametermap attribute)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.temperaturelogitsmap attribute)": [[13, "torch_mist.distributions.parametrizations.map.TemperatureLogitsMap.supported_distributions"]], "torch_mist.distributions.parametrizations.map": [[13, "module-torch_mist.distributions.parametrizations.map"]], "shuffledbatchdistribution (class in torch_mist.distributions.product)": [[14, "torch_mist.distributions.product.ShuffledBatchDistribution"]], "rsample() (torch_mist.distributions.product.shuffledbatchdistribution method)": [[14, "torch_mist.distributions.product.ShuffledBatchDistribution.rsample"]], "sample() (torch_mist.distributions.product.shuffledbatchdistribution method)": [[14, "torch_mist.distributions.product.ShuffledBatchDistribution.sample"]], "torch_mist.distributions.product": [[14, "module-torch_mist.distributions.product"]], "conditionaldistributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.ConditionalDistributionModule"]], "conditionaltransformeddistributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule"]], "distributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.DistributionModule"]], "transformeddistributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule"]], "__repr__() (torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.base.distributionmodule method)": [[15, "torch_mist.distributions.transforms.base.DistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule.__repr__"]], "clear_cache() (torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.clear_cache"]], "condition() (torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.condition"]], "log_prob() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule.log_prob"]], "rsample() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule.rsample"]], "torch_mist.distributions.transforms.base": [[15, "module-torch_mist.distributions.transforms.base"]], "conditionaldistributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.ConditionalDistributionModule"]], "conditionallinear (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.ConditionalLinear"]], "conditionaltransformeddistributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule"]], "distributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.DistributionModule"]], "linear (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.Linear"]], "permute (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.Permute"]], "splittransform (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.SplitTransform"]], "transformeddistributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule"]], "__repr__() (torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.distributionmodule method)": [[16, "torch_mist.distributions.transforms.DistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule.__repr__"]], "_call() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute._call"]], "_call() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform._call"]], "_inverse() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute._inverse"]], "_inverse() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform._inverse"]], "_params() (torch_mist.distributions.transforms.conditionallinear method)": [[16, "torch_mist.distributions.transforms.ConditionalLinear._params"]], "_params() (torch_mist.distributions.transforms.linear method)": [[16, "torch_mist.distributions.transforms.Linear._params"]], "add_dims() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.add_dims"]], "bijective (torch_mist.distributions.transforms.conditionallinear attribute)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.bijective"]], "clear_cache() (torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.clear_cache"]], "codomain (torch_mist.distributions.transforms.conditionallinear attribute)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.codomain"]], "codomain (torch_mist.distributions.transforms.splittransform attribute)": [[16, "torch_mist.distributions.transforms.SplitTransform.codomain"]], "condition() (torch_mist.distributions.transforms.conditionallinear method)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.condition"]], "condition() (torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.condition"]], "conditional_linear() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.conditional_linear"]], "conditional_skip_linear() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.conditional_skip_linear"]], "dist() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.dist"]], "domain (torch_mist.distributions.transforms.conditionallinear attribute)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.domain"]], "domain (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.domain"]], "domain (torch_mist.distributions.transforms.splittransform attribute)": [[16, "torch_mist.distributions.transforms.SplitTransform.domain"]], "linear() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.linear"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute.log_abs_det_jacobian"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.log_abs_det_jacobian"]], "log_prob() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule.log_prob"]], "permute() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.permute"]], "remove_dims() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.remove_dims"]], "rsample() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule.rsample"]], "sign (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.sign"]], "torch_mist.distributions.transforms": [[16, "module-torch_mist.distributions.transforms"]], "update_device() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute.update_device"]], "conditionallinear (class in torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear"]], "conditionedlinear (class in torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear"]], "linear (class in torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.Linear"]], "_call() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear._call"]], "_inverse() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear._inverse"]], "_params() (torch_mist.distributions.transforms.linear.conditionallinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear._params"]], "_params() (torch_mist.distributions.transforms.linear.linear method)": [[17, "torch_mist.distributions.transforms.linear.Linear._params"]], "bijective (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "id2"], [17, "torch_mist.distributions.transforms.linear.ConditionedLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.bijective"]], "codomain (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "id1"], [17, "torch_mist.distributions.transforms.linear.ConditionedLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.codomain"]], "condition() (torch_mist.distributions.transforms.linear.conditionallinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.condition"]], "conditional_linear() (in module torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.conditional_linear"]], "conditional_skip_linear() (in module torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.conditional_skip_linear"]], "domain (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.domain"]], "domain (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "id0"], [17, "torch_mist.distributions.transforms.linear.ConditionedLinear.domain"]], "domain (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.domain"]], "linear() (in module torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.linear"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear.log_abs_det_jacobian"]], "sign (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear.sign"]], "sign (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.sign"]], "torch_mist.distributions.transforms.linear": [[17, "module-torch_mist.distributions.transforms.linear"]], "permute (class in torch_mist.distributions.transforms.permute)": [[18, "torch_mist.distributions.transforms.permute.Permute"]], "_call() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute._call"]], "_inverse() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute._inverse"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute.log_abs_det_jacobian"]], "permute() (in module torch_mist.distributions.transforms.permute)": [[18, "torch_mist.distributions.transforms.permute.permute"]], "torch_mist.distributions.transforms.permute": [[18, "module-torch_mist.distributions.transforms.permute"]], "update_device() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute.update_device"]], "splittransform (class in torch_mist.distributions.transforms.split)": [[19, "torch_mist.distributions.transforms.split.SplitTransform"]], "_call() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform._call"]], "_inverse() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform._inverse"]], "add_dims() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.add_dims"]], "codomain (torch_mist.distributions.transforms.split.splittransform attribute)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.codomain"]], "dist() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.dist"]], "domain (torch_mist.distributions.transforms.split.splittransform attribute)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.domain"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.log_abs_det_jacobian"]], "remove_dims() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.remove_dims"]], "torch_mist.distributions.transforms.split": [[19, "module-torch_mist.distributions.transforms.split"]], "conditionalstandardnormalmodule (class in torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.ConditionalStandardNormalModule"]], "normalmodule (class in torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.NormalModule"]], "__repr__() (torch_mist.distributions.utils.normalmodule method)": [[20, "torch_mist.distributions.utils.NormalModule.__repr__"]], "condition() (torch_mist.distributions.utils.conditionalstandardnormalmodule method)": [[20, "torch_mist.distributions.utils.ConditionalStandardNormalModule.condition"]], "conditional_categorical() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.conditional_categorical"]], "conditional_mutivariate_categorical() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.conditional_mutivariate_categorical"]], "conditional_transformed_normal() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.conditional_transformed_normal"]], "fetch_transform() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.fetch_transform"]], "log_prob() (torch_mist.distributions.utils.normalmodule method)": [[20, "torch_mist.distributions.utils.NormalModule.log_prob"]], "rsample() (torch_mist.distributions.utils.normalmodule method)": [[20, "torch_mist.distributions.utils.NormalModule.rsample"]], "torch_mist.distributions.utils": [[20, "module-torch_mist.distributions.utils"]], "transformed_normal() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.transformed_normal"]], "estimation (class in torch_mist.estimators.base)": [[21, "torch_mist.estimators.base.Estimation"]], "logratioestimator (class in torch_mist.estimators.base)": [[21, "torch_mist.estimators.base.LogRatioEstimator"]], "mutualinformationestimator (class in torch_mist.estimators.base)": [[21, "torch_mist.estimators.base.MutualInformationEstimator"]], "__add__() (torch_mist.estimators.base.estimation method)": [[21, "torch_mist.estimators.base.Estimation.__add__"]], "__sub__() (torch_mist.estimators.base.estimation method)": [[21, "torch_mist.estimators.base.Estimation.__sub__"]], "apply() (torch_mist.estimators.base.estimation method)": [[21, "torch_mist.estimators.base.Estimation.apply"]], "forward() (torch_mist.estimators.base.logratioestimator method)": [[21, "torch_mist.estimators.base.LogRatioEstimator.forward"]], "forward() (torch_mist.estimators.base.mutualinformationestimator method)": [[21, "torch_mist.estimators.base.MutualInformationEstimator.forward"]], "log_ratio() (torch_mist.estimators.base.logratioestimator method)": [[21, "torch_mist.estimators.base.LogRatioEstimator.log_ratio"]], "loss (torch_mist.estimators.base.estimation attribute)": [[21, "torch_mist.estimators.base.Estimation.loss"]], "lower_bound (torch_mist.estimators.base.mutualinformationestimator attribute)": [[21, "torch_mist.estimators.base.MutualInformationEstimator.lower_bound"]], "shape (torch_mist.estimators.base.estimation property)": [[21, "torch_mist.estimators.base.Estimation.shape"]], "torch_mist.estimators.base": [[21, "module-torch_mist.estimators.base"]], "upper_bound (torch_mist.estimators.base.mutualinformationestimator attribute)": [[21, "torch_mist.estimators.base.MutualInformationEstimator.upper_bound"]], "value (torch_mist.estimators.base.estimation attribute)": [[21, "torch_mist.estimators.base.Estimation.value"]], "alphatuba (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.AlphaTUBA"]], "discriminativemutualinformationestimator (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator"]], "flo (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.FLO"]], "infonce (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.InfoNCE"]], "js (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.JS"]], "mine (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.MINE"]], "nwj (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.NWJ"]], "smile (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.SMILE"]], "tuba (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.TUBA"]], "__repr__() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.__repr__"]], "__repr__() (torch_mist.estimators.discriminative.tuba method)": [[22, "torch_mist.estimators.discriminative.TUBA.__repr__"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.flo method)": [[22, "torch_mist.estimators.discriminative.FLO._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.infonce method)": [[22, "torch_mist.estimators.discriminative.InfoNCE._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.nwj method)": [[22, "torch_mist.estimators.discriminative.NWJ._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.smile method)": [[22, "torch_mist.estimators.discriminative.SMILE._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.tuba method)": [[22, "torch_mist.estimators.discriminative.TUBA._compute_log_ratio"]], "_compute_log_ratio_grad() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (torch_mist.estimators.discriminative.js method)": [[22, "torch_mist.estimators.discriminative.JS._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (torch_mist.estimators.discriminative.smile method)": [[22, "torch_mist.estimators.discriminative.SMILE._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (torch_mist.estimators.discriminative.tuba method)": [[22, "torch_mist.estimators.discriminative.TUBA._compute_log_ratio_grad"]], "alpha_tuba() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.alpha_tuba"]], "flo() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.flo"]], "infonce() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.infonce"]], "js() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.js"]], "log_ratio() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.log_ratio"]], "lower_bound (torch_mist.estimators.discriminative.discriminativemutualinformationestimator attribute)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.lower_bound"]], "mine() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.mine"]], "nwj() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.nwj"]], "sample_proposal() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.sample_proposal"]], "smile() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.smile"]], "torch_mist.estimators.discriminative": [[22, "module-torch_mist.estimators.discriminative"]], "tuba() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.tuba"]], "upper_bound (torch_mist.estimators.discriminative.discriminativemutualinformationestimator attribute)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.upper_bound"]], "ba (class in torch_mist.estimators.generative.ba)": [[23, "torch_mist.estimators.generative.ba.BA"]], "ba() (in module torch_mist.estimators.generative.ba)": [[23, "torch_mist.estimators.generative.ba.ba"]], "compute_loss() (torch_mist.estimators.generative.ba.ba method)": [[23, "torch_mist.estimators.generative.ba.BA.compute_loss"]], "log_prob_y() (torch_mist.estimators.generative.ba.ba method)": [[23, "torch_mist.estimators.generative.ba.BA.log_prob_y"]], "torch_mist.estimators.generative.ba": [[23, "module-torch_mist.estimators.generative.ba"]], "generativemutualinformationestimator (class in torch_mist.estimators.generative.base)": [[24, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator"]], "variationalproposalmutualinformationestimator (class in torch_mist.estimators.generative.base)": [[24, "torch_mist.estimators.generative.base.VariationalProposalMutualInformationEstimator"]], "__repr__() (torch_mist.estimators.generative.base.variationalproposalmutualinformationestimator method)": [[24, "torch_mist.estimators.generative.base.VariationalProposalMutualInformationEstimator.__repr__"]], "compute_loss() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[24, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.compute_loss"]], "compute_loss() (torch_mist.estimators.generative.base.variationalproposalmutualinformationestimator method)": [[24, "torch_mist.estimators.generative.base.VariationalProposalMutualInformationEstimator.compute_loss"]], "log_prob_y() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[24, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.log_prob_y"]], "log_prob_y_x() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[24, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.log_prob_y_x"]], "log_prob_y_x() (torch_mist.estimators.generative.base.variationalproposalmutualinformationestimator method)": [[24, "torch_mist.estimators.generative.base.VariationalProposalMutualInformationEstimator.log_prob_y_x"]], "log_ratio() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[24, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.log_ratio"]], "torch_mist.estimators.generative.base": [[24, "module-torch_mist.estimators.generative.base"]], "club (class in torch_mist.estimators.generative.club)": [[25, "torch_mist.estimators.generative.club.CLUB"]], "club() (in module torch_mist.estimators.generative.club)": [[25, "torch_mist.estimators.generative.club.club"]], "log_prob_y() (torch_mist.estimators.generative.club.club method)": [[25, "torch_mist.estimators.generative.club.CLUB.log_prob_y"]], "torch_mist.estimators.generative.club": [[25, "module-torch_mist.estimators.generative.club"]], "doe (class in torch_mist.estimators.generative.doe)": [[26, "torch_mist.estimators.generative.doe.DoE"]], "__repr__() (torch_mist.estimators.generative.doe.doe method)": [[26, "torch_mist.estimators.generative.doe.DoE.__repr__"]], "doe() (in module torch_mist.estimators.generative.doe)": [[26, "torch_mist.estimators.generative.doe.doe"]], "torch_mist.estimators.generative.doe": [[26, "module-torch_mist.estimators.generative.doe"]], "gm (class in torch_mist.estimators.generative.gm)": [[27, "torch_mist.estimators.generative.gm.GM"]], "__repr__() (torch_mist.estimators.generative.gm.gm method)": [[27, "torch_mist.estimators.generative.gm.GM.__repr__"]], "compute_loss() (torch_mist.estimators.generative.gm.gm method)": [[27, "torch_mist.estimators.generative.gm.GM.compute_loss"]], "gm() (in module torch_mist.estimators.generative.gm)": [[27, "torch_mist.estimators.generative.gm.gm"]], "log_prob_x() (torch_mist.estimators.generative.gm.gm method)": [[27, "torch_mist.estimators.generative.gm.GM.log_prob_x"]], "log_prob_y() (torch_mist.estimators.generative.gm.gm method)": [[27, "torch_mist.estimators.generative.gm.GM.log_prob_y"]], "log_prob_y_x() (torch_mist.estimators.generative.gm.gm method)": [[27, "torch_mist.estimators.generative.gm.GM.log_prob_y_x"]], "torch_mist.estimators.generative.gm": [[27, "module-torch_mist.estimators.generative.gm"]], "ba (class in torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.BA"]], "club (class in torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.CLUB"]], "doe (class in torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.DoE"]], "gm (class in torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.GM"]], "generativemutualinformationestimator (class in torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator"]], "l1out (class in torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.L1Out"]], "pq (class in torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.PQ"]], "variationalproposalmutualinformationestimator (class in torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator"]], "__repr__() (torch_mist.estimators.generative.doe method)": [[28, "torch_mist.estimators.generative.DoE.__repr__"]], "__repr__() (torch_mist.estimators.generative.gm method)": [[28, "torch_mist.estimators.generative.GM.__repr__"]], "__repr__() (torch_mist.estimators.generative.variationalproposalmutualinformationestimator method)": [[28, "torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator.__repr__"]], "ba() (in module torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.ba"]], "club() (in module torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.club"]], "compute_loss() (torch_mist.estimators.generative.ba method)": [[28, "torch_mist.estimators.generative.BA.compute_loss"]], "compute_loss() (torch_mist.estimators.generative.gm method)": [[28, "torch_mist.estimators.generative.GM.compute_loss"]], "compute_loss() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[28, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.compute_loss"]], "compute_loss() (torch_mist.estimators.generative.variationalproposalmutualinformationestimator method)": [[28, "torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator.compute_loss"]], "doe() (in module torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.doe"]], "gm() (in module torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.gm"]], "l1out() (in module torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.l1out"]], "log_prob_x() (torch_mist.estimators.generative.gm method)": [[28, "torch_mist.estimators.generative.GM.log_prob_x"]], "log_prob_y() (torch_mist.estimators.generative.ba method)": [[28, "torch_mist.estimators.generative.BA.log_prob_y"]], "log_prob_y() (torch_mist.estimators.generative.club method)": [[28, "torch_mist.estimators.generative.CLUB.log_prob_y"]], "log_prob_y() (torch_mist.estimators.generative.gm method)": [[28, "torch_mist.estimators.generative.GM.log_prob_y"]], "log_prob_y() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[28, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.log_prob_y"]], "log_prob_y() (torch_mist.estimators.generative.l1out method)": [[28, "torch_mist.estimators.generative.L1Out.log_prob_y"]], "log_prob_y_x() (torch_mist.estimators.generative.gm method)": [[28, "torch_mist.estimators.generative.GM.log_prob_y_x"]], "log_prob_y_x() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[28, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.log_prob_y_x"]], "log_prob_y_x() (torch_mist.estimators.generative.variationalproposalmutualinformationestimator method)": [[28, "torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator.log_prob_y_x"]], "log_ratio() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[28, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.generative.pq method)": [[28, "torch_mist.estimators.generative.PQ.log_ratio"]], "pq() (in module torch_mist.estimators.generative)": [[28, "torch_mist.estimators.generative.pq"]], "torch_mist.estimators.generative": [[28, "module-torch_mist.estimators.generative"]], "l1out (class in torch_mist.estimators.generative.l1out)": [[29, "torch_mist.estimators.generative.l1out.L1Out"]], "l1out() (in module torch_mist.estimators.generative.l1out)": [[29, "torch_mist.estimators.generative.l1out.l1out"]], "log_prob_y() (torch_mist.estimators.generative.l1out.l1out method)": [[29, "torch_mist.estimators.generative.l1out.L1Out.log_prob_y"]], "torch_mist.estimators.generative.l1out": [[29, "module-torch_mist.estimators.generative.l1out"]], "pq (class in torch_mist.estimators.generative.pq)": [[30, "torch_mist.estimators.generative.pq.PQ"]], "log_ratio() (torch_mist.estimators.generative.pq.pq method)": [[30, "torch_mist.estimators.generative.pq.PQ.log_ratio"]], "pq() (in module torch_mist.estimators.generative.pq)": [[30, "torch_mist.estimators.generative.pq.pq"]], "torch_mist.estimators.generative.pq": [[30, "module-torch_mist.estimators.generative.pq"]], "hybridmutualinformationestimator (class in torch_mist.estimators.hybrid)": [[31, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator"]], "log_ratio() (torch_mist.estimators.hybrid.hybridmutualinformationestimator method)": [[31, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator.log_ratio"]], "torch_mist.estimators.hybrid": [[31, "module-torch_mist.estimators.hybrid"]], "alphatuba (class in torch_mist.estimators)": [[32, "torch_mist.estimators.AlphaTUBA"]], "ba (class in torch_mist.estimators)": [[32, "torch_mist.estimators.BA"]], "club (class in torch_mist.estimators)": [[32, "torch_mist.estimators.CLUB"]], "doe (class in torch_mist.estimators)": [[32, "torch_mist.estimators.DoE"]], "flo (class in torch_mist.estimators)": [[32, "torch_mist.estimators.FLO"]], "gm (class in torch_mist.estimators)": [[32, "torch_mist.estimators.GM"]], "generativemutualinformationestimator (class in torch_mist.estimators)": [[32, "torch_mist.estimators.GenerativeMutualInformationEstimator"]], "hybridmutualinformationestimator (class in torch_mist.estimators)": [[32, "torch_mist.estimators.HybridMutualInformationEstimator"]], "infonce (class in torch_mist.estimators)": [[32, "torch_mist.estimators.InfoNCE"]], "js (class in torch_mist.estimators)": [[32, "torch_mist.estimators.JS"]], "l1out (class in torch_mist.estimators)": [[32, "torch_mist.estimators.L1Out"]], "mine (class in torch_mist.estimators)": [[32, "torch_mist.estimators.MINE"]], "mutualinformationestimator (class in torch_mist.estimators)": [[32, "torch_mist.estimators.MutualInformationEstimator"]], "nwj (class in torch_mist.estimators)": [[32, "torch_mist.estimators.NWJ"]], "pq (class in torch_mist.estimators)": [[32, "torch_mist.estimators.PQ"]], "smile (class in torch_mist.estimators)": [[32, "torch_mist.estimators.SMILE"]], "tuba (class in torch_mist.estimators)": [[32, "torch_mist.estimators.TUBA"]], "variationalproposalmutualinformationestimator (class in torch_mist.estimators)": [[32, "torch_mist.estimators.VariationalProposalMutualInformationEstimator"]], "__repr__() (torch_mist.estimators.doe method)": [[32, "torch_mist.estimators.DoE.__repr__"]], "__repr__() (torch_mist.estimators.gm method)": [[32, "torch_mist.estimators.GM.__repr__"]], "__repr__() (torch_mist.estimators.tuba method)": [[32, "torch_mist.estimators.TUBA.__repr__"]], "__repr__() (torch_mist.estimators.variationalproposalmutualinformationestimator method)": [[32, "torch_mist.estimators.VariationalProposalMutualInformationEstimator.__repr__"]], "_compute_log_ratio() (torch_mist.estimators.flo method)": [[32, "torch_mist.estimators.FLO._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.infonce method)": [[32, "torch_mist.estimators.InfoNCE._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.nwj method)": [[32, "torch_mist.estimators.NWJ._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.smile method)": [[32, "torch_mist.estimators.SMILE._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.tuba method)": [[32, "torch_mist.estimators.TUBA._compute_log_ratio"]], "_compute_log_ratio_grad() (torch_mist.estimators.js method)": [[32, "torch_mist.estimators.JS._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (torch_mist.estimators.smile method)": [[32, "torch_mist.estimators.SMILE._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (torch_mist.estimators.tuba method)": [[32, "torch_mist.estimators.TUBA._compute_log_ratio_grad"]], "alpha_tuba() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.alpha_tuba"]], "ba() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.ba"]], "club() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.club"]], "compute_loss() (torch_mist.estimators.ba method)": [[32, "torch_mist.estimators.BA.compute_loss"]], "compute_loss() (torch_mist.estimators.gm method)": [[32, "torch_mist.estimators.GM.compute_loss"]], "compute_loss() (torch_mist.estimators.generativemutualinformationestimator method)": [[32, "torch_mist.estimators.GenerativeMutualInformationEstimator.compute_loss"]], "compute_loss() (torch_mist.estimators.variationalproposalmutualinformationestimator method)": [[32, "torch_mist.estimators.VariationalProposalMutualInformationEstimator.compute_loss"]], "doe() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.doe"]], "flo() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.flo"]], "forward() (torch_mist.estimators.mutualinformationestimator method)": [[32, "torch_mist.estimators.MutualInformationEstimator.forward"]], "gm() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.gm"]], "infonce() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.infonce"]], "js() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.js"]], "l1out() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.l1out"]], "log_prob_x() (torch_mist.estimators.gm method)": [[32, "torch_mist.estimators.GM.log_prob_x"]], "log_prob_y() (torch_mist.estimators.ba method)": [[32, "torch_mist.estimators.BA.log_prob_y"]], "log_prob_y() (torch_mist.estimators.club method)": [[32, "torch_mist.estimators.CLUB.log_prob_y"]], "log_prob_y() (torch_mist.estimators.gm method)": [[32, "torch_mist.estimators.GM.log_prob_y"]], "log_prob_y() (torch_mist.estimators.generativemutualinformationestimator method)": [[32, "torch_mist.estimators.GenerativeMutualInformationEstimator.log_prob_y"]], "log_prob_y() (torch_mist.estimators.l1out method)": [[32, "torch_mist.estimators.L1Out.log_prob_y"]], "log_prob_y_x() (torch_mist.estimators.gm method)": [[32, "torch_mist.estimators.GM.log_prob_y_x"]], "log_prob_y_x() (torch_mist.estimators.generativemutualinformationestimator method)": [[32, "torch_mist.estimators.GenerativeMutualInformationEstimator.log_prob_y_x"]], "log_prob_y_x() (torch_mist.estimators.variationalproposalmutualinformationestimator method)": [[32, "torch_mist.estimators.VariationalProposalMutualInformationEstimator.log_prob_y_x"]], "log_ratio() (torch_mist.estimators.generativemutualinformationestimator method)": [[32, "torch_mist.estimators.GenerativeMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.hybridmutualinformationestimator method)": [[32, "torch_mist.estimators.HybridMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.pq method)": [[32, "torch_mist.estimators.PQ.log_ratio"]], "lower_bound (torch_mist.estimators.mutualinformationestimator attribute)": [[32, "torch_mist.estimators.MutualInformationEstimator.lower_bound"]], "mine() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.mine"]], "nwj() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.nwj"]], "pq() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.pq"]], "smile() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.smile"]], "torch_mist.estimators": [[32, "module-torch_mist.estimators"]], "tuba() (in module torch_mist.estimators)": [[32, "torch_mist.estimators.tuba"]], "upper_bound (torch_mist.estimators.mutualinformationestimator attribute)": [[32, "torch_mist.estimators.MutualInformationEstimator.upper_bound"]], "__version__ (in module torch_mist)": [[33, "torch_mist.__version__"]], "torch_mist": [[33, "module-torch_mist"]], "torch_mist.nn": [[34, "module-torch_mist.nn"]], "constant (class in torch_mist.nn.utils)": [[35, "torch_mist.nn.utils.Constant"]], "identity (class in torch_mist.nn.utils)": [[35, "torch_mist.nn.utils.Identity"]], "jointdensenn (class in torch_mist.nn.utils)": [[35, "torch_mist.nn.utils.JointDenseNN"]], "mergeoutputs (class in torch_mist.nn.utils)": [[35, "torch_mist.nn.utils.MergeOutputs"]], "skipdensenn (class in torch_mist.nn.utils)": [[35, "torch_mist.nn.utils.SkipDenseNN"]], "__repr__() (torch_mist.nn.utils.constant method)": [[35, "torch_mist.nn.utils.Constant.__repr__"]], "forward() (torch_mist.nn.utils.constant method)": [[35, "torch_mist.nn.utils.Constant.forward"]], "forward() (torch_mist.nn.utils.identity method)": [[35, "torch_mist.nn.utils.Identity.forward"]], "forward() (torch_mist.nn.utils.jointdensenn method)": [[35, "torch_mist.nn.utils.JointDenseNN.forward"]], "forward() (torch_mist.nn.utils.mergeoutputs method)": [[35, "torch_mist.nn.utils.MergeOutputs.forward"]], "forward() (torch_mist.nn.utils.skipdensenn method)": [[35, "torch_mist.nn.utils.SkipDenseNN.forward"]], "torch_mist.nn.utils": [[35, "module-torch_mist.nn.utils"]], "fixedquantization (class in torch_mist.quantization.functions)": [[36, "torch_mist.quantization.functions.FixedQuantization"]], "learnablequantization (class in torch_mist.quantization.functions)": [[36, "torch_mist.quantization.functions.LearnableQuantization"]], "learnablevectorquantization (class in torch_mist.quantization.functions)": [[36, "torch_mist.quantization.functions.LearnableVectorQuantization"]], "quantizationfunction (class in torch_mist.quantization.functions)": [[36, "torch_mist.quantization.functions.QuantizationFunction"]], "vectorquantization (class in torch_mist.quantization.functions)": [[36, "torch_mist.quantization.functions.VectorQuantization"]], "codebook_lookup() (torch_mist.quantization.functions.vectorquantization method)": [[36, "torch_mist.quantization.functions.VectorQuantization.codebook_lookup"]], "forward() (torch_mist.quantization.functions.fixedquantization method)": [[36, "torch_mist.quantization.functions.FixedQuantization.forward"]], "forward() (torch_mist.quantization.functions.learnablevectorquantization method)": [[36, "torch_mist.quantization.functions.LearnableVectorQuantization.forward"]], "forward() (torch_mist.quantization.functions.quantizationfunction method)": [[36, "torch_mist.quantization.functions.QuantizationFunction.forward"]], "forward() (torch_mist.quantization.functions.vectorquantization method)": [[36, "torch_mist.quantization.functions.VectorQuantization.forward"]], "learnable_vector_quantization() (in module torch_mist.quantization.functions)": [[36, "torch_mist.quantization.functions.learnable_vector_quantization"]], "loss() (torch_mist.quantization.functions.learnablequantization method)": [[36, "torch_mist.quantization.functions.LearnableQuantization.loss"]], "n_bins (torch_mist.quantization.functions.fixedquantization property)": [[36, "torch_mist.quantization.functions.FixedQuantization.n_bins"]], "n_bins (torch_mist.quantization.functions.quantizationfunction property)": [[36, "torch_mist.quantization.functions.QuantizationFunction.n_bins"]], "n_bins (torch_mist.quantization.functions.vectorquantization property)": [[36, "torch_mist.quantization.functions.VectorQuantization.n_bins"]], "torch_mist.quantization.functions": [[36, "module-torch_mist.quantization.functions"]], "trained_vector_quantization() (in module torch_mist.quantization.functions)": [[36, "torch_mist.quantization.functions.trained_vector_quantization"]], "fixedquantization (class in torch_mist.quantization)": [[37, "torch_mist.quantization.FixedQuantization"]], "learnablequantization (class in torch_mist.quantization)": [[37, "torch_mist.quantization.LearnableQuantization"]], "learnablevectorquantization (class in torch_mist.quantization)": [[37, "torch_mist.quantization.LearnableVectorQuantization"]], "quantizationfunction (class in torch_mist.quantization)": [[37, "torch_mist.quantization.QuantizationFunction"]], "vqvae (class in torch_mist.quantization)": [[37, "torch_mist.quantization.VQVAE"]], "vectorquantization (class in torch_mist.quantization)": [[37, "torch_mist.quantization.VectorQuantization"]], "codebook_lookup() (torch_mist.quantization.vectorquantization method)": [[37, "torch_mist.quantization.VectorQuantization.codebook_lookup"]], "forward() (torch_mist.quantization.fixedquantization method)": [[37, "torch_mist.quantization.FixedQuantization.forward"]], "forward() (torch_mist.quantization.learnablevectorquantization method)": [[37, "torch_mist.quantization.LearnableVectorQuantization.forward"]], "forward() (torch_mist.quantization.quantizationfunction method)": [[37, "torch_mist.quantization.QuantizationFunction.forward"]], "forward() (torch_mist.quantization.vectorquantization method)": [[37, "torch_mist.quantization.VectorQuantization.forward"]], "learnable_vector_quantization() (in module torch_mist.quantization)": [[37, "torch_mist.quantization.learnable_vector_quantization"]], "loss() (torch_mist.quantization.learnablequantization method)": [[37, "torch_mist.quantization.LearnableQuantization.loss"]], "loss() (torch_mist.quantization.vqvae method)": [[37, "torch_mist.quantization.VQVAE.loss"]], "n_bins (torch_mist.quantization.fixedquantization property)": [[37, "torch_mist.quantization.FixedQuantization.n_bins"]], "n_bins (torch_mist.quantization.quantizationfunction property)": [[37, "torch_mist.quantization.QuantizationFunction.n_bins"]], "n_bins (torch_mist.quantization.vectorquantization property)": [[37, "torch_mist.quantization.VectorQuantization.n_bins"]], "torch_mist.quantization": [[37, "module-torch_mist.quantization"]], "trained_vector_quantization() (in module torch_mist.quantization)": [[37, "torch_mist.quantization.trained_vector_quantization"]], "vqvae() (in module torch_mist.quantization)": [[37, "torch_mist.quantization.vqvae"]], "initial_patience (in module torch_mist.quantization.vqvae)": [[38, "torch_mist.quantization.vqvae.INITIAL_PATIENCE"]], "vqvae (class in torch_mist.quantization.vqvae)": [[38, "torch_mist.quantization.vqvae.VQVAE"]], "loss() (torch_mist.quantization.vqvae.vqvae method)": [[38, "torch_mist.quantization.vqvae.VQVAE.loss"]], "torch_mist.quantization.vqvae": [[38, "module-torch_mist.quantization.vqvae"]], "vqvae() (in module torch_mist.quantization.vqvae)": [[38, "torch_mist.quantization.vqvae.vqvae"]], "sampledataloader (class in torch_mist.utils.data)": [[39, "torch_mist.utils.data.SampleDataLoader"]], "__len__() (torch_mist.utils.data.sampledataloader method)": [[39, "torch_mist.utils.data.SampleDataLoader.__len__"]], "__next__() (torch_mist.utils.data.sampledataloader method)": [[39, "torch_mist.utils.data.SampleDataLoader.__next__"]], "torch_mist.utils.data": [[39, "module-torch_mist.utils.data"]], "estimate_mi() (in module torch_mist.utils.estimate)": [[40, "torch_mist.utils.estimate.estimate_mi"]], "estimate_mi_std() (in module torch_mist.utils.estimate)": [[40, "torch_mist.utils.estimate.estimate_mi_std"]], "optimize_mi_estimator() (in module torch_mist.utils.estimate)": [[40, "torch_mist.utils.estimate.optimize_mi_estimator"]], "torch_mist.utils.estimate": [[40, "module-torch_mist.utils.estimate"]], "torch_mist.utils": [[41, "module-torch_mist.utils"]]}})