Search.setIndex({"docnames": [".pytest_cache/README", "autoapi/index", "autoapi/torch_mist/baselines/index", "autoapi/torch_mist/critic/base/index", "autoapi/torch_mist/critic/index", "autoapi/torch_mist/critic/joint/index", "autoapi/torch_mist/critic/separable/index", "autoapi/torch_mist/critic/utils/index", "autoapi/torch_mist/data/index", "autoapi/torch_mist/data/multimixture/index", "autoapi/torch_mist/distributions/index", "autoapi/torch_mist/distributions/joint/index", "autoapi/torch_mist/distributions/parametrizations/index", "autoapi/torch_mist/distributions/parametrizations/map/index", "autoapi/torch_mist/distributions/product/index", "autoapi/torch_mist/distributions/transforms/base/index", "autoapi/torch_mist/distributions/transforms/index", "autoapi/torch_mist/distributions/transforms/linear/index", "autoapi/torch_mist/distributions/transforms/permute/index", "autoapi/torch_mist/distributions/transforms/split/index", "autoapi/torch_mist/distributions/utils/index", "autoapi/torch_mist/estimators/base/index", "autoapi/torch_mist/estimators/discriminative/alpha_tuba/index", "autoapi/torch_mist/estimators/discriminative/base/index", "autoapi/torch_mist/estimators/discriminative/flo/index", "autoapi/torch_mist/estimators/discriminative/index", "autoapi/torch_mist/estimators/discriminative/infonce/index", "autoapi/torch_mist/estimators/discriminative/js/index", "autoapi/torch_mist/estimators/discriminative/mine/index", "autoapi/torch_mist/estimators/discriminative/nwj/index", "autoapi/torch_mist/estimators/discriminative/smile/index", "autoapi/torch_mist/estimators/discriminative/tuba/index", "autoapi/torch_mist/estimators/generative/ba/index", "autoapi/torch_mist/estimators/generative/base/index", "autoapi/torch_mist/estimators/generative/club/index", "autoapi/torch_mist/estimators/generative/discrete/index", "autoapi/torch_mist/estimators/generative/doe/index", "autoapi/torch_mist/estimators/generative/gm/index", "autoapi/torch_mist/estimators/generative/index", "autoapi/torch_mist/estimators/generative/l1out/index", "autoapi/torch_mist/estimators/generative/pq/index", "autoapi/torch_mist/estimators/hybrid/index", "autoapi/torch_mist/estimators/index", "autoapi/torch_mist/index", "autoapi/torch_mist/nn/index", "autoapi/torch_mist/nn/utils/index", "autoapi/torch_mist/quantization/functions/index", "autoapi/torch_mist/quantization/index", "autoapi/torch_mist/quantization/vqvae/index", "autoapi/torch_mist/utils/caching/index", "autoapi/torch_mist/utils/data/index", "autoapi/torch_mist/utils/estimate/index", "autoapi/torch_mist/utils/index", "changelog", "conduct", "contributing", "example", "index"], "filenames": [".pytest_cache/README.md", "autoapi/index.rst", "autoapi/torch_mist/baselines/index.rst", "autoapi/torch_mist/critic/base/index.rst", "autoapi/torch_mist/critic/index.rst", "autoapi/torch_mist/critic/joint/index.rst", "autoapi/torch_mist/critic/separable/index.rst", "autoapi/torch_mist/critic/utils/index.rst", "autoapi/torch_mist/data/index.rst", "autoapi/torch_mist/data/multimixture/index.rst", "autoapi/torch_mist/distributions/index.rst", "autoapi/torch_mist/distributions/joint/index.rst", "autoapi/torch_mist/distributions/parametrizations/index.rst", "autoapi/torch_mist/distributions/parametrizations/map/index.rst", "autoapi/torch_mist/distributions/product/index.rst", "autoapi/torch_mist/distributions/transforms/base/index.rst", "autoapi/torch_mist/distributions/transforms/index.rst", "autoapi/torch_mist/distributions/transforms/linear/index.rst", "autoapi/torch_mist/distributions/transforms/permute/index.rst", "autoapi/torch_mist/distributions/transforms/split/index.rst", "autoapi/torch_mist/distributions/utils/index.rst", "autoapi/torch_mist/estimators/base/index.rst", "autoapi/torch_mist/estimators/discriminative/alpha_tuba/index.rst", "autoapi/torch_mist/estimators/discriminative/base/index.rst", "autoapi/torch_mist/estimators/discriminative/flo/index.rst", "autoapi/torch_mist/estimators/discriminative/index.rst", "autoapi/torch_mist/estimators/discriminative/infonce/index.rst", "autoapi/torch_mist/estimators/discriminative/js/index.rst", "autoapi/torch_mist/estimators/discriminative/mine/index.rst", "autoapi/torch_mist/estimators/discriminative/nwj/index.rst", "autoapi/torch_mist/estimators/discriminative/smile/index.rst", "autoapi/torch_mist/estimators/discriminative/tuba/index.rst", "autoapi/torch_mist/estimators/generative/ba/index.rst", "autoapi/torch_mist/estimators/generative/base/index.rst", "autoapi/torch_mist/estimators/generative/club/index.rst", "autoapi/torch_mist/estimators/generative/discrete/index.rst", "autoapi/torch_mist/estimators/generative/doe/index.rst", "autoapi/torch_mist/estimators/generative/gm/index.rst", "autoapi/torch_mist/estimators/generative/index.rst", "autoapi/torch_mist/estimators/generative/l1out/index.rst", "autoapi/torch_mist/estimators/generative/pq/index.rst", "autoapi/torch_mist/estimators/hybrid/index.rst", "autoapi/torch_mist/estimators/index.rst", "autoapi/torch_mist/index.rst", "autoapi/torch_mist/nn/index.rst", "autoapi/torch_mist/nn/utils/index.rst", "autoapi/torch_mist/quantization/functions/index.rst", "autoapi/torch_mist/quantization/index.rst", "autoapi/torch_mist/quantization/vqvae/index.rst", "autoapi/torch_mist/utils/caching/index.rst", "autoapi/torch_mist/utils/data/index.rst", "autoapi/torch_mist/utils/estimate/index.rst", "autoapi/torch_mist/utils/index.rst", "changelog.md", "conduct.md", "contributing.md", "example.ipynb", "index.md"], "titles": ["pytest cache directory", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.baselines</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.joint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.separable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.data.multimixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.joint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.parametrizations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.parametrizations.map</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.product</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.alpha_tuba</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.flo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.infonce</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.js</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.mine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.nwj</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.smile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.tuba</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.ba</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.club</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.discrete</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.doe</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.gm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.l1out</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.pq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.hybrid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.nn.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.quantization.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.quantization.vqvae</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.caching</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.estimate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils</span></code>", "Changelog", "Code of Conduct", "Contributing", "Example usage", "Mist - A PyTorch Mutual information Estimation toolkit"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 11, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 54, 55, 56, 57], "contain": [0, 1, 2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "data": [0, 1, 43, 52], "from": [0, 9, 13, 16, 17, 18, 19, 21, 42, 50, 54, 56, 57], "": [0, 16, 18, 54, 55], "plugin": 0, "which": [0, 9, 16, 17, 21, 42, 54], "provid": [0, 11, 15, 16, 20, 57], "lf": 0, "ff": [0, 16, 18], "option": [0, 2, 4, 6, 7, 13, 20, 23, 25, 27, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 46, 47, 48, 51, 52], "well": 0, "fixtur": 0, "do": [0, 45, 54], "commit": [0, 54, 55], "version": [0, 54, 55], "control": 0, "see": 0, "doc": [0, 55], "more": [0, 16, 18], "inform": [0, 54, 56], "page": 1, "auto": [1, 56], "gener": [1, 15, 16, 20, 23, 41, 42, 43, 57], "document": [1, 57], "1": [1, 2, 3, 4, 5, 6, 7, 9, 11, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 52, 54, 56, 57], "torch_mist": [1, 53, 55, 56, 57], "critic": [1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 43, 54, 56], "base": [1, 2, 4, 5, 6, 9, 10, 11, 13, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 56, 57], "joint": [1, 4, 10, 22, 24, 25, 27, 28, 29, 30, 31, 37, 38, 42, 43], "separ": [1, 4, 25, 26, 42, 43, 54], "util": [1, 4, 10, 43, 44, 57], "multimixtur": [1, 8, 43], "distribut": [1, 9, 23, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 47, 48, 50, 56], "parametr": [1, 10, 43], "map": [1, 10, 12, 43, 56], "transform": [1, 10, 11, 20, 43, 45], "linear": [1, 10, 16, 20, 36, 37, 38, 42, 43, 56], "permut": [1, 10, 16, 43], "split": [1, 10, 16, 43], "product": [1, 10, 43], "estim": [1, 3, 4, 5, 6, 43, 52], "discrimin": [1, 41, 42, 43, 57], "alpha_tuba": [1, 25, 42, 43], "flo": [1, 25, 42, 43, 57], "infonc": [1, 25, 42, 43, 57], "j": [1, 25, 42, 43, 56, 57], "mine": [1, 25, 42, 43, 57], "nwj": [1, 25, 27, 31, 42, 43, 57], "smile": [1, 25, 42, 43, 57], "tuba": [1, 22, 25, 28, 30, 42, 43, 57], "ba": [1, 38, 42, 43, 57], "club": [1, 38, 42, 43, 57], "discret": [1, 38, 42, 43, 57], "doe": [1, 37, 38, 40, 42, 43, 57], "gm": [1, 38, 42, 43, 57], "l1out": [1, 34, 38, 42, 43, 57], "pq": [1, 38, 42, 43, 57], "hybrid": [1, 42, 43], "nn": [1, 2, 3, 4, 5, 6, 7, 11, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 56], "quantiz": [1, 35, 38, 40, 42, 43], "function": [1, 3, 5, 6, 11, 15, 21, 23, 33, 41, 43, 45, 55, 57], "vqvae": [1, 43, 47], "cach": [1, 16, 17, 43, 52], "baselin": [1, 22, 24, 25, 31, 42, 43], "creat": [1, 11, 15, 16, 18, 20, 54, 55, 56, 57], "sphinx": 1, "autoapi": 1, "arg": [2, 3, 4, 11, 21, 42, 45, 46, 47], "kwarg": [2, 3, 4, 11, 21, 42, 45, 46, 47], "sourc": [2, 3, 4, 5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52], "torch": [2, 3, 4, 5, 6, 9, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 52, 56], "all": [2, 3, 4, 5, 6, 9, 11, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 54, 55], "neural": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 57], "network": [2, 3, 4, 5, 6, 11, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 56, 57], "your": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 55], "model": [2, 3, 4, 5, 6, 9, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 57], "should": [2, 3, 4, 5, 6, 11, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 55], "also": [2, 3, 4, 5, 6, 11, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 56], "subclass": [2, 3, 4, 5, 6, 11, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "can": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 55, 56, 57], "other": [2, 3, 4, 5, 6, 11, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 54], "allow": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 57], "nest": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "them": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "tree": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "structur": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "you": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 55, 57], "assign": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "submodul": [2, 3, 5, 6, 11, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 48], "regular": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "attribut": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47], "import": [2, 3, 4, 5, 6, 11, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 56, 57], "f": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 56, 57], "def": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "__init__": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "self": [2, 3, 4, 5, 6, 11, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "super": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "conv1": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "conv2d": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "20": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "5": [2, 3, 4, 5, 6, 9, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 56, 57], "conv2": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "forward": [2, 3, 4, 5, 6, 11, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "x": [2, 3, 4, 5, 6, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 56, 57], "relu": [2, 3, 4, 5, 6, 7, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 56], "return": [2, 3, 4, 5, 6, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 56, 57], "wai": [2, 3, 4, 5, 6, 11, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 54], "regist": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "have": [2, 3, 4, 5, 6, 9, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 54, 55], "paramet": [2, 3, 4, 5, 6, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 56], "convert": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "too": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "when": [2, 3, 4, 5, 6, 11, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 54, 55], "call": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "etc": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "As": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "per": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 56], "exampl": [2, 3, 4, 5, 6, 9, 11, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 54, 57], "abov": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "an": [2, 3, 4, 5, 6, 11, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 54, 56], "parent": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "must": [2, 3, 4, 5, 6, 9, 11, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "made": [2, 3, 4, 5, 6, 11, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "befor": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 55], "child": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "variabl": [2, 3, 4, 5, 6, 11, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "train": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 57], "bool": [2, 3, 4, 5, 6, 11, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 51, 52], "boolean": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "repres": [2, 3, 4, 5, 6, 11, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 54], "whether": [2, 3, 4, 5, 6, 11, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 57], "i": [2, 3, 4, 5, 6, 9, 11, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 54, 55, 57], "evalu": [2, 3, 4, 5, 6, 11, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "mode": [2, 3, 4, 5, 6, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48], "abstract": [2, 11, 13, 15, 16, 17, 19, 20, 21, 23, 33, 38, 39, 42], "f_": [2, 23, 24, 25, 26, 29, 30, 31, 42, 57], "tensor": [2, 3, 4, 5, 6, 11, 13, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 52, 56], "y": [2, 3, 4, 5, 6, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 56, 57], "none": [2, 4, 6, 7, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 46, 47, 48, 51, 52], "constantbaselin": 2, "valu": [2, 3, 4, 5, 6, 11, 15, 16, 17, 18, 20, 45, 57], "float": [2, 4, 6, 7, 9, 13, 16, 17, 20, 22, 25, 28, 30, 32, 35, 38, 40, 42, 46, 47, 48, 51, 52], "0": [2, 4, 6, 7, 9, 13, 16, 17, 18, 20, 22, 25, 28, 30, 35, 38, 40, 42, 46, 47, 48, 56], "exponentialmovingaverag": 2, "gamma": [2, 25, 28, 42, 47, 48], "9": [2, 25, 28, 42, 56, 57], "batchlogmeanexp": 2, "dim": [2, 11, 16, 18, 45], "str": [2, 4, 7, 11, 13, 15, 16, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 42, 46, 47, 51, 52], "learnablebaselin": 2, "net": [2, 16, 17, 20, 45, 46, 47], "learnablejointbaselin": [2, 24, 25, 42], "interpolatedbaselin": 2, "baseline_1": 2, "baseline_2": 2, "alpha": [2, 22, 25, 42, 56], "alphatubabaselin": 2, "x_dim": [2, 4, 7, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 42, 46, 47, 48, 56, 57], "int": [2, 4, 7, 9, 11, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 50, 51, 52], "hidden_dim": [2, 4, 7, 16, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 56, 57], "list": [2, 4, 7, 11, 13, 15, 16, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48], "baseline_nn": 2, "nonlinear": [2, 4, 7, 45], "callabl": [2, 49], "true": [2, 4, 7, 16, 17, 22, 25, 41, 42, 51, 52, 56, 57], "joint_baseline_nn": 2, "y_dim": [2, 4, 7, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 42, 46, 47, 48, 56, 57], "ani": [2, 4, 7, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 42, 46, 47, 51, 52, 54, 55], "comput": [3, 4, 5, 6, 16, 17, 19, 21, 42, 56], "pair": [3, 4, 5, 6, 56, 57], "param": [3, 4, 5, 6, 17, 21, 42], "The": [3, 4, 5, 6, 9, 13, 16, 17, 45, 54, 55, 56, 57], "ratio": [3, 4, 5, 6, 21, 42, 57], "given": [3, 4, 5, 6, 16, 17, 19, 55], "modul": [4, 16, 25, 38, 42, 47], "jointcrit": [4, 5, 56], "joint_net": [4, 5, 56], "separablecrit": [4, 6, 25, 26, 42], "f_x": [4, 6], "f_y": [4, 6], "temperatur": [4, 6, 7, 20, 35, 38, 40, 42], "critic_typ": [4, 7, 22, 24, 25, 26, 27, 28, 29, 30, 31, 42], "critic_param": [4, 7, 22, 24, 25, 26, 27, 28, 29, 30, 31, 42], "dict": [4, 7, 11, 13, 15, 16, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 42, 46, 47, 48, 51, 52], "joint_crit": [4, 7], "separable_crit": [4, 7], "projection_head": [4, 7], "symmetr": [4, 7], "output_dim": [4, 7], "128": [4, 7], "multivariatecorrelatednormalmixtur": 9, "rho": [9, 56], "95": 9, "sigma": 9, "epsilon": [9, 13, 16, 17], "15": 9, "delta": [9, 13], "n_dim": [9, 20, 56], "mixturesamefamili": 9, "implement": [9, 16, 17, 45], "batch": [9, 15, 16, 20, 23], "mixtur": 9, "where": 9, "compon": 9, "ar": [9, 15, 16, 17, 19, 20, 23, 54, 55, 57], "differ": [9, 54], "parameter": 9, "same": [9, 13], "type": [9, 11, 13, 15, 16, 17, 18, 20, 21, 42, 51, 52, 57], "It": [9, 57], "categor": 9, "select": 9, "over": [9, 56], "k": 9, "e": [9, 16, 18, 45, 54], "rightmost": 9, "shape": [9, 15, 16, 18, 20, 21, 23, 42, 45, 56], "equal": 9, "index": 9, "each": [9, 56], "xdoctest": 9, "skip": 9, "undefin": 9, "var": 9, "construct": [9, 54], "gaussian": 9, "1d": 9, "consist": [9, 16, 18], "weight": [9, 21, 42], "normal": [9, 16, 17, 18, 19, 56], "mix": 9, "d": [9, 21, 42], "ones": [9, 16, 18], "comp": 9, "randn": 9, "rand": [9, 45], "gmm": 9, "modl": 9, "2d": 9, "bivari": [9, 56], "independ": 9, "2": [9, 46, 47, 48, 56, 57], "3": [9, 56, 57], "random": [9, 16, 18], "mixture_distribut": 9, "like": 9, "instanc": [9, 54], "manag": 9, "probabl": [9, 11, 15, 16, 20, 23], "number": [9, 45, 56, 57], "categori": 9, "match": 9, "dimens": [9, 16, 18, 45, 57], "component_distribut": 9, "either": [9, 16, 17], "scalar": [9, 56], "batch_shap": 9, "right": [9, 54], "most": 9, "jointdistribut": [11, 37, 38, 42], "joint_dist": [11, 50], "name": [11, 13, 55], "log_prob": [11, 15, 16, 20], "sampl": [11, 15, 16, 18, 20, 21, 23, 34, 38, 42, 56, 57], "sample_shap": [11, 15, 16, 20, 23], "size": [11, 15, 16, 17, 20, 23, 45, 54, 56], "rsampl": [11, 15, 16, 20], "conditionedratiodistribut": 11, "log_margin": 11, "condit": [11, 15, 16, 17, 20, 45], "log": [11, 15, 16, 17, 18, 19, 20, 21, 42, 56, 57], "densiti": [11, 15, 16, 20], "mass": [11, 15, 16, 20], "conditionalratiodistribut": 11, "margin": 11, "union": [11, 13, 15, 16, 23, 32, 38, 42], "conditionaldistributionmodul": [11, 15, 16, 20], "helper": [11, 15, 16, 18, 20], "standard": [11, 15, 16, 20], "abc": [11, 15, 16, 20, 50, 51, 52], "us": [11, 15, 16, 17, 18, 19, 20, 45, 54, 55, 56, 57], "inherit": [11, 15, 16, 17, 19, 20], "1e": [13, 16, 17], "06": [13, 16, 17], "parametermap": 13, "dictionari": 13, "supported_distribut": 13, "n_paramet": 13, "map_paramet": 13, "parameter_list": 13, "method": [13, 16, 17, 19, 49], "respons": 13, "defin": [13, 16, 18, 54, 56, 57], "interest": [13, 54, 57], "__call__": 13, "deltamap": 13, "one": [13, 16, 17], "locat": 13, "locscalemap": 13, "scale": [13, 16, 17, 20], "scale_offset": 13, "logitsmap": 13, "distributionmodul": [15, 16], "validate_arg": [15, 16], "fals": [15, 16, 17, 20, 46, 47, 48, 51, 52], "__repr__": [15, 16, 20, 23, 25, 31, 33, 36, 37, 38, 42, 45, 46, 47], "repr": [15, 16, 20, 23, 25, 31, 33, 36, 37, 38, 42, 45, 46, 47], "pyro": [15, 16, 17, 18, 19, 23, 32, 33, 34, 36, 38, 39, 40, 42, 45, 47, 48], "conditionaldistribut": [15, 16, 23, 32, 33, 34, 36, 38, 39, 40, 42, 47, 48], "conditionaltransformeddistributionmodul": [15, 16], "base_dist": [15, 16, 18], "conditionaltransform": [15, 16, 17], "conditionaltransformeddistribut": [15, 16], "context": [15, 16, 17, 18, 20], "clear_cach": [15, 16], "transformeddistributionmodul": [15, 16, 20], "reparameter": [15, 16, 20], "input_dim": [16, 17, 18, 19, 20, 45, 46, 47], "loc": [16, 17, 20, 56], "initial_scal": [16, 17], "conditionedlinear": [16, 17], "transformmodul": [16, 17, 18, 19], "invert": [16, 17, 18], "det": [16, 17, 19], "jacobian": [16, 17, 18, 19], "thei": [16, 17, 19, 54, 55], "primarili": [16, 17], "transformeddistribut": [16, 17, 18], "whose": [16, 17], "invers": [16, 17, 19], "expens": [16, 17], "numer": [16, 17], "unstabl": [16, 17], "note": [16, 17, 18, 45, 55, 57], "care": [16, 17], "taken": [16, 17], "memoiz": [16, 17], "sinc": [16, 17, 18], "autograd": [16, 17], "graph": [16, 17], "mai": [16, 17, 54], "revers": [16, 17], "For": [16, 17, 56], "while": [16, 17], "follow": [16, 17, 54, 57], "work": [16, 17, 18, 55], "without": [16, 17, 54], "t": [16, 17, 49], "log_abs_det_jacobian": [16, 17, 18, 19], "backward": [16, 17, 56], "receiv": [16, 17], "gradient": [16, 17, 56], "howev": [16, 17, 18], "error": [16, 17], "due": [16, 17], "depend": [16, 17], "z": [16, 17, 45], "inv": [16, 17], "grad": [16, 17], "sum": [16, 17, 18, 56], "becaus": [16, 17], "deriv": [16, 17], "both": [16, 17, 54], "_call": [16, 17, 18, 19], "_invers": [16, 17, 18, 19], "set": [16, 17, 54, 55, 56], "biject": [16, 17, 18], "cache_s": [16, 17, 18], "If": [16, 17, 55], "zero": [16, 17, 18], "done": [16, 17, 55], "latest": [16, 17], "singl": [16, 17, 57], "onli": [16, 17], "support": [16, 17, 55], "domain": [16, 17, 19], "constraint": [16, 17], "valid": [16, 17], "input": [16, 17, 18, 19, 45], "codomain": [16, 17, 19], "output": [16, 17, 18, 19, 45], "A": [16, 17, 18], "iff": [16, 17], "everi": [16, 17, 55], "least": [16, 17], "maintain": [16, 17, 54], "weaker": [16, 17], "pseudoinvers": [16, 17], "properti": [16, 17, 35, 38, 42, 46, 47, 48], "sign": [16, 17], "univari": [16, 17], "monoton": [16, 17], "increas": [16, 17, 18], "decreas": [16, 17], "_param": [16, 17], "conditionallinear": [16, 17], "skip_connect": [16, 17], "conditionaltransformmodul": [16, 17], "learnabl": [16, 17, 19, 20], "flow": [16, 17, 19, 45], "rather": [16, 17, 19], "than": [16, 17, 19], "so": [16, 17, 18, 19, 45], "conditional_linear": [16, 17, 20, 32, 34, 36, 37, 38, 39, 42], "context_dim": [16, 17, 20, 45], "conditional_skip_linear": [16, 17], "learn_loc": [16, 17], "splittransform": [16, 19], "out_dim": [16, 19], "dist": [16, 18, 19], "add_dim": [16, 19], "remove_dim": [16, 19], "dy": [16, 17, 19], "dx": [16, 17, 19], "reorder": [16, 18], "multipli": [16, 18], "matrix": [16, 18], "between": [16, 18, 57], "affineautoregress": [16, 18], "flexibl": [16, 18], "result": [16, 18], "stabil": [16, 18], "learn": [16, 18, 56, 57], "whilst": [16, 18], "being": [16, 18], "autoregress": [16, 18, 45], "absolut": [16, 18], "determin": [16, 18, 54], "easili": [16, 18], "calcul": [16, 18], "two": [16, 18, 45], "layer": [16, 18, 45, 56], "equival": [16, 18], "insid": [16, 18], "those": [16, 18], "iaf": [16, 18], "usag": [16, 18, 45], "autoregressivenn": [16, 18], "10": [16, 18, 45, 48, 56, 57], "iaf1": [16, 18], "40": [16, 18], "randperm": [16, 18], "dtype": [16, 18], "long": [16, 18], "iaf2": [16, 18], "flow_dist": [16, 18], "longtensor": [16, 18], "order": [16, 18], "appli": [16, 18, 45, 54], "neg": [16, 18], "event": [16, 18, 54], "ab": [16, 18], "update_devic": [16, 18], "invok": [16, 18], "prototyp": [16, 18], "previou": [16, 18], "elementwis": [16, 18], "dy_0": [16, 18], "dx_0": [16, 18], "dy_": [16, 18], "n": [16, 18, 21, 42], "dx_": [16, 18], "express": [16, 18, 54], "turn": [16, 18], "out": [16, 18, 57], "alwai": [16, 18, 55], "vector": [16, 18], "object": [16, 18], "tupl": [16, 18, 50, 51, 52], "correspond": [16, 18, 56], "integ": [16, 18], "indic": [16, 18], "default": [16, 18, 45], "fetch_transform": 20, "transform_nam": [20, 32, 34, 38, 39, 42], "conditionalcategoricalmodul": 20, "normalmodul": 20, "categoricalmodul": 20, "logit": 20, "conditionalstandardnormalmodul": 20, "conditional_transformed_norm": 20, "n_transform": [20, 32, 34, 38, 39, 42], "transform_param": 20, "transformed_norm": 20, "conditional_categor": 20, "n_class": 20, "mutualinformationestim": [21, 23, 33, 35, 38, 41, 42, 51, 52], "log_ratio": [21, 23, 33, 35, 38, 39, 42], "expected_log_ratio": [21, 32, 38, 39, 41, 42], "loss": [21, 23, 25, 27, 30, 31, 33, 35, 36, 37, 38, 41, 42, 46, 47, 48, 56], "p": [21, 42, 56], "expect": [21, 42, 54], "alphatuba": [22, 25, 42, 57], "mc_sampl": [22, 23, 24, 25, 27, 28, 29, 30, 31, 42, 56], "01": [22, 25, 42, 56], "learnable_baselin": [22, 25, 42], "baseline_param": [22, 24, 25, 31, 42], "empiricaldistribut": 23, "add_sampl": 23, "updat": [23, 55, 56], "discriminativemutualinformationestim": [23, 24, 25, 26, 29, 41, 42], "propos": [23, 55, 57], "unnormalized_log_ratio": [23, 41], "critic_on_posit": 23, "sample_propos": 23, "n_sampl": 23, "critic_on_neg": 23, "compute_log_ratio": [23, 24, 25, 26, 29, 30, 31, 42], "grad_baselin": [25, 31, 42], "tau": [25, 30, 42], "q_y_given_x": [32, 33, 34, 36, 38, 39, 40, 42], "entropy_i": [32, 38, 42], "generativemutualinformationestim": [32, 33, 36, 38, 39, 41, 42], "approx_log_p_y_given_x": [33, 35, 38, 40, 42], "approx_log_p_i": [33, 34, 35, 36, 38, 39, 40, 42], "discretemutualinformationestim": [35, 38, 42], "quantization_x": [35, 38, 42], "quantizationfunct": [35, 38, 40, 42, 46, 47, 48], "quantization_i": [35, 38, 42], "log_q_qxi": [35, 38, 42], "quantize_x": [35, 38, 42], "quantize_i": [35, 38, 40, 42], "approx_log_p_xi": [35, 37, 38, 42], "approx_log_p_x": [35, 37, 38, 42], "log_p_x_given_i": [35, 38, 42], "q_y": [36, 37, 38, 42], "conditional_transform_nam": [36, 38, 42], "n_conditional_transform": [36, 38, 42], "marginal_transform_nam": [36, 37, 38, 42], "n_marginal_transform": [36, 37, 38, 42], "q_xy": [37, 38, 42], "q_x": [37, 38, 42], "approx_log_p_x_given_i": [37, 38, 42], "joint_transform_nam": [37, 38, 42], "n_joint_transform": [37, 38, 42], "q_qy_given_x": [38, 40, 42], "hybridmutualinformationestim": 41, "generative_estim": 41, "discriminative_estim": 41, "train_generative_estim": 41, "train_discriminative_estim": 41, "__version__": [43, 56], "jointdensenn": 45, "param_dim": 45, "densenn": [45, 56], "simpl": [45, 56, 57], "dens": 45, "feedforward": 45, "g": 45, "some": 45, "conditionalplanarflow": 45, "uncondit": 45, "affinecoupl": 45, "requir": [45, 55], "100": 45, "50": 45, "b": [45, 55], "c": 45, "dimension": 45, "hidden": [45, 57], "unit": 45, "p_n": 45, "final": 45, "unbound": 45, "real": 45, "constant": [45, 56], "ident": [45, 54], "skipdensenn": 45, "mergeoutput": 45, "n_bin": [46, 47, 48], "learnablequant": [46, 47], "vectorquant": [46, 47], "codebook_lookup": [46, 47], "learnablevectorquant": [46, 47, 48], "quantization_dim": [46, 47, 48], "fixedquant": [46, 47], "threshold": [46, 47], "learnable_vector_quant": [46, 47], "trained_vector_quant": [46, 47], "dataload": [46, 47, 51, 52, 56, 57], "iter": [46, 47, 50, 51, 52, 56], "cross_mod": [46, 47, 48], "decoder_transform_param": [46, 47, 48], "beta": [46, 47, 48], "n_train_epoch": [46, 47], "optimizer_class": [46, 47, 51, 52, 56], "optim": [46, 47, 51, 52, 56, 57], "adam": [46, 47, 51, 52], "optimizer_param": [46, 47, 51, 52, 56], "encod": [47, 48], "decod": [47, 48], "25": [47, 48], "99": [47, 48], "initial_pati": 48, "ellipsi": 49, "reset_cache_after_cal": 49, "reset_cache_before_cal": 49, "sampledataload": [50, 56], "batch_siz": [50, 56], "max_sampl": [50, 56], "100000": [50, 56], "split_dim": 50, "collect": [50, 51, 52, 56], "__next__": 50, "next": 50, "item": [50, 56], "exhaust": 50, "rais": 50, "stopiter": 50, "__len__": 50, "optimize_mi_estim": [51, 52, 56, 57], "devic": [51, 52, 57], "cpu": [51, 52, 57], "epoch": [51, 52, 56, 57], "verbos": [51, 52], "return_log": [51, 52, 57], "panda": [51, 52, 56], "datafram": [51, 52, 56], "estimate_mi": [51, 52, 56, 57], "first": [53, 56, 57], "releas": [53, 55, 57], "In": 54, "foster": 54, "open": [54, 55], "welcom": [54, 55], "environ": 54, "we": [54, 56, 57], "contributor": 54, "make": [54, 55], "particip": 54, "project": [54, 55, 56, 57], "commun": 54, "harass": 54, "free": [54, 55], "experi": 54, "everyon": 54, "regardless": 54, "ag": 54, "bodi": 54, "disabl": 54, "ethnic": 54, "gender": 54, "level": 54, "nation": 54, "person": 54, "appear": 54, "race": 54, "religion": 54, "sexual": 54, "orient": 54, "behavior": 54, "contribut": 54, "posit": 54, "includ": [54, 55, 56], "inclus": 54, "languag": 54, "Being": 54, "respect": 54, "viewpoint": 54, "gracefulli": 54, "accept": 54, "focus": 54, "what": 54, "best": 54, "show": 54, "empathi": 54, "toward": 54, "member": 54, "unaccept": 54, "imageri": 54, "unwelcom": 54, "attent": 54, "advanc": [54, 57], "troll": 54, "insult": 54, "derogatori": 54, "comment": 54, "polit": 54, "attack": 54, "public": 54, "privat": 54, "publish": 54, "physic": 54, "electron": 54, "address": 54, "explicit": 54, "permiss": 54, "could": 54, "reason": 54, "consid": 54, "inappropri": 54, "profession": 54, "clarifi": 54, "take": 54, "appropri": [54, 55], "fair": 54, "correct": 54, "action": 54, "remov": 54, "edit": 54, "reject": 54, "wiki": 54, "issu": [54, 55], "align": 54, "ban": 54, "temporarili": 54, "perman": 54, "deem": 54, "threaten": 54, "offens": 54, "harm": 54, "within": 54, "space": 54, "individu": 54, "its": [54, 55, 57], "offici": [54, 55], "mail": 54, "post": [54, 55], "via": [54, 57], "social": 54, "media": 54, "account": 54, "act": 54, "appoint": 54, "onlin": 54, "offlin": 54, "represent": [54, 57], "further": 54, "abus": 54, "otherwis": 54, "report": 54, "contact": 54, "team": 54, "review": 54, "investig": 54, "complaint": 54, "respond": 54, "circumst": 54, "oblig": 54, "confidenti": 54, "regard": 54, "incid": 54, "detail": [54, 55, 57], "specif": 54, "polici": 54, "who": 54, "good": 54, "faith": 54, "face": 54, "temporari": 54, "repercuss": 54, "leadership": 54, "adapt": 54, "coven": 54, "homepag": 54, "4": [54, 56, 57], "greatli": 55, "appreci": 55, "littl": 55, "bit": 55, "help": 55, "credit": 55, "pleas": [55, 57], "oper": 55, "system": [55, 57], "about": 55, "local": 55, "setup": 55, "might": 55, "troubleshoot": 55, "step": [55, 56], "reproduc": 55, "look": 55, "through": 55, "github": 55, "anyth": 55, "tag": 55, "want": 55, "whoever": 55, "enhanc": 55, "never": 55, "enough": 55, "feel": 55, "part": 55, "docstr": 55, "even": 55, "web": 55, "blog": 55, "articl": 55, "explain": 55, "how": [55, 57], "would": 55, "keep": 55, "scope": 55, "narrow": 55, "possibl": 55, "easier": 55, "rememb": 55, "volunt": 55, "driven": 55, "readi": 55, "here": [55, 57], "up": 55, "develop": 55, "download": 55, "copi": 55, "instal": 55, "poetri": 55, "git": 55, "similar": 55, "branch": 55, "chang": 55, "checkout": 55, "bugfix": 55, "re": 55, "check": [55, 57], "conform": 55, "format": [55, 56], "pass": [55, 56], "test": [55, 56], "meet": 55, "addit": 55, "add": 55, "current": 55, "python": 55, "By": [55, 57], "agre": [55, 57], "abid": [55, 57], "term": [55, 57], "To": 56, "print": [56, 57], "dataset": 56, "multivariatenorm": 56, "cov": 56, "mean": 56, "p_xy": 56, "unsqueez": 56, "repeat": 56, "covariance_matrix": 56, "matplotlib": 56, "pyplot": 56, "plt": 56, "10000": 56, "scatter": 56, "reshap": 56, "marker": 56, "pathcollect": 56, "0x7fbeddf351f0": 56, "mutual": 56, "refer": 56, "true_mi": 56, "ey": 56, "entropi": 56, "nat": 56, "8303654193878174": 56, "wrap": 56, "trainload": 56, "64": [56, 57], "testload": 56, "simpli": 56, "break": 56, "deep": [56, 57], "infomax": 56, "sequenti": 56, "specifi": 56, "mont": 56, "carlo": 56, "16": [56, 57], "Then": 56, "jensen": 56, "shannon": 56, "mi_estim": 56, "in_featur": 56, "out_featur": 56, "bia": 56, "inplac": 56, "now": 56, "tqdm": 56, "adamw": 56, "rate": 56, "5e": 56, "opt": 56, "lr": 56, "n_epoch": 56, "empti": 56, "progress": 56, "rang": 56, "And": 56, "mi": [56, 57], "reset": 56, "zero_grad": 56, "backpropag": 56, "append": 56, "len": 56, "plot": 56, "time": 56, "pd": 56, "ax": 56, "subplot": 56, "figsiz": 56, "l": 56, "set_titl": 56, "axhlin": 56, "color": 56, "red": 56, "line": 56, "line2d": 56, "0x7fbeb942d820": 56, "numpi": 56, "np": 56, "std": [56, 57], "3f": 56, "846": 56, "117": 56, "830": 56, "librari": 56, "avoid": 56, "explicitli": 56, "loop": 56, "modulelist": 56, "mi_valu": 56, "mi_std": 56, "828": 56, "113": 56, "TO": 57, "BE": 57, "soon": 57, "packag": 57, "pip": 57, "basic": 57, "continu": 57, "modern": 57, "architectur": 57, "observ": 57, "need": 57, "instanti": 57, "32": 57, "train_log": 57, "lastli": 57, "descript": 57, "summar": 57, "tabl": 57, "xi": 57, "b_": 57, "6": 57, "7": 57, "8": 57, "q_": 57, "theta": 57, "r_": 57, "psi": 57, "q": 57, "11": 57, "combin": 57, "12": 57, "nguyen": 57, "xuanlong": 57, "martin": 57, "wainwright": 57, "michael": 57, "jordan": 57, "diverg": 57, "likelihood": 57, "convex": 57, "risk": 57, "minim": 57, "ieee": 57, "transact": 57, "theori": 57, "56": 57, "2010": 57, "5847": 57, "5861": 57, "belghazi": 57, "moham": 57, "ishmael": 57, "et": 57, "al": 57, "intern": 57, "confer": 57, "machin": 57, "pmlr": 57, "2018": 57, "oord": 57, "aaron": 57, "van": 57, "den": 57, "yazh": 57, "li": 57, "oriol": 57, "vinyal": 57, "contrast": 57, "predict": 57, "code": 57, "arxiv": 57, "preprint": 57, "1807": 57, "03748": 57, "pool": 57, "ben": 57, "On": 57, "variat": 57, "bound": 57, "2019": 57, "hjelm": 57, "r": 57, "devon": 57, "maxim": 57, "1808": 57, "06670": 57, "song": 57, "jiam": 57, "stefano": 57, "ermon": 57, "understand": 57, "limit": 57, "1910": 57, "06222": 57, "guo": 57, "qing": 57, "tight": 57, "fenchel": 57, "legendr": 57, "process": 57, "35": 57, "2022": 57, "28319": 57, "28334": 57, "barber": 57, "david": 57, "felix": 57, "agakov": 57, "im": 57, "algorithm": 57, "approach": 57, "320": 57, "2004": 57, "201": 57, "mcallest": 57, "karl": 57, "strato": 57, "formal": 57, "measur": 57, "artifici": 57, "intellig": 57, "statist": 57, "2020": 57, "cheng": 57, "pengyu": 57, "upper": 57, "federici": 57, "marco": 57, "ruhe": 57, "patrick": 57, "forr\u00e9": 57, "effect": 57, "2306": 57, "00608": 57, "2023": 57, "brekelman": 57, "rob": 57, "improv": 57, "anneal": 57, "energi": 57, "2303": 57, "06992": 57, "guidelin": 57, "conduct": 57, "wa": 57, "under": 57, "mit": 57, "cookiecutt": 57, "py": 57, "pkg": 57, "templat": 57}, "objects": {"": [[43, 0, 0, "-", "torch_mist"]], "torch_mist": [[43, 1, 1, "", "__version__"], [2, 0, 0, "-", "baselines"], [4, 0, 0, "-", "critic"], [8, 0, 0, "-", "data"], [10, 0, 0, "-", "distributions"], [42, 0, 0, "-", "estimators"], [44, 0, 0, "-", "nn"], [47, 0, 0, "-", "quantization"], [52, 0, 0, "-", "utils"]], "torch_mist.baselines": [[2, 2, 1, "", "AlphaTUBABaseline"], [2, 2, 1, "", "Baseline"], [2, 2, 1, "", "BatchLogMeanExp"], [2, 2, 1, "", "ConstantBaseline"], [2, 2, 1, "", "ExponentialMovingAverage"], [2, 2, 1, "", "InterpolatedBaseline"], [2, 2, 1, "", "LearnableBaseline"], [2, 2, 1, "", "LearnableJointBaseline"], [2, 4, 1, "", "baseline_nn"], [2, 4, 1, "", "joint_baseline_nn"]], "torch_mist.baselines.Baseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.BatchLogMeanExp": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.ConstantBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.ExponentialMovingAverage": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.InterpolatedBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.LearnableBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.LearnableJointBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.critic": [[4, 2, 1, "", "Critic"], [4, 2, 1, "", "JointCritic"], [4, 2, 1, "", "SeparableCritic"], [3, 0, 0, "-", "base"], [4, 4, 1, "", "critic"], [5, 0, 0, "-", "joint"], [4, 4, 1, "", "joint_critic"], [6, 0, 0, "-", "separable"], [4, 4, 1, "", "separable_critic"], [7, 0, 0, "-", "utils"]], "torch_mist.critic.Critic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.JointCritic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.SeparableCritic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.base": [[3, 2, 1, "", "Critic"]], "torch_mist.critic.base.Critic": [[3, 3, 1, "", "forward"]], "torch_mist.critic.joint": [[5, 2, 1, "", "JointCritic"]], "torch_mist.critic.joint.JointCritic": [[5, 3, 1, "", "forward"]], "torch_mist.critic.separable": [[6, 2, 1, "", "SeparableCritic"]], "torch_mist.critic.separable.SeparableCritic": [[6, 3, 1, "", "forward"]], "torch_mist.critic.utils": [[7, 4, 1, "", "critic"], [7, 4, 1, "", "joint_critic"], [7, 4, 1, "", "separable_critic"]], "torch_mist.data": [[9, 0, 0, "-", "multimixture"]], "torch_mist.data.multimixture": [[9, 2, 1, "", "MultivariateCorrelatedNormalMixture"]], "torch_mist.distributions": [[11, 0, 0, "-", "joint"], [12, 0, 0, "-", "parametrizations"], [14, 0, 0, "-", "product"], [16, 0, 0, "-", "transforms"], [20, 0, 0, "-", "utils"]], "torch_mist.distributions.joint": [[11, 2, 1, "", "ConditionalRatioDistribution"], [11, 2, 1, "", "ConditionedRatioDistribution"], [11, 2, 1, "", "JointDistribution"]], "torch_mist.distributions.joint.ConditionalRatioDistribution": [[11, 3, 1, "", "condition"]], "torch_mist.distributions.joint.ConditionedRatioDistribution": [[11, 3, 1, "", "log_prob"]], "torch_mist.distributions.joint.JointDistribution": [[11, 3, 1, "", "log_prob"], [11, 3, 1, "", "rsample"], [11, 3, 1, "", "sample"]], "torch_mist.distributions.parametrizations": [[13, 0, 0, "-", "map"]], "torch_mist.distributions.parametrizations.map": [[13, 2, 1, "", "DeltaMap"], [13, 1, 1, "", "EPSILON"], [13, 2, 1, "", "LocScaleMap"], [13, 2, 1, "", "LogitsMap"], [13, 2, 1, "", "ParameterMap"]], "torch_mist.distributions.parametrizations.map.DeltaMap": [[13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "n_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.LocScaleMap": [[13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.LogitsMap": [[13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "n_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.ParameterMap": [[13, 3, 1, "", "__call__"], [13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "n_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.transforms": [[16, 2, 1, "", "ConditionalDistributionModule"], [16, 2, 1, "", "ConditionalLinear"], [16, 2, 1, "", "ConditionalTransformedDistributionModule"], [16, 2, 1, "", "DistributionModule"], [16, 2, 1, "", "Linear"], [16, 2, 1, "", "Permute"], [16, 2, 1, "", "SplitTransform"], [16, 2, 1, "", "TransformedDistributionModule"], [15, 0, 0, "-", "base"], [16, 4, 1, "", "conditional_linear"], [16, 4, 1, "", "conditional_skip_linear"], [17, 0, 0, "-", "linear"], [18, 0, 0, "-", "permute"], [19, 0, 0, "-", "split"]], "torch_mist.distributions.transforms.ConditionalLinear": [[16, 3, 1, "", "_params"], [16, 5, 1, "", "bijective"], [16, 5, 1, "", "codomain"], [16, 3, 1, "", "condition"], [16, 5, 1, "", "domain"]], "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule": [[16, 3, 1, "", "__repr__"], [16, 3, 1, "", "clear_cache"], [16, 3, 1, "", "condition"]], "torch_mist.distributions.transforms.DistributionModule": [[16, 3, 1, "", "__repr__"]], "torch_mist.distributions.transforms.Linear": [[16, 3, 1, "", "_params"], [16, 5, 1, "", "bijective"], [16, 5, 1, "", "codomain"], [16, 5, 1, "", "domain"], [16, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.Permute": [[16, 3, 1, "", "_call"], [16, 3, 1, "", "_inverse"], [16, 3, 1, "", "log_abs_det_jacobian"], [16, 3, 1, "", "update_device"]], "torch_mist.distributions.transforms.SplitTransform": [[16, 3, 1, "", "_call"], [16, 3, 1, "", "_inverse"], [16, 3, 1, "", "add_dims"], [16, 5, 1, "", "codomain"], [16, 3, 1, "", "dist"], [16, 5, 1, "", "domain"], [16, 3, 1, "", "log_abs_det_jacobian"], [16, 3, 1, "", "remove_dims"]], "torch_mist.distributions.transforms.TransformedDistributionModule": [[16, 3, 1, "", "__repr__"], [16, 3, 1, "", "log_prob"], [16, 3, 1, "", "rsample"]], "torch_mist.distributions.transforms.base": [[15, 2, 1, "", "ConditionalDistributionModule"], [15, 2, 1, "", "ConditionalTransformedDistributionModule"], [15, 2, 1, "", "DistributionModule"], [15, 2, 1, "", "TransformedDistributionModule"]], "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule": [[15, 3, 1, "", "__repr__"], [15, 3, 1, "", "clear_cache"], [15, 3, 1, "", "condition"]], "torch_mist.distributions.transforms.base.DistributionModule": [[15, 3, 1, "", "__repr__"]], "torch_mist.distributions.transforms.base.TransformedDistributionModule": [[15, 3, 1, "", "__repr__"], [15, 3, 1, "", "log_prob"], [15, 3, 1, "", "rsample"]], "torch_mist.distributions.transforms.linear": [[17, 2, 1, "", "ConditionalLinear"], [17, 2, 1, "", "ConditionedLinear"], [17, 2, 1, "", "Linear"], [17, 4, 1, "", "conditional_linear"], [17, 4, 1, "", "conditional_skip_linear"], [17, 4, 1, "", "linear"]], "torch_mist.distributions.transforms.linear.ConditionalLinear": [[17, 3, 1, "", "_params"], [17, 5, 1, "", "bijective"], [17, 5, 1, "", "codomain"], [17, 3, 1, "", "condition"], [17, 5, 1, "", "domain"]], "torch_mist.distributions.transforms.linear.ConditionedLinear": [[17, 3, 1, "", "_call"], [17, 3, 1, "", "_inverse"], [17, 5, 1, "id2", "bijective"], [17, 5, 1, "id1", "codomain"], [17, 5, 1, "id0", "domain"], [17, 3, 1, "", "log_abs_det_jacobian"], [17, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.linear.Linear": [[17, 3, 1, "", "_params"], [17, 5, 1, "", "bijective"], [17, 5, 1, "", "codomain"], [17, 5, 1, "", "domain"], [17, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.permute": [[18, 2, 1, "", "Permute"], [18, 4, 1, "", "permute"]], "torch_mist.distributions.transforms.permute.Permute": [[18, 3, 1, "", "_call"], [18, 3, 1, "", "_inverse"], [18, 3, 1, "", "log_abs_det_jacobian"], [18, 3, 1, "", "update_device"]], "torch_mist.distributions.transforms.split": [[19, 2, 1, "", "SplitTransform"]], "torch_mist.distributions.transforms.split.SplitTransform": [[19, 3, 1, "", "_call"], [19, 3, 1, "", "_inverse"], [19, 3, 1, "", "add_dims"], [19, 5, 1, "", "codomain"], [19, 3, 1, "", "dist"], [19, 5, 1, "", "domain"], [19, 3, 1, "", "log_abs_det_jacobian"], [19, 3, 1, "", "remove_dims"]], "torch_mist.distributions.utils": [[20, 2, 1, "", "CategoricalModule"], [20, 2, 1, "", "ConditionalCategoricalModule"], [20, 2, 1, "", "ConditionalStandardNormalModule"], [20, 2, 1, "", "NormalModule"], [20, 4, 1, "", "conditional_categorical"], [20, 4, 1, "", "conditional_transformed_normal"], [20, 4, 1, "", "fetch_transform"], [20, 4, 1, "", "transformed_normal"]], "torch_mist.distributions.utils.CategoricalModule": [[20, 3, 1, "", "__repr__"], [20, 3, 1, "", "log_prob"], [20, 3, 1, "", "rsample"]], "torch_mist.distributions.utils.ConditionalCategoricalModule": [[20, 3, 1, "", "condition"]], "torch_mist.distributions.utils.ConditionalStandardNormalModule": [[20, 3, 1, "", "condition"]], "torch_mist.distributions.utils.NormalModule": [[20, 3, 1, "", "__repr__"], [20, 3, 1, "", "log_prob"], [20, 3, 1, "", "rsample"]], "torch_mist.estimators": [[42, 2, 1, "", "AlphaTUBA"], [42, 2, 1, "", "BA"], [42, 2, 1, "", "CLUB"], [42, 2, 1, "", "DiscreteMutualInformationEstimator"], [42, 2, 1, "", "DoE"], [42, 2, 1, "", "FLO"], [42, 2, 1, "", "GM"], [42, 2, 1, "", "GenerativeMutualInformationEstimator"], [42, 2, 1, "", "InfoNCE"], [42, 2, 1, "", "JS"], [42, 2, 1, "", "L1Out"], [42, 2, 1, "", "MINE"], [42, 2, 1, "", "MutualInformationEstimator"], [42, 2, 1, "", "NWJ"], [42, 2, 1, "", "PQ"], [42, 2, 1, "", "SMILE"], [42, 2, 1, "", "TUBA"], [42, 4, 1, "", "alpha_tuba"], [42, 4, 1, "", "ba"], [21, 0, 0, "-", "base"], [42, 4, 1, "", "club"], [42, 4, 1, "", "discrete"], [25, 0, 0, "-", "discriminative"], [42, 4, 1, "", "doe"], [42, 4, 1, "", "flo"], [38, 0, 0, "-", "generative"], [42, 4, 1, "", "gm"], [41, 0, 0, "-", "hybrid"], [42, 4, 1, "", "infonce"], [42, 4, 1, "", "js"], [42, 4, 1, "", "l1out"], [42, 4, 1, "", "mine"], [42, 4, 1, "", "nwj"], [42, 4, 1, "", "pq"], [42, 4, 1, "", "smile"], [42, 4, 1, "", "tuba"]], "torch_mist.estimators.BA": [[42, 3, 1, "", "expected_log_ratio"]], "torch_mist.estimators.CLUB": [[42, 3, 1, "", "approx_log_p_y"]], "torch_mist.estimators.DiscreteMutualInformationEstimator": [[42, 3, 1, "", "approx_log_p_x"], [42, 3, 1, "", "approx_log_p_xy"], [42, 3, 1, "", "approx_log_p_y"], [42, 3, 1, "", "approx_log_p_y_given_x"], [42, 3, 1, "", "log_p_x_given_y"], [42, 6, 1, "", "log_q_qxy"], [42, 3, 1, "", "log_ratio"], [42, 3, 1, "", "loss"], [42, 3, 1, "", "quantize_x"], [42, 3, 1, "", "quantize_y"]], "torch_mist.estimators.DoE": [[42, 3, 1, "", "__repr__"], [42, 3, 1, "", "approx_log_p_y"], [42, 3, 1, "", "loss"]], "torch_mist.estimators.FLO": [[42, 3, 1, "", "compute_log_ratio"]], "torch_mist.estimators.GM": [[42, 3, 1, "", "__repr__"], [42, 3, 1, "", "approx_log_p_x"], [42, 3, 1, "", "approx_log_p_x_given_y"], [42, 3, 1, "", "approx_log_p_xy"], [42, 3, 1, "", "loss"]], "torch_mist.estimators.GenerativeMutualInformationEstimator": [[42, 3, 1, "", "__repr__"], [42, 3, 1, "", "approx_log_p_y"], [42, 3, 1, "", "approx_log_p_y_given_x"], [42, 3, 1, "", "log_ratio"], [42, 3, 1, "", "loss"], [42, 3, 1, "", "q_Y_given_x"]], "torch_mist.estimators.InfoNCE": [[42, 3, 1, "", "compute_log_ratio"]], "torch_mist.estimators.JS": [[42, 3, 1, "", "loss"]], "torch_mist.estimators.L1Out": [[42, 3, 1, "", "approx_log_p_y"], [42, 3, 1, "", "expected_log_ratio"], [42, 3, 1, "", "log_ratio"]], "torch_mist.estimators.MutualInformationEstimator": [[42, 3, 1, "", "expected_log_ratio"], [42, 3, 1, "", "forward"], [42, 3, 1, "", "log_ratio"], [42, 3, 1, "", "loss"]], "torch_mist.estimators.NWJ": [[42, 3, 1, "", "compute_log_ratio"]], "torch_mist.estimators.PQ": [[42, 3, 1, "", "approx_log_p_y"], [42, 3, 1, "", "approx_log_p_y_given_x"], [42, 3, 1, "", "q_Y_given_x"], [42, 3, 1, "", "quantize_y"]], "torch_mist.estimators.SMILE": [[42, 3, 1, "", "compute_log_ratio"], [42, 3, 1, "", "loss"]], "torch_mist.estimators.TUBA": [[42, 3, 1, "", "__repr__"], [42, 3, 1, "", "compute_log_ratio"], [42, 3, 1, "", "loss"]], "torch_mist.estimators.base": [[21, 2, 1, "", "MutualInformationEstimator"]], "torch_mist.estimators.base.MutualInformationEstimator": [[21, 3, 1, "", "expected_log_ratio"], [21, 3, 1, "", "forward"], [21, 3, 1, "", "log_ratio"], [21, 3, 1, "", "loss"]], "torch_mist.estimators.discriminative": [[25, 2, 1, "", "AlphaTUBA"], [25, 2, 1, "", "FLO"], [25, 2, 1, "", "InfoNCE"], [25, 2, 1, "", "JS"], [25, 2, 1, "", "MINE"], [25, 2, 1, "", "NWJ"], [25, 2, 1, "", "SMILE"], [25, 2, 1, "", "TUBA"], [25, 4, 1, "", "alpha_tuba"], [22, 0, 0, "-", "alpha_tuba"], [23, 0, 0, "-", "base"], [25, 4, 1, "", "flo"], [24, 0, 0, "-", "flo"], [26, 0, 0, "-", "infonce"], [27, 0, 0, "-", "js"], [28, 0, 0, "-", "mine"], [29, 0, 0, "-", "nwj"], [30, 0, 0, "-", "smile"], [31, 0, 0, "-", "tuba"]], "torch_mist.estimators.discriminative.FLO": [[25, 3, 1, "", "compute_log_ratio"]], "torch_mist.estimators.discriminative.InfoNCE": [[25, 3, 1, "", "compute_log_ratio"]], "torch_mist.estimators.discriminative.JS": [[25, 3, 1, "", "loss"]], "torch_mist.estimators.discriminative.NWJ": [[25, 3, 1, "", "compute_log_ratio"]], "torch_mist.estimators.discriminative.SMILE": [[25, 3, 1, "", "compute_log_ratio"], [25, 3, 1, "", "loss"]], "torch_mist.estimators.discriminative.TUBA": [[25, 3, 1, "", "__repr__"], [25, 3, 1, "", "compute_log_ratio"], [25, 3, 1, "", "loss"]], "torch_mist.estimators.discriminative.alpha_tuba": [[22, 2, 1, "", "AlphaTUBA"], [22, 4, 1, "", "alpha_tuba"]], "torch_mist.estimators.discriminative.base": [[23, 2, 1, "", "DiscriminativeMutualInformationEstimator"], [23, 2, 1, "", "EmpiricalDistribution"]], "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator": [[23, 3, 1, "", "__repr__"], [23, 3, 1, "", "compute_log_ratio"], [23, 3, 1, "", "critic_on_negatives"], [23, 3, 1, "", "critic_on_positives"], [23, 3, 1, "", "log_ratio"], [23, 3, 1, "", "loss"], [23, 3, 1, "", "sample_proposal"], [23, 3, 1, "", "unnormalized_log_ratio"]], "torch_mist.estimators.discriminative.base.EmpiricalDistribution": [[23, 3, 1, "", "add_samples"], [23, 3, 1, "", "sample"], [23, 3, 1, "", "update"]], "torch_mist.estimators.discriminative.flo": [[24, 2, 1, "", "FLO"], [24, 4, 1, "", "flo"]], "torch_mist.estimators.discriminative.flo.FLO": [[24, 3, 1, "", "compute_log_ratio"]], "torch_mist.estimators.discriminative.infonce": [[26, 2, 1, "", "InfoNCE"], [26, 4, 1, "", "infonce"]], "torch_mist.estimators.discriminative.infonce.InfoNCE": [[26, 3, 1, "", "compute_log_ratio"]], "torch_mist.estimators.discriminative.js": [[27, 2, 1, "", "JS"], [27, 4, 1, "", "js"]], "torch_mist.estimators.discriminative.js.JS": [[27, 3, 1, "", "loss"]], "torch_mist.estimators.discriminative.mine": [[28, 2, 1, "", "MINE"], [28, 4, 1, "", "mine"]], "torch_mist.estimators.discriminative.nwj": [[29, 2, 1, "", "NWJ"], [29, 4, 1, "", "nwj"]], "torch_mist.estimators.discriminative.nwj.NWJ": [[29, 3, 1, "", "compute_log_ratio"]], "torch_mist.estimators.discriminative.smile": [[30, 2, 1, "", "SMILE"], [30, 4, 1, "", "smile"]], "torch_mist.estimators.discriminative.smile.SMILE": [[30, 3, 1, "", "compute_log_ratio"], [30, 3, 1, "", "loss"]], "torch_mist.estimators.discriminative.tuba": [[31, 2, 1, "", "TUBA"], [31, 4, 1, "", "tuba"]], "torch_mist.estimators.discriminative.tuba.TUBA": [[31, 3, 1, "", "__repr__"], [31, 3, 1, "", "compute_log_ratio"], [31, 3, 1, "", "loss"]], "torch_mist.estimators.generative": [[38, 2, 1, "", "BA"], [38, 2, 1, "", "CLUB"], [38, 2, 1, "", "DiscreteMutualInformationEstimator"], [38, 2, 1, "", "DoE"], [38, 2, 1, "", "GM"], [38, 2, 1, "", "GenerativeMutualInformationEstimator"], [38, 2, 1, "", "L1Out"], [38, 2, 1, "", "PQ"], [38, 4, 1, "", "ba"], [32, 0, 0, "-", "ba"], [33, 0, 0, "-", "base"], [38, 4, 1, "", "club"], [34, 0, 0, "-", "club"], [38, 4, 1, "", "discrete"], [35, 0, 0, "-", "discrete"], [38, 4, 1, "", "doe"], [36, 0, 0, "-", "doe"], [38, 4, 1, "", "gm"], [37, 0, 0, "-", "gm"], [39, 0, 0, "-", "l1out"], [40, 0, 0, "-", "pq"]], "torch_mist.estimators.generative.BA": [[38, 3, 1, "", "expected_log_ratio"]], "torch_mist.estimators.generative.CLUB": [[38, 3, 1, "", "approx_log_p_y"]], "torch_mist.estimators.generative.DiscreteMutualInformationEstimator": [[38, 3, 1, "", "approx_log_p_x"], [38, 3, 1, "", "approx_log_p_xy"], [38, 3, 1, "", "approx_log_p_y"], [38, 3, 1, "", "approx_log_p_y_given_x"], [38, 3, 1, "", "log_p_x_given_y"], [38, 6, 1, "", "log_q_qxy"], [38, 3, 1, "", "log_ratio"], [38, 3, 1, "", "loss"], [38, 3, 1, "", "quantize_x"], [38, 3, 1, "", "quantize_y"]], "torch_mist.estimators.generative.DoE": [[38, 3, 1, "", "__repr__"], [38, 3, 1, "", "approx_log_p_y"], [38, 3, 1, "", "loss"]], "torch_mist.estimators.generative.GM": [[38, 3, 1, "", "__repr__"], [38, 3, 1, "", "approx_log_p_x"], [38, 3, 1, "", "approx_log_p_x_given_y"], [38, 3, 1, "", "approx_log_p_xy"], [38, 3, 1, "", "loss"]], "torch_mist.estimators.generative.GenerativeMutualInformationEstimator": [[38, 3, 1, "", "__repr__"], [38, 3, 1, "", "approx_log_p_y"], [38, 3, 1, "", "approx_log_p_y_given_x"], [38, 3, 1, "", "log_ratio"], [38, 3, 1, "", "loss"], [38, 3, 1, "", "q_Y_given_x"]], "torch_mist.estimators.generative.L1Out": [[38, 3, 1, "", "approx_log_p_y"], [38, 3, 1, "", "expected_log_ratio"], [38, 3, 1, "", "log_ratio"]], "torch_mist.estimators.generative.PQ": [[38, 3, 1, "", "approx_log_p_y"], [38, 3, 1, "", "approx_log_p_y_given_x"], [38, 3, 1, "", "q_Y_given_x"], [38, 3, 1, "", "quantize_y"]], "torch_mist.estimators.generative.ba": [[32, 2, 1, "", "BA"], [32, 4, 1, "", "ba"]], "torch_mist.estimators.generative.ba.BA": [[32, 3, 1, "", "expected_log_ratio"]], "torch_mist.estimators.generative.base": [[33, 2, 1, "", "GenerativeMutualInformationEstimator"]], "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator": [[33, 3, 1, "", "__repr__"], [33, 3, 1, "", "approx_log_p_y"], [33, 3, 1, "", "approx_log_p_y_given_x"], [33, 3, 1, "", "log_ratio"], [33, 3, 1, "", "loss"], [33, 3, 1, "", "q_Y_given_x"]], "torch_mist.estimators.generative.club": [[34, 2, 1, "", "CLUB"], [34, 4, 1, "", "club"]], "torch_mist.estimators.generative.club.CLUB": [[34, 3, 1, "", "approx_log_p_y"]], "torch_mist.estimators.generative.discrete": [[35, 2, 1, "", "DiscreteMutualInformationEstimator"], [35, 4, 1, "", "discrete"]], "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator": [[35, 3, 1, "", "approx_log_p_x"], [35, 3, 1, "", "approx_log_p_xy"], [35, 3, 1, "", "approx_log_p_y"], [35, 3, 1, "", "approx_log_p_y_given_x"], [35, 3, 1, "", "log_p_x_given_y"], [35, 6, 1, "", "log_q_qxy"], [35, 3, 1, "", "log_ratio"], [35, 3, 1, "", "loss"], [35, 3, 1, "", "quantize_x"], [35, 3, 1, "", "quantize_y"]], "torch_mist.estimators.generative.doe": [[36, 2, 1, "", "DoE"], [36, 4, 1, "", "doe"]], "torch_mist.estimators.generative.doe.DoE": [[36, 3, 1, "", "__repr__"], [36, 3, 1, "", "approx_log_p_y"], [36, 3, 1, "", "loss"]], "torch_mist.estimators.generative.gm": [[37, 2, 1, "", "GM"], [37, 4, 1, "", "gm"]], "torch_mist.estimators.generative.gm.GM": [[37, 3, 1, "", "__repr__"], [37, 3, 1, "", "approx_log_p_x"], [37, 3, 1, "", "approx_log_p_x_given_y"], [37, 3, 1, "", "approx_log_p_xy"], [37, 3, 1, "", "loss"]], "torch_mist.estimators.generative.l1out": [[39, 2, 1, "", "L1Out"], [39, 4, 1, "", "l1out"]], "torch_mist.estimators.generative.l1out.L1Out": [[39, 3, 1, "", "approx_log_p_y"], [39, 3, 1, "", "expected_log_ratio"], [39, 3, 1, "", "log_ratio"]], "torch_mist.estimators.generative.pq": [[40, 2, 1, "", "PQ"], [40, 4, 1, "", "pq"]], "torch_mist.estimators.generative.pq.PQ": [[40, 3, 1, "", "approx_log_p_y"], [40, 3, 1, "", "approx_log_p_y_given_x"], [40, 3, 1, "", "q_Y_given_x"], [40, 3, 1, "", "quantize_y"]], "torch_mist.estimators.hybrid": [[41, 2, 1, "", "HybridMutualInformationEstimator"]], "torch_mist.estimators.hybrid.HybridMutualInformationEstimator": [[41, 3, 1, "", "expected_log_ratio"], [41, 3, 1, "", "loss"], [41, 3, 1, "", "unnormalized_log_ratio"]], "torch_mist.nn": [[45, 0, 0, "-", "utils"]], "torch_mist.nn.utils": [[45, 2, 1, "", "Constant"], [45, 2, 1, "", "Identity"], [45, 2, 1, "", "JointDenseNN"], [45, 2, 1, "", "MergeOutputs"], [45, 2, 1, "", "SkipDenseNN"]], "torch_mist.nn.utils.Constant": [[45, 3, 1, "", "__repr__"], [45, 3, 1, "", "forward"]], "torch_mist.nn.utils.Identity": [[45, 3, 1, "", "forward"]], "torch_mist.nn.utils.JointDenseNN": [[45, 3, 1, "", "forward"]], "torch_mist.nn.utils.MergeOutputs": [[45, 3, 1, "", "forward"]], "torch_mist.nn.utils.SkipDenseNN": [[45, 3, 1, "", "forward"]], "torch_mist.quantization": [[47, 2, 1, "", "FixedQuantization"], [47, 2, 1, "", "LearnableQuantization"], [47, 2, 1, "", "LearnableVectorQuantization"], [47, 2, 1, "", "QuantizationFunction"], [47, 2, 1, "", "VQVAE"], [47, 2, 1, "", "VectorQuantization"], [46, 0, 0, "-", "functions"], [47, 4, 1, "", "learnable_vector_quantization"], [47, 4, 1, "", "trained_vector_quantization"], [48, 0, 0, "-", "vqvae"]], "torch_mist.quantization.FixedQuantization": [[47, 3, 1, "", "forward"], [47, 6, 1, "", "n_bins"]], "torch_mist.quantization.LearnableQuantization": [[47, 3, 1, "", "loss"]], "torch_mist.quantization.LearnableVectorQuantization": [[47, 3, 1, "", "__repr__"], [47, 3, 1, "", "forward"]], "torch_mist.quantization.QuantizationFunction": [[47, 3, 1, "", "forward"], [47, 6, 1, "", "n_bins"]], "torch_mist.quantization.VQVAE": [[47, 3, 1, "", "loss"], [47, 6, 1, "", "quantization"]], "torch_mist.quantization.VectorQuantization": [[47, 3, 1, "", "codebook_lookup"], [47, 3, 1, "", "forward"], [47, 6, 1, "", "n_bins"]], "torch_mist.quantization.functions": [[46, 2, 1, "", "FixedQuantization"], [46, 2, 1, "", "LearnableQuantization"], [46, 2, 1, "", "LearnableVectorQuantization"], [46, 2, 1, "", "QuantizationFunction"], [46, 2, 1, "", "VectorQuantization"], [46, 4, 1, "", "learnable_vector_quantization"], [46, 4, 1, "", "trained_vector_quantization"]], "torch_mist.quantization.functions.FixedQuantization": [[46, 3, 1, "", "forward"], [46, 6, 1, "", "n_bins"]], "torch_mist.quantization.functions.LearnableQuantization": [[46, 3, 1, "", "loss"]], "torch_mist.quantization.functions.LearnableVectorQuantization": [[46, 3, 1, "", "__repr__"], [46, 3, 1, "", "forward"]], "torch_mist.quantization.functions.QuantizationFunction": [[46, 3, 1, "", "forward"], [46, 6, 1, "", "n_bins"]], "torch_mist.quantization.functions.VectorQuantization": [[46, 3, 1, "", "codebook_lookup"], [46, 3, 1, "", "forward"], [46, 6, 1, "", "n_bins"]], "torch_mist.quantization.vqvae": [[48, 1, 1, "", "INITIAL_PATIENCE"], [48, 2, 1, "", "VQVAE"], [48, 4, 1, "", "vqvae"]], "torch_mist.quantization.vqvae.VQVAE": [[48, 3, 1, "", "loss"], [48, 6, 1, "", "quantization"]], "torch_mist.utils": [[49, 0, 0, "-", "caching"], [50, 0, 0, "-", "data"], [51, 0, 0, "-", "estimate"], [52, 4, 1, "", "estimate_mi"], [52, 4, 1, "", "optimize_mi_estimator"]], "torch_mist.utils.caching": [[49, 1, 1, "", "T"], [49, 4, 1, "", "cached"], [49, 4, 1, "", "reset_cache_after_call"], [49, 4, 1, "", "reset_cache_before_call"]], "torch_mist.utils.data": [[50, 2, 1, "", "SampleDataLoader"]], "torch_mist.utils.data.SampleDataLoader": [[50, 3, 1, "", "__len__"], [50, 3, 1, "", "__next__"]], "torch_mist.utils.estimate": [[51, 4, 1, "", "estimate_mi"], [51, 4, 1, "", "optimize_mi_estimator"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:function", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"pytest": 0, "cach": [0, 49], "directori": 0, "api": 1, "refer": [1, 57], "torch_mist": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "baselin": 2, "modul": [2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 48, 49, 50, 51], "content": [2, 3, 4, 5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52], "class": [2, 3, 4, 5, 6, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50], "function": [2, 4, 7, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 46, 47, 48, 49, 51, 52], "critic": [3, 4, 5, 6, 7], "base": [3, 15, 21, 23, 33], "submodul": [4, 8, 10, 12, 16, 25, 38, 42, 43, 44, 47, 52], "packag": [4, 16, 25, 38, 42, 43, 47, 52], "joint": [5, 11], "separ": 6, "util": [7, 20, 45, 49, 50, 51, 52, 56], "data": [8, 9, 50, 56], "multimixtur": 9, "distribut": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "subpackag": [10, 42, 43], "parametr": [12, 13], "map": 13, "attribut": [13, 48, 49, 54], "product": 14, "transform": [15, 16, 17, 18, 19], "linear": 17, "permut": 18, "split": 19, "estim": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 56, 57], "discrimin": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "alpha_tuba": 22, "flo": 24, "infonc": 26, "j": 27, "mine": 28, "nwj": 29, "smile": 30, "tuba": 31, "gener": [32, 33, 34, 35, 36, 37, 38, 39, 40], "ba": 32, "club": 34, "discret": 35, "doe": 36, "gm": 37, "l1out": 39, "pq": 40, "hybrid": [41, 57], "nn": [44, 45], "quantiz": [46, 47, 48], "vqvae": 48, "changelog": 53, "v0": 53, "1": 53, "0": 53, "20": 53, "06": 53, "2023": 53, "code": [54, 55], "conduct": [54, 55], "our": 54, "pledg": 54, "standard": 54, "respons": 54, "scope": 54, "enforc": 54, "contribut": [55, 57], "type": 55, "report": 55, "bug": 55, "fix": 55, "implement": [55, 57], "featur": 55, "write": 55, "document": 55, "submit": 55, "feedback": 55, "get": 55, "start": 55, "pull": 55, "request": 55, "guidelin": 55, "exampl": 56, "usag": [56, 57], "load": 56, "definit": 56, "train": 56, "visual": 56, "evalu": 56, "shortcut": 56, "mist": 57, "A": 57, "pytorch": 57, "mutual": 57, "inform": 57, "toolkit": 57, "instal": 57, "licens": 57, "credit": 57}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pytest cache directory": [[0, "pytest-cache-directory"]], "API Reference": [[1, "api-reference"]], "torch_mist.baselines": [[2, "module-torch_mist.baselines"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [11, "module-contents"], [13, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [45, "module-contents"], [46, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [9, "classes"], [11, "classes"], [13, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [50, "classes"]], "Functions": [[2, "functions"], [4, "functions"], [7, "functions"], [16, "functions"], [17, "functions"], [18, "functions"], [20, "functions"], [22, "functions"], [24, "functions"], [25, "functions"], [26, "functions"], [27, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [34, "functions"], [35, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [39, "functions"], [40, "functions"], [42, "functions"], [46, "functions"], [47, "functions"], [48, "functions"], [49, "functions"], [51, "functions"], [52, "functions"]], "torch_mist.critic.base": [[3, "module-torch_mist.critic.base"]], "torch_mist.critic": [[4, "module-torch_mist.critic"]], "Submodules": [[4, "submodules"], [8, "submodules"], [10, "submodules"], [12, "submodules"], [16, "submodules"], [25, "submodules"], [38, "submodules"], [42, "submodules"], [43, "submodules"], [44, "submodules"], [47, "submodules"], [52, "submodules"]], "Package Contents": [[4, "package-contents"], [16, "package-contents"], [25, "package-contents"], [38, "package-contents"], [42, "package-contents"], [43, "package-contents"], [47, "package-contents"], [52, "package-contents"]], "torch_mist.critic.joint": [[5, "module-torch_mist.critic.joint"]], "torch_mist.critic.separable": [[6, "module-torch_mist.critic.separable"]], "torch_mist.critic.utils": [[7, "module-torch_mist.critic.utils"]], "torch_mist.data": [[8, "module-torch_mist.data"]], "torch_mist.data.multimixture": [[9, "module-torch_mist.data.multimixture"]], "torch_mist.distributions": [[10, "module-torch_mist.distributions"]], "Subpackages": [[10, "subpackages"], [42, "subpackages"], [43, "subpackages"]], "torch_mist.distributions.joint": [[11, "module-torch_mist.distributions.joint"]], "torch_mist.distributions.parametrizations": [[12, "module-torch_mist.distributions.parametrizations"]], "torch_mist.distributions.parametrizations.map": [[13, "module-torch_mist.distributions.parametrizations.map"]], "Attributes": [[13, "attributes"], [48, "attributes"], [49, "attributes"]], "torch_mist.distributions.product": [[14, "module-torch_mist.distributions.product"]], "torch_mist.distributions.transforms.base": [[15, "module-torch_mist.distributions.transforms.base"]], "torch_mist.distributions.transforms": [[16, "module-torch_mist.distributions.transforms"]], "torch_mist.distributions.transforms.linear": [[17, "module-torch_mist.distributions.transforms.linear"]], "torch_mist.distributions.transforms.permute": [[18, "module-torch_mist.distributions.transforms.permute"]], "torch_mist.distributions.transforms.split": [[19, "module-torch_mist.distributions.transforms.split"]], "torch_mist.distributions.utils": [[20, "module-torch_mist.distributions.utils"]], "torch_mist.estimators.base": [[21, "module-torch_mist.estimators.base"]], "torch_mist.estimators.discriminative.alpha_tuba": [[22, "module-torch_mist.estimators.discriminative.alpha_tuba"]], "torch_mist.estimators.discriminative.base": [[23, "module-torch_mist.estimators.discriminative.base"]], "torch_mist.estimators.discriminative.flo": [[24, "module-torch_mist.estimators.discriminative.flo"]], "torch_mist.estimators.discriminative": [[25, "module-torch_mist.estimators.discriminative"]], "torch_mist.estimators.discriminative.infonce": [[26, "module-torch_mist.estimators.discriminative.infonce"]], "torch_mist.estimators.discriminative.js": [[27, "module-torch_mist.estimators.discriminative.js"]], "torch_mist.estimators.discriminative.mine": [[28, "module-torch_mist.estimators.discriminative.mine"]], "torch_mist.estimators.discriminative.nwj": [[29, "module-torch_mist.estimators.discriminative.nwj"]], "torch_mist.estimators.discriminative.smile": [[30, "module-torch_mist.estimators.discriminative.smile"]], "torch_mist.estimators.discriminative.tuba": [[31, "module-torch_mist.estimators.discriminative.tuba"]], "torch_mist.estimators.generative.ba": [[32, "module-torch_mist.estimators.generative.ba"]], "torch_mist.estimators.generative.base": [[33, "module-torch_mist.estimators.generative.base"]], "torch_mist.estimators.generative.club": [[34, "module-torch_mist.estimators.generative.club"]], "torch_mist.estimators.generative.discrete": [[35, "module-torch_mist.estimators.generative.discrete"]], "torch_mist.estimators.generative.doe": [[36, "module-torch_mist.estimators.generative.doe"]], "torch_mist.estimators.generative.gm": [[37, "module-torch_mist.estimators.generative.gm"]], "torch_mist.estimators.generative": [[38, "module-torch_mist.estimators.generative"]], "torch_mist.estimators.generative.l1out": [[39, "module-torch_mist.estimators.generative.l1out"]], "torch_mist.estimators.generative.pq": [[40, "module-torch_mist.estimators.generative.pq"]], "torch_mist.estimators.hybrid": [[41, "module-torch_mist.estimators.hybrid"]], "torch_mist.estimators": [[42, "module-torch_mist.estimators"]], "torch_mist": [[43, "module-torch_mist"]], "torch_mist.nn": [[44, "module-torch_mist.nn"]], "torch_mist.nn.utils": [[45, "module-torch_mist.nn.utils"]], "torch_mist.quantization.functions": [[46, "module-torch_mist.quantization.functions"]], "torch_mist.quantization": [[47, "module-torch_mist.quantization"]], "torch_mist.quantization.vqvae": [[48, "module-torch_mist.quantization.vqvae"]], "torch_mist.utils.caching": [[49, "module-torch_mist.utils.caching"]], "torch_mist.utils.data": [[50, "module-torch_mist.utils.data"]], "torch_mist.utils.estimate": [[51, "module-torch_mist.utils.estimate"]], "torch_mist.utils": [[52, "module-torch_mist.utils"]], "Changelog": [[53, "changelog"]], "v0.1.0 (20/06/2023)": [[53, "v0-1-0-20-06-2023"]], "Code of Conduct": [[54, "code-of-conduct"], [55, "code-of-conduct"]], "Our Pledge": [[54, "our-pledge"]], "Our Standards": [[54, "our-standards"]], "Our Responsibilities": [[54, "our-responsibilities"]], "Scope": [[54, "scope"]], "Enforcement": [[54, "enforcement"]], "Attribution": [[54, "attribution"]], "Contributing": [[55, "contributing"], [57, "contributing"]], "Types of Contributions": [[55, "types-of-contributions"]], "Report Bugs": [[55, "report-bugs"]], "Fix Bugs": [[55, "fix-bugs"]], "Implement Features": [[55, "implement-features"]], "Write Documentation": [[55, "write-documentation"]], "Submit Feedback": [[55, "submit-feedback"]], "Get Started!": [[55, "get-started"]], "Pull Request Guidelines": [[55, "pull-request-guidelines"]], "Example usage": [[56, "example-usage"]], "Data loading": [[56, "data-loading"]], "Estimator definition": [[56, "estimator-definition"]], "Training": [[56, "training"]], "Visualization": [[56, "visualization"]], "Evaluation": [[56, "evaluation"]], "Utilities and shortcuts": [[56, "utilities-and-shortcuts"]], "Mist - A PyTorch Mutual information Estimation toolkit": [[57, "mist-a-pytorch-mutual-information-estimation-toolkit"]], "Installation": [[57, "installation"]], "Usage": [[57, "usage"]], "Implemented estimators": [[57, "implemented-estimators"]], "Hybrid estimators": [[57, "hybrid-estimators"]], "References": [[57, "references"]], "License": [[57, "license"]], "Credits": [[57, "credits"]]}, "indexentries": {"alphatubabaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.AlphaTUBABaseline"]], "baseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.Baseline"]], "batchlogmeanexp (class in torch_mist.baselines)": [[2, "torch_mist.baselines.BatchLogMeanExp"]], "constantbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.ConstantBaseline"]], "exponentialmovingaverage (class in torch_mist.baselines)": [[2, "torch_mist.baselines.ExponentialMovingAverage"]], "interpolatedbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.InterpolatedBaseline"]], "learnablebaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableBaseline"]], "learnablejointbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableJointBaseline"]], "baseline_nn() (in module torch_mist.baselines)": [[2, "torch_mist.baselines.baseline_nn"]], "forward() (torch_mist.baselines.baseline method)": [[2, "torch_mist.baselines.Baseline.forward"]], "forward() (torch_mist.baselines.batchlogmeanexp method)": [[2, "torch_mist.baselines.BatchLogMeanExp.forward"]], "forward() (torch_mist.baselines.constantbaseline method)": [[2, "torch_mist.baselines.ConstantBaseline.forward"]], "forward() (torch_mist.baselines.exponentialmovingaverage method)": [[2, "torch_mist.baselines.ExponentialMovingAverage.forward"]], "forward() (torch_mist.baselines.interpolatedbaseline method)": [[2, "torch_mist.baselines.InterpolatedBaseline.forward"]], "forward() (torch_mist.baselines.learnablebaseline method)": [[2, "torch_mist.baselines.LearnableBaseline.forward"]], "forward() (torch_mist.baselines.learnablejointbaseline method)": [[2, "torch_mist.baselines.LearnableJointBaseline.forward"]], "joint_baseline_nn() (in module torch_mist.baselines)": [[2, "torch_mist.baselines.joint_baseline_nn"]], "module": [[2, "module-torch_mist.baselines"], [3, "module-torch_mist.critic.base"], [4, "module-torch_mist.critic"], [5, "module-torch_mist.critic.joint"], [6, "module-torch_mist.critic.separable"], [7, "module-torch_mist.critic.utils"], [8, "module-torch_mist.data"], [9, "module-torch_mist.data.multimixture"], [10, "module-torch_mist.distributions"], [11, "module-torch_mist.distributions.joint"], [12, "module-torch_mist.distributions.parametrizations"], [13, "module-torch_mist.distributions.parametrizations.map"], [14, "module-torch_mist.distributions.product"], [15, "module-torch_mist.distributions.transforms.base"], [16, "module-torch_mist.distributions.transforms"], [17, "module-torch_mist.distributions.transforms.linear"], [18, "module-torch_mist.distributions.transforms.permute"], [19, "module-torch_mist.distributions.transforms.split"], [20, "module-torch_mist.distributions.utils"], [21, "module-torch_mist.estimators.base"], [22, "module-torch_mist.estimators.discriminative.alpha_tuba"], [23, "module-torch_mist.estimators.discriminative.base"], [24, "module-torch_mist.estimators.discriminative.flo"], [25, "module-torch_mist.estimators.discriminative"], [26, "module-torch_mist.estimators.discriminative.infonce"], [27, "module-torch_mist.estimators.discriminative.js"], [28, "module-torch_mist.estimators.discriminative.mine"], [29, "module-torch_mist.estimators.discriminative.nwj"], [30, "module-torch_mist.estimators.discriminative.smile"], [31, "module-torch_mist.estimators.discriminative.tuba"], [32, "module-torch_mist.estimators.generative.ba"], [33, "module-torch_mist.estimators.generative.base"], [34, "module-torch_mist.estimators.generative.club"], [35, "module-torch_mist.estimators.generative.discrete"], [36, "module-torch_mist.estimators.generative.doe"], [37, "module-torch_mist.estimators.generative.gm"], [38, "module-torch_mist.estimators.generative"], [39, "module-torch_mist.estimators.generative.l1out"], [40, "module-torch_mist.estimators.generative.pq"], [41, "module-torch_mist.estimators.hybrid"], [42, "module-torch_mist.estimators"], [43, "module-torch_mist"], [44, "module-torch_mist.nn"], [45, "module-torch_mist.nn.utils"], [46, "module-torch_mist.quantization.functions"], [47, "module-torch_mist.quantization"], [48, "module-torch_mist.quantization.vqvae"], [49, "module-torch_mist.utils.caching"], [50, "module-torch_mist.utils.data"], [51, "module-torch_mist.utils.estimate"], [52, "module-torch_mist.utils"]], "torch_mist.baselines": [[2, "module-torch_mist.baselines"]], "critic (class in torch_mist.critic.base)": [[3, "torch_mist.critic.base.Critic"]], "forward() (torch_mist.critic.base.critic method)": [[3, "torch_mist.critic.base.Critic.forward"]], "torch_mist.critic.base": [[3, "module-torch_mist.critic.base"]], "critic (class in torch_mist.critic)": [[4, "torch_mist.critic.Critic"]], "jointcritic (class in torch_mist.critic)": [[4, "torch_mist.critic.JointCritic"]], "separablecritic (class in torch_mist.critic)": [[4, "torch_mist.critic.SeparableCritic"]], "critic() (in module torch_mist.critic)": [[4, "torch_mist.critic.critic"]], "forward() (torch_mist.critic.critic method)": [[4, "torch_mist.critic.Critic.forward"]], "forward() (torch_mist.critic.jointcritic method)": [[4, "torch_mist.critic.JointCritic.forward"]], "forward() (torch_mist.critic.separablecritic method)": [[4, "torch_mist.critic.SeparableCritic.forward"]], "joint_critic() (in module torch_mist.critic)": [[4, "torch_mist.critic.joint_critic"]], "separable_critic() (in module torch_mist.critic)": [[4, "torch_mist.critic.separable_critic"]], "torch_mist.critic": [[4, "module-torch_mist.critic"]], "jointcritic (class in torch_mist.critic.joint)": [[5, "torch_mist.critic.joint.JointCritic"]], "forward() (torch_mist.critic.joint.jointcritic method)": [[5, "torch_mist.critic.joint.JointCritic.forward"]], "torch_mist.critic.joint": [[5, "module-torch_mist.critic.joint"]], "separablecritic (class in torch_mist.critic.separable)": [[6, "torch_mist.critic.separable.SeparableCritic"]], "forward() (torch_mist.critic.separable.separablecritic method)": [[6, "torch_mist.critic.separable.SeparableCritic.forward"]], "torch_mist.critic.separable": [[6, "module-torch_mist.critic.separable"]], "critic() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.critic"]], "joint_critic() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.joint_critic"]], "separable_critic() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.separable_critic"]], "torch_mist.critic.utils": [[7, "module-torch_mist.critic.utils"]], "torch_mist.data": [[8, "module-torch_mist.data"]], "multivariatecorrelatednormalmixture (class in torch_mist.data.multimixture)": [[9, "torch_mist.data.multimixture.MultivariateCorrelatedNormalMixture"]], "torch_mist.data.multimixture": [[9, "module-torch_mist.data.multimixture"]], "torch_mist.distributions": [[10, "module-torch_mist.distributions"]], "conditionalratiodistribution (class in torch_mist.distributions.joint)": [[11, "torch_mist.distributions.joint.ConditionalRatioDistribution"]], "conditionedratiodistribution (class in torch_mist.distributions.joint)": [[11, "torch_mist.distributions.joint.ConditionedRatioDistribution"]], "jointdistribution (class in torch_mist.distributions.joint)": [[11, "torch_mist.distributions.joint.JointDistribution"]], "condition() (torch_mist.distributions.joint.conditionalratiodistribution method)": [[11, "torch_mist.distributions.joint.ConditionalRatioDistribution.condition"]], "log_prob() (torch_mist.distributions.joint.conditionedratiodistribution method)": [[11, "torch_mist.distributions.joint.ConditionedRatioDistribution.log_prob"]], "log_prob() (torch_mist.distributions.joint.jointdistribution method)": [[11, "torch_mist.distributions.joint.JointDistribution.log_prob"]], "rsample() (torch_mist.distributions.joint.jointdistribution method)": [[11, "torch_mist.distributions.joint.JointDistribution.rsample"]], "sample() (torch_mist.distributions.joint.jointdistribution method)": [[11, "torch_mist.distributions.joint.JointDistribution.sample"]], "torch_mist.distributions.joint": [[11, "module-torch_mist.distributions.joint"]], "torch_mist.distributions.parametrizations": [[12, "module-torch_mist.distributions.parametrizations"]], "deltamap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap"]], "epsilon (in module torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.EPSILON"]], "locscalemap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.LocScaleMap"]], "logitsmap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap"]], "parametermap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap"]], "__call__() (torch_mist.distributions.parametrizations.map.parametermap method)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.__call__"]], "map_parameters() (torch_mist.distributions.parametrizations.map.deltamap method)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.locscalemap method)": [[13, "torch_mist.distributions.parametrizations.map.LocScaleMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.logitsmap method)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.parametermap method)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.map_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.deltamap attribute)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap.n_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.logitsmap attribute)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap.n_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.parametermap attribute)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.n_parameters"]], "supported_distributions (torch_mist.distributions.parametrizations.map.deltamap attribute)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.locscalemap attribute)": [[13, "torch_mist.distributions.parametrizations.map.LocScaleMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.logitsmap attribute)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.parametermap attribute)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.supported_distributions"]], "torch_mist.distributions.parametrizations.map": [[13, "module-torch_mist.distributions.parametrizations.map"]], "torch_mist.distributions.product": [[14, "module-torch_mist.distributions.product"]], "conditionaldistributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.ConditionalDistributionModule"]], "conditionaltransformeddistributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule"]], "distributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.DistributionModule"]], "transformeddistributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule"]], "__repr__() (torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.base.distributionmodule method)": [[15, "torch_mist.distributions.transforms.base.DistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule.__repr__"]], "clear_cache() (torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.clear_cache"]], "condition() (torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.condition"]], "log_prob() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule.log_prob"]], "rsample() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule.rsample"]], "torch_mist.distributions.transforms.base": [[15, "module-torch_mist.distributions.transforms.base"]], "conditionaldistributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.ConditionalDistributionModule"]], "conditionallinear (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.ConditionalLinear"]], "conditionaltransformeddistributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule"]], "distributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.DistributionModule"]], "linear (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.Linear"]], "permute (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.Permute"]], "splittransform (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.SplitTransform"]], "transformeddistributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule"]], "__repr__() (torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.distributionmodule method)": [[16, "torch_mist.distributions.transforms.DistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule.__repr__"]], "_call() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute._call"]], "_call() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform._call"]], "_inverse() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute._inverse"]], "_inverse() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform._inverse"]], "_params() (torch_mist.distributions.transforms.conditionallinear method)": [[16, "torch_mist.distributions.transforms.ConditionalLinear._params"]], "_params() (torch_mist.distributions.transforms.linear method)": [[16, "torch_mist.distributions.transforms.Linear._params"]], "add_dims() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.add_dims"]], "bijective (torch_mist.distributions.transforms.conditionallinear attribute)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.bijective"]], "clear_cache() (torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.clear_cache"]], "codomain (torch_mist.distributions.transforms.conditionallinear attribute)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.codomain"]], "codomain (torch_mist.distributions.transforms.splittransform attribute)": [[16, "torch_mist.distributions.transforms.SplitTransform.codomain"]], "condition() (torch_mist.distributions.transforms.conditionallinear method)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.condition"]], "condition() (torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.condition"]], "conditional_linear() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.conditional_linear"]], "conditional_skip_linear() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.conditional_skip_linear"]], "dist() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.dist"]], "domain (torch_mist.distributions.transforms.conditionallinear attribute)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.domain"]], "domain (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.domain"]], "domain (torch_mist.distributions.transforms.splittransform attribute)": [[16, "torch_mist.distributions.transforms.SplitTransform.domain"]], "linear() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.linear"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute.log_abs_det_jacobian"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.log_abs_det_jacobian"]], "log_prob() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule.log_prob"]], "permute() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.permute"]], "remove_dims() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.remove_dims"]], "rsample() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule.rsample"]], "sign (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.sign"]], "torch_mist.distributions.transforms": [[16, "module-torch_mist.distributions.transforms"]], "update_device() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute.update_device"]], "conditionallinear (class in torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear"]], "conditionedlinear (class in torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear"]], "linear (class in torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.Linear"]], "_call() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear._call"]], "_inverse() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear._inverse"]], "_params() (torch_mist.distributions.transforms.linear.conditionallinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear._params"]], "_params() (torch_mist.distributions.transforms.linear.linear method)": [[17, "torch_mist.distributions.transforms.linear.Linear._params"]], "bijective (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "id2"], [17, "torch_mist.distributions.transforms.linear.ConditionedLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.bijective"]], "codomain (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "id1"], [17, "torch_mist.distributions.transforms.linear.ConditionedLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.codomain"]], "condition() (torch_mist.distributions.transforms.linear.conditionallinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.condition"]], "conditional_linear() (in module torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.conditional_linear"]], "conditional_skip_linear() (in module torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.conditional_skip_linear"]], "domain (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.domain"]], "domain (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "id0"], [17, "torch_mist.distributions.transforms.linear.ConditionedLinear.domain"]], "domain (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.domain"]], "linear() (in module torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.linear"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear.log_abs_det_jacobian"]], "sign (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear.sign"]], "sign (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.sign"]], "torch_mist.distributions.transforms.linear": [[17, "module-torch_mist.distributions.transforms.linear"]], "permute (class in torch_mist.distributions.transforms.permute)": [[18, "torch_mist.distributions.transforms.permute.Permute"]], "_call() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute._call"]], "_inverse() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute._inverse"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute.log_abs_det_jacobian"]], "permute() (in module torch_mist.distributions.transforms.permute)": [[18, "torch_mist.distributions.transforms.permute.permute"]], "torch_mist.distributions.transforms.permute": [[18, "module-torch_mist.distributions.transforms.permute"]], "update_device() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute.update_device"]], "splittransform (class in torch_mist.distributions.transforms.split)": [[19, "torch_mist.distributions.transforms.split.SplitTransform"]], "_call() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform._call"]], "_inverse() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform._inverse"]], "add_dims() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.add_dims"]], "codomain (torch_mist.distributions.transforms.split.splittransform attribute)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.codomain"]], "dist() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.dist"]], "domain (torch_mist.distributions.transforms.split.splittransform attribute)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.domain"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.log_abs_det_jacobian"]], "remove_dims() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.remove_dims"]], "torch_mist.distributions.transforms.split": [[19, "module-torch_mist.distributions.transforms.split"]], "categoricalmodule (class in torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.CategoricalModule"]], "conditionalcategoricalmodule (class in torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.ConditionalCategoricalModule"]], "conditionalstandardnormalmodule (class in torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.ConditionalStandardNormalModule"]], "normalmodule (class in torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.NormalModule"]], "__repr__() (torch_mist.distributions.utils.categoricalmodule method)": [[20, "torch_mist.distributions.utils.CategoricalModule.__repr__"]], "__repr__() (torch_mist.distributions.utils.normalmodule method)": [[20, "torch_mist.distributions.utils.NormalModule.__repr__"]], "condition() (torch_mist.distributions.utils.conditionalcategoricalmodule method)": [[20, "torch_mist.distributions.utils.ConditionalCategoricalModule.condition"]], "condition() (torch_mist.distributions.utils.conditionalstandardnormalmodule method)": [[20, "torch_mist.distributions.utils.ConditionalStandardNormalModule.condition"]], "conditional_categorical() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.conditional_categorical"]], "conditional_transformed_normal() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.conditional_transformed_normal"]], "fetch_transform() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.fetch_transform"]], "log_prob() (torch_mist.distributions.utils.categoricalmodule method)": [[20, "torch_mist.distributions.utils.CategoricalModule.log_prob"]], "log_prob() (torch_mist.distributions.utils.normalmodule method)": [[20, "torch_mist.distributions.utils.NormalModule.log_prob"]], "rsample() (torch_mist.distributions.utils.categoricalmodule method)": [[20, "torch_mist.distributions.utils.CategoricalModule.rsample"]], "rsample() (torch_mist.distributions.utils.normalmodule method)": [[20, "torch_mist.distributions.utils.NormalModule.rsample"]], "torch_mist.distributions.utils": [[20, "module-torch_mist.distributions.utils"]], "transformed_normal() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.transformed_normal"]], "mutualinformationestimator (class in torch_mist.estimators.base)": [[21, "torch_mist.estimators.base.MutualInformationEstimator"]], "expected_log_ratio() (torch_mist.estimators.base.mutualinformationestimator method)": [[21, "torch_mist.estimators.base.MutualInformationEstimator.expected_log_ratio"]], "forward() (torch_mist.estimators.base.mutualinformationestimator method)": [[21, "torch_mist.estimators.base.MutualInformationEstimator.forward"]], "log_ratio() (torch_mist.estimators.base.mutualinformationestimator method)": [[21, "torch_mist.estimators.base.MutualInformationEstimator.log_ratio"]], "loss() (torch_mist.estimators.base.mutualinformationestimator method)": [[21, "torch_mist.estimators.base.MutualInformationEstimator.loss"]], "torch_mist.estimators.base": [[21, "module-torch_mist.estimators.base"]], "alphatuba (class in torch_mist.estimators.discriminative.alpha_tuba)": [[22, "torch_mist.estimators.discriminative.alpha_tuba.AlphaTUBA"]], "alpha_tuba() (in module torch_mist.estimators.discriminative.alpha_tuba)": [[22, "torch_mist.estimators.discriminative.alpha_tuba.alpha_tuba"]], "torch_mist.estimators.discriminative.alpha_tuba": [[22, "module-torch_mist.estimators.discriminative.alpha_tuba"]], "discriminativemutualinformationestimator (class in torch_mist.estimators.discriminative.base)": [[23, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator"]], "empiricaldistribution (class in torch_mist.estimators.discriminative.base)": [[23, "torch_mist.estimators.discriminative.base.EmpiricalDistribution"]], "__repr__() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[23, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.__repr__"]], "add_samples() (torch_mist.estimators.discriminative.base.empiricaldistribution method)": [[23, "torch_mist.estimators.discriminative.base.EmpiricalDistribution.add_samples"]], "compute_log_ratio() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[23, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.compute_log_ratio"]], "critic_on_negatives() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[23, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.critic_on_negatives"]], "critic_on_positives() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[23, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.critic_on_positives"]], "log_ratio() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[23, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.log_ratio"]], "loss() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[23, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.loss"]], "sample() (torch_mist.estimators.discriminative.base.empiricaldistribution method)": [[23, "torch_mist.estimators.discriminative.base.EmpiricalDistribution.sample"]], "sample_proposal() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[23, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.sample_proposal"]], "torch_mist.estimators.discriminative.base": [[23, "module-torch_mist.estimators.discriminative.base"]], "unnormalized_log_ratio() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[23, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.unnormalized_log_ratio"]], "update() (torch_mist.estimators.discriminative.base.empiricaldistribution method)": [[23, "torch_mist.estimators.discriminative.base.EmpiricalDistribution.update"]], "flo (class in torch_mist.estimators.discriminative.flo)": [[24, "torch_mist.estimators.discriminative.flo.FLO"]], "compute_log_ratio() (torch_mist.estimators.discriminative.flo.flo method)": [[24, "torch_mist.estimators.discriminative.flo.FLO.compute_log_ratio"]], "flo() (in module torch_mist.estimators.discriminative.flo)": [[24, "torch_mist.estimators.discriminative.flo.flo"]], "torch_mist.estimators.discriminative.flo": [[24, "module-torch_mist.estimators.discriminative.flo"]], "alphatuba (class in torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.AlphaTUBA"]], "flo (class in torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.FLO"]], "infonce (class in torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.InfoNCE"]], "js (class in torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.JS"]], "mine (class in torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.MINE"]], "nwj (class in torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.NWJ"]], "smile (class in torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.SMILE"]], "tuba (class in torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.TUBA"]], "__repr__() (torch_mist.estimators.discriminative.tuba method)": [[25, "torch_mist.estimators.discriminative.TUBA.__repr__"]], "alpha_tuba() (in module torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.alpha_tuba"]], "compute_log_ratio() (torch_mist.estimators.discriminative.flo method)": [[25, "torch_mist.estimators.discriminative.FLO.compute_log_ratio"]], "compute_log_ratio() (torch_mist.estimators.discriminative.infonce method)": [[25, "torch_mist.estimators.discriminative.InfoNCE.compute_log_ratio"]], "compute_log_ratio() (torch_mist.estimators.discriminative.nwj method)": [[25, "torch_mist.estimators.discriminative.NWJ.compute_log_ratio"]], "compute_log_ratio() (torch_mist.estimators.discriminative.smile method)": [[25, "torch_mist.estimators.discriminative.SMILE.compute_log_ratio"]], "compute_log_ratio() (torch_mist.estimators.discriminative.tuba method)": [[25, "torch_mist.estimators.discriminative.TUBA.compute_log_ratio"]], "flo() (in module torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.flo"]], "infonce() (in module torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.infonce"]], "js() (in module torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.js"]], "loss() (torch_mist.estimators.discriminative.js method)": [[25, "torch_mist.estimators.discriminative.JS.loss"]], "loss() (torch_mist.estimators.discriminative.smile method)": [[25, "torch_mist.estimators.discriminative.SMILE.loss"]], "loss() (torch_mist.estimators.discriminative.tuba method)": [[25, "torch_mist.estimators.discriminative.TUBA.loss"]], "mine() (in module torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.mine"]], "nwj() (in module torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.nwj"]], "smile() (in module torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.smile"]], "torch_mist.estimators.discriminative": [[25, "module-torch_mist.estimators.discriminative"]], "tuba() (in module torch_mist.estimators.discriminative)": [[25, "torch_mist.estimators.discriminative.tuba"]], "infonce (class in torch_mist.estimators.discriminative.infonce)": [[26, "torch_mist.estimators.discriminative.infonce.InfoNCE"]], "compute_log_ratio() (torch_mist.estimators.discriminative.infonce.infonce method)": [[26, "torch_mist.estimators.discriminative.infonce.InfoNCE.compute_log_ratio"]], "infonce() (in module torch_mist.estimators.discriminative.infonce)": [[26, "torch_mist.estimators.discriminative.infonce.infonce"]], "torch_mist.estimators.discriminative.infonce": [[26, "module-torch_mist.estimators.discriminative.infonce"]], "js (class in torch_mist.estimators.discriminative.js)": [[27, "torch_mist.estimators.discriminative.js.JS"]], "js() (in module torch_mist.estimators.discriminative.js)": [[27, "torch_mist.estimators.discriminative.js.js"]], "loss() (torch_mist.estimators.discriminative.js.js method)": [[27, "torch_mist.estimators.discriminative.js.JS.loss"]], "torch_mist.estimators.discriminative.js": [[27, "module-torch_mist.estimators.discriminative.js"]], "mine (class in torch_mist.estimators.discriminative.mine)": [[28, "torch_mist.estimators.discriminative.mine.MINE"]], "mine() (in module torch_mist.estimators.discriminative.mine)": [[28, "torch_mist.estimators.discriminative.mine.mine"]], "torch_mist.estimators.discriminative.mine": [[28, "module-torch_mist.estimators.discriminative.mine"]], "nwj (class in torch_mist.estimators.discriminative.nwj)": [[29, "torch_mist.estimators.discriminative.nwj.NWJ"]], "compute_log_ratio() (torch_mist.estimators.discriminative.nwj.nwj method)": [[29, "torch_mist.estimators.discriminative.nwj.NWJ.compute_log_ratio"]], "nwj() (in module torch_mist.estimators.discriminative.nwj)": [[29, "torch_mist.estimators.discriminative.nwj.nwj"]], "torch_mist.estimators.discriminative.nwj": [[29, "module-torch_mist.estimators.discriminative.nwj"]], "smile (class in torch_mist.estimators.discriminative.smile)": [[30, "torch_mist.estimators.discriminative.smile.SMILE"]], "compute_log_ratio() (torch_mist.estimators.discriminative.smile.smile method)": [[30, "torch_mist.estimators.discriminative.smile.SMILE.compute_log_ratio"]], "loss() (torch_mist.estimators.discriminative.smile.smile method)": [[30, "torch_mist.estimators.discriminative.smile.SMILE.loss"]], "smile() (in module torch_mist.estimators.discriminative.smile)": [[30, "torch_mist.estimators.discriminative.smile.smile"]], "torch_mist.estimators.discriminative.smile": [[30, "module-torch_mist.estimators.discriminative.smile"]], "tuba (class in torch_mist.estimators.discriminative.tuba)": [[31, "torch_mist.estimators.discriminative.tuba.TUBA"]], "__repr__() (torch_mist.estimators.discriminative.tuba.tuba method)": [[31, "torch_mist.estimators.discriminative.tuba.TUBA.__repr__"]], "compute_log_ratio() (torch_mist.estimators.discriminative.tuba.tuba method)": [[31, "torch_mist.estimators.discriminative.tuba.TUBA.compute_log_ratio"]], "loss() (torch_mist.estimators.discriminative.tuba.tuba method)": [[31, "torch_mist.estimators.discriminative.tuba.TUBA.loss"]], "torch_mist.estimators.discriminative.tuba": [[31, "module-torch_mist.estimators.discriminative.tuba"]], "tuba() (in module torch_mist.estimators.discriminative.tuba)": [[31, "torch_mist.estimators.discriminative.tuba.tuba"]], "ba (class in torch_mist.estimators.generative.ba)": [[32, "torch_mist.estimators.generative.ba.BA"]], "ba() (in module torch_mist.estimators.generative.ba)": [[32, "torch_mist.estimators.generative.ba.ba"]], "expected_log_ratio() (torch_mist.estimators.generative.ba.ba method)": [[32, "torch_mist.estimators.generative.ba.BA.expected_log_ratio"]], "torch_mist.estimators.generative.ba": [[32, "module-torch_mist.estimators.generative.ba"]], "generativemutualinformationestimator (class in torch_mist.estimators.generative.base)": [[33, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator"]], "__repr__() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[33, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.__repr__"]], "approx_log_p_y() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[33, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.approx_log_p_y"]], "approx_log_p_y_given_x() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[33, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.approx_log_p_y_given_x"]], "log_ratio() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[33, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.log_ratio"]], "loss() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[33, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.loss"]], "q_y_given_x() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[33, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.q_Y_given_x"]], "torch_mist.estimators.generative.base": [[33, "module-torch_mist.estimators.generative.base"]], "club (class in torch_mist.estimators.generative.club)": [[34, "torch_mist.estimators.generative.club.CLUB"]], "approx_log_p_y() (torch_mist.estimators.generative.club.club method)": [[34, "torch_mist.estimators.generative.club.CLUB.approx_log_p_y"]], "club() (in module torch_mist.estimators.generative.club)": [[34, "torch_mist.estimators.generative.club.club"]], "torch_mist.estimators.generative.club": [[34, "module-torch_mist.estimators.generative.club"]], "discretemutualinformationestimator (class in torch_mist.estimators.generative.discrete)": [[35, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator"]], "approx_log_p_x() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[35, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.approx_log_p_x"]], "approx_log_p_xy() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[35, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.approx_log_p_xy"]], "approx_log_p_y() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[35, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.approx_log_p_y"]], "approx_log_p_y_given_x() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[35, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.approx_log_p_y_given_x"]], "discrete() (in module torch_mist.estimators.generative.discrete)": [[35, "torch_mist.estimators.generative.discrete.discrete"]], "log_p_x_given_y() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[35, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.log_p_x_given_y"]], "log_q_qxy (torch_mist.estimators.generative.discrete.discretemutualinformationestimator property)": [[35, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.log_q_qxy"]], "log_ratio() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[35, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.log_ratio"]], "loss() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[35, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.loss"]], "quantize_x() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[35, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.quantize_x"]], "quantize_y() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[35, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.quantize_y"]], "torch_mist.estimators.generative.discrete": [[35, "module-torch_mist.estimators.generative.discrete"]], "doe (class in torch_mist.estimators.generative.doe)": [[36, "torch_mist.estimators.generative.doe.DoE"]], "__repr__() (torch_mist.estimators.generative.doe.doe method)": [[36, "torch_mist.estimators.generative.doe.DoE.__repr__"]], "approx_log_p_y() (torch_mist.estimators.generative.doe.doe method)": [[36, "torch_mist.estimators.generative.doe.DoE.approx_log_p_y"]], "doe() (in module torch_mist.estimators.generative.doe)": [[36, "torch_mist.estimators.generative.doe.doe"]], "loss() (torch_mist.estimators.generative.doe.doe method)": [[36, "torch_mist.estimators.generative.doe.DoE.loss"]], "torch_mist.estimators.generative.doe": [[36, "module-torch_mist.estimators.generative.doe"]], "gm (class in torch_mist.estimators.generative.gm)": [[37, "torch_mist.estimators.generative.gm.GM"]], "__repr__() (torch_mist.estimators.generative.gm.gm method)": [[37, "torch_mist.estimators.generative.gm.GM.__repr__"]], "approx_log_p_x() (torch_mist.estimators.generative.gm.gm method)": [[37, "torch_mist.estimators.generative.gm.GM.approx_log_p_x"]], "approx_log_p_x_given_y() (torch_mist.estimators.generative.gm.gm method)": [[37, "torch_mist.estimators.generative.gm.GM.approx_log_p_x_given_y"]], "approx_log_p_xy() (torch_mist.estimators.generative.gm.gm method)": [[37, "torch_mist.estimators.generative.gm.GM.approx_log_p_xy"]], "gm() (in module torch_mist.estimators.generative.gm)": [[37, "torch_mist.estimators.generative.gm.gm"]], "loss() (torch_mist.estimators.generative.gm.gm method)": [[37, "torch_mist.estimators.generative.gm.GM.loss"]], "torch_mist.estimators.generative.gm": [[37, "module-torch_mist.estimators.generative.gm"]], "ba (class in torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.BA"]], "club (class in torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.CLUB"]], "discretemutualinformationestimator (class in torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator"]], "doe (class in torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.DoE"]], "gm (class in torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.GM"]], "generativemutualinformationestimator (class in torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator"]], "l1out (class in torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.L1Out"]], "pq (class in torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.PQ"]], "__repr__() (torch_mist.estimators.generative.doe method)": [[38, "torch_mist.estimators.generative.DoE.__repr__"]], "__repr__() (torch_mist.estimators.generative.gm method)": [[38, "torch_mist.estimators.generative.GM.__repr__"]], "__repr__() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.__repr__"]], "approx_log_p_x() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.approx_log_p_x"]], "approx_log_p_x() (torch_mist.estimators.generative.gm method)": [[38, "torch_mist.estimators.generative.GM.approx_log_p_x"]], "approx_log_p_x_given_y() (torch_mist.estimators.generative.gm method)": [[38, "torch_mist.estimators.generative.GM.approx_log_p_x_given_y"]], "approx_log_p_xy() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.approx_log_p_xy"]], "approx_log_p_xy() (torch_mist.estimators.generative.gm method)": [[38, "torch_mist.estimators.generative.GM.approx_log_p_xy"]], "approx_log_p_y() (torch_mist.estimators.generative.club method)": [[38, "torch_mist.estimators.generative.CLUB.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.generative.doe method)": [[38, "torch_mist.estimators.generative.DoE.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.generative.l1out method)": [[38, "torch_mist.estimators.generative.L1Out.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.generative.pq method)": [[38, "torch_mist.estimators.generative.PQ.approx_log_p_y"]], "approx_log_p_y_given_x() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.approx_log_p_y_given_x"]], "approx_log_p_y_given_x() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.approx_log_p_y_given_x"]], "approx_log_p_y_given_x() (torch_mist.estimators.generative.pq method)": [[38, "torch_mist.estimators.generative.PQ.approx_log_p_y_given_x"]], "ba() (in module torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.ba"]], "club() (in module torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.club"]], "discrete() (in module torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.discrete"]], "doe() (in module torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.doe"]], "expected_log_ratio() (torch_mist.estimators.generative.ba method)": [[38, "torch_mist.estimators.generative.BA.expected_log_ratio"]], "expected_log_ratio() (torch_mist.estimators.generative.l1out method)": [[38, "torch_mist.estimators.generative.L1Out.expected_log_ratio"]], "gm() (in module torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.gm"]], "l1out() (in module torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.l1out"]], "log_p_x_given_y() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.log_p_x_given_y"]], "log_q_qxy (torch_mist.estimators.generative.discretemutualinformationestimator property)": [[38, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.log_q_qxy"]], "log_ratio() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.generative.l1out method)": [[38, "torch_mist.estimators.generative.L1Out.log_ratio"]], "loss() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.generative.doe method)": [[38, "torch_mist.estimators.generative.DoE.loss"]], "loss() (torch_mist.estimators.generative.gm method)": [[38, "torch_mist.estimators.generative.GM.loss"]], "loss() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.loss"]], "pq() (in module torch_mist.estimators.generative)": [[38, "torch_mist.estimators.generative.pq"]], "q_y_given_x() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.q_Y_given_x"]], "q_y_given_x() (torch_mist.estimators.generative.pq method)": [[38, "torch_mist.estimators.generative.PQ.q_Y_given_x"]], "quantize_x() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.quantize_x"]], "quantize_y() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[38, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.quantize_y"]], "quantize_y() (torch_mist.estimators.generative.pq method)": [[38, "torch_mist.estimators.generative.PQ.quantize_y"]], "torch_mist.estimators.generative": [[38, "module-torch_mist.estimators.generative"]], "l1out (class in torch_mist.estimators.generative.l1out)": [[39, "torch_mist.estimators.generative.l1out.L1Out"]], "approx_log_p_y() (torch_mist.estimators.generative.l1out.l1out method)": [[39, "torch_mist.estimators.generative.l1out.L1Out.approx_log_p_y"]], "expected_log_ratio() (torch_mist.estimators.generative.l1out.l1out method)": [[39, "torch_mist.estimators.generative.l1out.L1Out.expected_log_ratio"]], "l1out() (in module torch_mist.estimators.generative.l1out)": [[39, "torch_mist.estimators.generative.l1out.l1out"]], "log_ratio() (torch_mist.estimators.generative.l1out.l1out method)": [[39, "torch_mist.estimators.generative.l1out.L1Out.log_ratio"]], "torch_mist.estimators.generative.l1out": [[39, "module-torch_mist.estimators.generative.l1out"]], "pq (class in torch_mist.estimators.generative.pq)": [[40, "torch_mist.estimators.generative.pq.PQ"]], "approx_log_p_y() (torch_mist.estimators.generative.pq.pq method)": [[40, "torch_mist.estimators.generative.pq.PQ.approx_log_p_y"]], "approx_log_p_y_given_x() (torch_mist.estimators.generative.pq.pq method)": [[40, "torch_mist.estimators.generative.pq.PQ.approx_log_p_y_given_x"]], "pq() (in module torch_mist.estimators.generative.pq)": [[40, "torch_mist.estimators.generative.pq.pq"]], "q_y_given_x() (torch_mist.estimators.generative.pq.pq method)": [[40, "torch_mist.estimators.generative.pq.PQ.q_Y_given_x"]], "quantize_y() (torch_mist.estimators.generative.pq.pq method)": [[40, "torch_mist.estimators.generative.pq.PQ.quantize_y"]], "torch_mist.estimators.generative.pq": [[40, "module-torch_mist.estimators.generative.pq"]], "hybridmutualinformationestimator (class in torch_mist.estimators.hybrid)": [[41, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator"]], "expected_log_ratio() (torch_mist.estimators.hybrid.hybridmutualinformationestimator method)": [[41, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator.expected_log_ratio"]], "loss() (torch_mist.estimators.hybrid.hybridmutualinformationestimator method)": [[41, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator.loss"]], "torch_mist.estimators.hybrid": [[41, "module-torch_mist.estimators.hybrid"]], "unnormalized_log_ratio() (torch_mist.estimators.hybrid.hybridmutualinformationestimator method)": [[41, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator.unnormalized_log_ratio"]], "alphatuba (class in torch_mist.estimators)": [[42, "torch_mist.estimators.AlphaTUBA"]], "ba (class in torch_mist.estimators)": [[42, "torch_mist.estimators.BA"]], "club (class in torch_mist.estimators)": [[42, "torch_mist.estimators.CLUB"]], "discretemutualinformationestimator (class in torch_mist.estimators)": [[42, "torch_mist.estimators.DiscreteMutualInformationEstimator"]], "doe (class in torch_mist.estimators)": [[42, "torch_mist.estimators.DoE"]], "flo (class in torch_mist.estimators)": [[42, "torch_mist.estimators.FLO"]], "gm (class in torch_mist.estimators)": [[42, "torch_mist.estimators.GM"]], "generativemutualinformationestimator (class in torch_mist.estimators)": [[42, "torch_mist.estimators.GenerativeMutualInformationEstimator"]], "infonce (class in torch_mist.estimators)": [[42, "torch_mist.estimators.InfoNCE"]], "js (class in torch_mist.estimators)": [[42, "torch_mist.estimators.JS"]], "l1out (class in torch_mist.estimators)": [[42, "torch_mist.estimators.L1Out"]], "mine (class in torch_mist.estimators)": [[42, "torch_mist.estimators.MINE"]], "mutualinformationestimator (class in torch_mist.estimators)": [[42, "torch_mist.estimators.MutualInformationEstimator"]], "nwj (class in torch_mist.estimators)": [[42, "torch_mist.estimators.NWJ"]], "pq (class in torch_mist.estimators)": [[42, "torch_mist.estimators.PQ"]], "smile (class in torch_mist.estimators)": [[42, "torch_mist.estimators.SMILE"]], "tuba (class in torch_mist.estimators)": [[42, "torch_mist.estimators.TUBA"]], "__repr__() (torch_mist.estimators.doe method)": [[42, "torch_mist.estimators.DoE.__repr__"]], "__repr__() (torch_mist.estimators.gm method)": [[42, "torch_mist.estimators.GM.__repr__"]], "__repr__() (torch_mist.estimators.generativemutualinformationestimator method)": [[42, "torch_mist.estimators.GenerativeMutualInformationEstimator.__repr__"]], "__repr__() (torch_mist.estimators.tuba method)": [[42, "torch_mist.estimators.TUBA.__repr__"]], "alpha_tuba() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.alpha_tuba"]], "approx_log_p_x() (torch_mist.estimators.discretemutualinformationestimator method)": [[42, "torch_mist.estimators.DiscreteMutualInformationEstimator.approx_log_p_x"]], "approx_log_p_x() (torch_mist.estimators.gm method)": [[42, "torch_mist.estimators.GM.approx_log_p_x"]], "approx_log_p_x_given_y() (torch_mist.estimators.gm method)": [[42, "torch_mist.estimators.GM.approx_log_p_x_given_y"]], "approx_log_p_xy() (torch_mist.estimators.discretemutualinformationestimator method)": [[42, "torch_mist.estimators.DiscreteMutualInformationEstimator.approx_log_p_xy"]], "approx_log_p_xy() (torch_mist.estimators.gm method)": [[42, "torch_mist.estimators.GM.approx_log_p_xy"]], "approx_log_p_y() (torch_mist.estimators.club method)": [[42, "torch_mist.estimators.CLUB.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.discretemutualinformationestimator method)": [[42, "torch_mist.estimators.DiscreteMutualInformationEstimator.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.doe method)": [[42, "torch_mist.estimators.DoE.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.generativemutualinformationestimator method)": [[42, "torch_mist.estimators.GenerativeMutualInformationEstimator.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.l1out method)": [[42, "torch_mist.estimators.L1Out.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.pq method)": [[42, "torch_mist.estimators.PQ.approx_log_p_y"]], "approx_log_p_y_given_x() (torch_mist.estimators.discretemutualinformationestimator method)": [[42, "torch_mist.estimators.DiscreteMutualInformationEstimator.approx_log_p_y_given_x"]], "approx_log_p_y_given_x() (torch_mist.estimators.generativemutualinformationestimator method)": [[42, "torch_mist.estimators.GenerativeMutualInformationEstimator.approx_log_p_y_given_x"]], "approx_log_p_y_given_x() (torch_mist.estimators.pq method)": [[42, "torch_mist.estimators.PQ.approx_log_p_y_given_x"]], "ba() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.ba"]], "club() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.club"]], "compute_log_ratio() (torch_mist.estimators.flo method)": [[42, "torch_mist.estimators.FLO.compute_log_ratio"]], "compute_log_ratio() (torch_mist.estimators.infonce method)": [[42, "torch_mist.estimators.InfoNCE.compute_log_ratio"]], "compute_log_ratio() (torch_mist.estimators.nwj method)": [[42, "torch_mist.estimators.NWJ.compute_log_ratio"]], "compute_log_ratio() (torch_mist.estimators.smile method)": [[42, "torch_mist.estimators.SMILE.compute_log_ratio"]], "compute_log_ratio() (torch_mist.estimators.tuba method)": [[42, "torch_mist.estimators.TUBA.compute_log_ratio"]], "discrete() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.discrete"]], "doe() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.doe"]], "expected_log_ratio() (torch_mist.estimators.ba method)": [[42, "torch_mist.estimators.BA.expected_log_ratio"]], "expected_log_ratio() (torch_mist.estimators.l1out method)": [[42, "torch_mist.estimators.L1Out.expected_log_ratio"]], "expected_log_ratio() (torch_mist.estimators.mutualinformationestimator method)": [[42, "torch_mist.estimators.MutualInformationEstimator.expected_log_ratio"]], "flo() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.flo"]], "forward() (torch_mist.estimators.mutualinformationestimator method)": [[42, "torch_mist.estimators.MutualInformationEstimator.forward"]], "gm() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.gm"]], "infonce() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.infonce"]], "js() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.js"]], "l1out() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.l1out"]], "log_p_x_given_y() (torch_mist.estimators.discretemutualinformationestimator method)": [[42, "torch_mist.estimators.DiscreteMutualInformationEstimator.log_p_x_given_y"]], "log_q_qxy (torch_mist.estimators.discretemutualinformationestimator property)": [[42, "torch_mist.estimators.DiscreteMutualInformationEstimator.log_q_qxy"]], "log_ratio() (torch_mist.estimators.discretemutualinformationestimator method)": [[42, "torch_mist.estimators.DiscreteMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.generativemutualinformationestimator method)": [[42, "torch_mist.estimators.GenerativeMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.l1out method)": [[42, "torch_mist.estimators.L1Out.log_ratio"]], "log_ratio() (torch_mist.estimators.mutualinformationestimator method)": [[42, "torch_mist.estimators.MutualInformationEstimator.log_ratio"]], "loss() (torch_mist.estimators.discretemutualinformationestimator method)": [[42, "torch_mist.estimators.DiscreteMutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.doe method)": [[42, "torch_mist.estimators.DoE.loss"]], "loss() (torch_mist.estimators.gm method)": [[42, "torch_mist.estimators.GM.loss"]], "loss() (torch_mist.estimators.generativemutualinformationestimator method)": [[42, "torch_mist.estimators.GenerativeMutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.js method)": [[42, "torch_mist.estimators.JS.loss"]], "loss() (torch_mist.estimators.mutualinformationestimator method)": [[42, "torch_mist.estimators.MutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.smile method)": [[42, "torch_mist.estimators.SMILE.loss"]], "loss() (torch_mist.estimators.tuba method)": [[42, "torch_mist.estimators.TUBA.loss"]], "mine() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.mine"]], "nwj() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.nwj"]], "pq() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.pq"]], "q_y_given_x() (torch_mist.estimators.generativemutualinformationestimator method)": [[42, "torch_mist.estimators.GenerativeMutualInformationEstimator.q_Y_given_x"]], "q_y_given_x() (torch_mist.estimators.pq method)": [[42, "torch_mist.estimators.PQ.q_Y_given_x"]], "quantize_x() (torch_mist.estimators.discretemutualinformationestimator method)": [[42, "torch_mist.estimators.DiscreteMutualInformationEstimator.quantize_x"]], "quantize_y() (torch_mist.estimators.discretemutualinformationestimator method)": [[42, "torch_mist.estimators.DiscreteMutualInformationEstimator.quantize_y"]], "quantize_y() (torch_mist.estimators.pq method)": [[42, "torch_mist.estimators.PQ.quantize_y"]], "smile() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.smile"]], "torch_mist.estimators": [[42, "module-torch_mist.estimators"]], "tuba() (in module torch_mist.estimators)": [[42, "torch_mist.estimators.tuba"]], "__version__ (in module torch_mist)": [[43, "torch_mist.__version__"]], "torch_mist": [[43, "module-torch_mist"]], "torch_mist.nn": [[44, "module-torch_mist.nn"]], "constant (class in torch_mist.nn.utils)": [[45, "torch_mist.nn.utils.Constant"]], "identity (class in torch_mist.nn.utils)": [[45, "torch_mist.nn.utils.Identity"]], "jointdensenn (class in torch_mist.nn.utils)": [[45, "torch_mist.nn.utils.JointDenseNN"]], "mergeoutputs (class in torch_mist.nn.utils)": [[45, "torch_mist.nn.utils.MergeOutputs"]], "skipdensenn (class in torch_mist.nn.utils)": [[45, "torch_mist.nn.utils.SkipDenseNN"]], "__repr__() (torch_mist.nn.utils.constant method)": [[45, "torch_mist.nn.utils.Constant.__repr__"]], "forward() (torch_mist.nn.utils.constant method)": [[45, "torch_mist.nn.utils.Constant.forward"]], "forward() (torch_mist.nn.utils.identity method)": [[45, "torch_mist.nn.utils.Identity.forward"]], "forward() (torch_mist.nn.utils.jointdensenn method)": [[45, "torch_mist.nn.utils.JointDenseNN.forward"]], "forward() (torch_mist.nn.utils.mergeoutputs method)": [[45, "torch_mist.nn.utils.MergeOutputs.forward"]], "forward() (torch_mist.nn.utils.skipdensenn method)": [[45, "torch_mist.nn.utils.SkipDenseNN.forward"]], "torch_mist.nn.utils": [[45, "module-torch_mist.nn.utils"]], "fixedquantization (class in torch_mist.quantization.functions)": [[46, "torch_mist.quantization.functions.FixedQuantization"]], "learnablequantization (class in torch_mist.quantization.functions)": [[46, "torch_mist.quantization.functions.LearnableQuantization"]], "learnablevectorquantization (class in torch_mist.quantization.functions)": [[46, "torch_mist.quantization.functions.LearnableVectorQuantization"]], "quantizationfunction (class in torch_mist.quantization.functions)": [[46, "torch_mist.quantization.functions.QuantizationFunction"]], "vectorquantization (class in torch_mist.quantization.functions)": [[46, "torch_mist.quantization.functions.VectorQuantization"]], "__repr__() (torch_mist.quantization.functions.learnablevectorquantization method)": [[46, "torch_mist.quantization.functions.LearnableVectorQuantization.__repr__"]], "codebook_lookup() (torch_mist.quantization.functions.vectorquantization method)": [[46, "torch_mist.quantization.functions.VectorQuantization.codebook_lookup"]], "forward() (torch_mist.quantization.functions.fixedquantization method)": [[46, "torch_mist.quantization.functions.FixedQuantization.forward"]], "forward() (torch_mist.quantization.functions.learnablevectorquantization method)": [[46, "torch_mist.quantization.functions.LearnableVectorQuantization.forward"]], "forward() (torch_mist.quantization.functions.quantizationfunction method)": [[46, "torch_mist.quantization.functions.QuantizationFunction.forward"]], "forward() (torch_mist.quantization.functions.vectorquantization method)": [[46, "torch_mist.quantization.functions.VectorQuantization.forward"]], "learnable_vector_quantization() (in module torch_mist.quantization.functions)": [[46, "torch_mist.quantization.functions.learnable_vector_quantization"]], "loss() (torch_mist.quantization.functions.learnablequantization method)": [[46, "torch_mist.quantization.functions.LearnableQuantization.loss"]], "n_bins (torch_mist.quantization.functions.fixedquantization property)": [[46, "torch_mist.quantization.functions.FixedQuantization.n_bins"]], "n_bins (torch_mist.quantization.functions.quantizationfunction property)": [[46, "torch_mist.quantization.functions.QuantizationFunction.n_bins"]], "n_bins (torch_mist.quantization.functions.vectorquantization property)": [[46, "torch_mist.quantization.functions.VectorQuantization.n_bins"]], "torch_mist.quantization.functions": [[46, "module-torch_mist.quantization.functions"]], "trained_vector_quantization() (in module torch_mist.quantization.functions)": [[46, "torch_mist.quantization.functions.trained_vector_quantization"]], "fixedquantization (class in torch_mist.quantization)": [[47, "torch_mist.quantization.FixedQuantization"]], "learnablequantization (class in torch_mist.quantization)": [[47, "torch_mist.quantization.LearnableQuantization"]], "learnablevectorquantization (class in torch_mist.quantization)": [[47, "torch_mist.quantization.LearnableVectorQuantization"]], "quantizationfunction (class in torch_mist.quantization)": [[47, "torch_mist.quantization.QuantizationFunction"]], "vqvae (class in torch_mist.quantization)": [[47, "torch_mist.quantization.VQVAE"]], "vectorquantization (class in torch_mist.quantization)": [[47, "torch_mist.quantization.VectorQuantization"]], "__repr__() (torch_mist.quantization.learnablevectorquantization method)": [[47, "torch_mist.quantization.LearnableVectorQuantization.__repr__"]], "codebook_lookup() (torch_mist.quantization.vectorquantization method)": [[47, "torch_mist.quantization.VectorQuantization.codebook_lookup"]], "forward() (torch_mist.quantization.fixedquantization method)": [[47, "torch_mist.quantization.FixedQuantization.forward"]], "forward() (torch_mist.quantization.learnablevectorquantization method)": [[47, "torch_mist.quantization.LearnableVectorQuantization.forward"]], "forward() (torch_mist.quantization.quantizationfunction method)": [[47, "torch_mist.quantization.QuantizationFunction.forward"]], "forward() (torch_mist.quantization.vectorquantization method)": [[47, "torch_mist.quantization.VectorQuantization.forward"]], "learnable_vector_quantization() (in module torch_mist.quantization)": [[47, "torch_mist.quantization.learnable_vector_quantization"]], "loss() (torch_mist.quantization.learnablequantization method)": [[47, "torch_mist.quantization.LearnableQuantization.loss"]], "loss() (torch_mist.quantization.vqvae method)": [[47, "torch_mist.quantization.VQVAE.loss"]], "n_bins (torch_mist.quantization.fixedquantization property)": [[47, "torch_mist.quantization.FixedQuantization.n_bins"]], "n_bins (torch_mist.quantization.quantizationfunction property)": [[47, "torch_mist.quantization.QuantizationFunction.n_bins"]], "n_bins (torch_mist.quantization.vectorquantization property)": [[47, "torch_mist.quantization.VectorQuantization.n_bins"]], "quantization (torch_mist.quantization.vqvae property)": [[47, "torch_mist.quantization.VQVAE.quantization"]], "torch_mist.quantization": [[47, "module-torch_mist.quantization"]], "trained_vector_quantization() (in module torch_mist.quantization)": [[47, "torch_mist.quantization.trained_vector_quantization"]], "vqvae() (in module torch_mist.quantization)": [[47, "torch_mist.quantization.vqvae"]], "initial_patience (in module torch_mist.quantization.vqvae)": [[48, "torch_mist.quantization.vqvae.INITIAL_PATIENCE"]], "vqvae (class in torch_mist.quantization.vqvae)": [[48, "torch_mist.quantization.vqvae.VQVAE"]], "loss() (torch_mist.quantization.vqvae.vqvae method)": [[48, "torch_mist.quantization.vqvae.VQVAE.loss"]], "quantization (torch_mist.quantization.vqvae.vqvae property)": [[48, "torch_mist.quantization.vqvae.VQVAE.quantization"]], "torch_mist.quantization.vqvae": [[48, "module-torch_mist.quantization.vqvae"]], "vqvae() (in module torch_mist.quantization.vqvae)": [[48, "torch_mist.quantization.vqvae.vqvae"]], "t (in module torch_mist.utils.caching)": [[49, "torch_mist.utils.caching.T"]], "cached() (in module torch_mist.utils.caching)": [[49, "torch_mist.utils.caching.cached"]], "reset_cache_after_call() (in module torch_mist.utils.caching)": [[49, "torch_mist.utils.caching.reset_cache_after_call"]], "reset_cache_before_call() (in module torch_mist.utils.caching)": [[49, "torch_mist.utils.caching.reset_cache_before_call"]], "torch_mist.utils.caching": [[49, "module-torch_mist.utils.caching"]], "sampledataloader (class in torch_mist.utils.data)": [[50, "torch_mist.utils.data.SampleDataLoader"]], "__len__() (torch_mist.utils.data.sampledataloader method)": [[50, "torch_mist.utils.data.SampleDataLoader.__len__"]], "__next__() (torch_mist.utils.data.sampledataloader method)": [[50, "torch_mist.utils.data.SampleDataLoader.__next__"]], "torch_mist.utils.data": [[50, "module-torch_mist.utils.data"]], "estimate_mi() (in module torch_mist.utils.estimate)": [[51, "torch_mist.utils.estimate.estimate_mi"]], "optimize_mi_estimator() (in module torch_mist.utils.estimate)": [[51, "torch_mist.utils.estimate.optimize_mi_estimator"]], "torch_mist.utils.estimate": [[51, "module-torch_mist.utils.estimate"]], "estimate_mi() (in module torch_mist.utils)": [[52, "torch_mist.utils.estimate_mi"]], "optimize_mi_estimator() (in module torch_mist.utils)": [[52, "torch_mist.utils.optimize_mi_estimator"]], "torch_mist.utils": [[52, "module-torch_mist.utils"]]}})