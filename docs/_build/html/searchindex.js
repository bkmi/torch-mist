Search.setIndex({"docnames": ["autoapi/index", "autoapi/src/index", "autoapi/src/torch_mist/baselines/base/index", "autoapi/src/torch_mist/baselines/index", "autoapi/src/torch_mist/distributions/conditional/categorical/index", "autoapi/src/torch_mist/distributions/conditional/correlated_normal/index", "autoapi/src/torch_mist/distributions/conditional/index", "autoapi/src/torch_mist/distributions/index", "autoapi/src/torch_mist/distributions/joint/base/index", "autoapi/src/torch_mist/distributions/joint/index", "autoapi/src/torch_mist/distributions/parametrizations/index", "autoapi/src/torch_mist/distributions/parametrizations/map/index", "autoapi/src/torch_mist/distributions/product/index", "autoapi/src/torch_mist/distributions/transforms/base/index", "autoapi/src/torch_mist/distributions/transforms/index", "autoapi/src/torch_mist/distributions/transforms/linear/index", "autoapi/src/torch_mist/distributions/transforms/permute/index", "autoapi/src/torch_mist/distributions/transforms/split/index", "autoapi/src/torch_mist/distributions/utils/index", "autoapi/src/torch_mist/estimators/base/index", "autoapi/src/torch_mist/estimators/discriminative/index", "autoapi/src/torch_mist/estimators/generative/index", "autoapi/src/torch_mist/estimators/hybrid/index", "autoapi/src/torch_mist/estimators/implementations/index", "autoapi/src/torch_mist/estimators/index", "autoapi/src/torch_mist/estimators/log_partition/index", "autoapi/src/torch_mist/estimators/simclr/index", "autoapi/src/torch_mist/index", "autoapi/src/torch_mist/models/encoder/index", "autoapi/src/torch_mist/models/encoder/mlp/index", "autoapi/src/torch_mist/models/encoder/slow_updates/index", "autoapi/src/torch_mist/models/encoder/types/index", "autoapi/src/torch_mist/models/index", "autoapi/src/torch_mist/models/learnable_distributions/categorical/index", "autoapi/src/torch_mist/models/learnable_distributions/index", "autoapi/src/torch_mist/models/learnable_distributions/transformed_normal/index", "autoapi/src/torch_mist/nn/index", "autoapi/src/torch_mist/nn/utils/index", "autoapi/src/torch_mist/optim/index", "autoapi/src/torch_mist/optim/lr_scheduler/index", "autoapi/src/torch_mist/quantization/index", "autoapi/src/torch_mist/ratio/base/index", "autoapi/src/torch_mist/ratio/conditional_dist/index", "autoapi/src/torch_mist/ratio/index", "autoapi/src/torch_mist/ratio/joint/index", "autoapi/src/torch_mist/ratio/separable/index", "autoapi/src/torch_mist/task/index", "autoapi/src/torch_mist/task/infomax/index", "changelog", "conduct", "contributing", "example", "index"], "filenames": ["autoapi/index.rst", "autoapi/src/index.rst", "autoapi/src/torch_mist/baselines/base/index.rst", "autoapi/src/torch_mist/baselines/index.rst", "autoapi/src/torch_mist/distributions/conditional/categorical/index.rst", "autoapi/src/torch_mist/distributions/conditional/correlated_normal/index.rst", "autoapi/src/torch_mist/distributions/conditional/index.rst", "autoapi/src/torch_mist/distributions/index.rst", "autoapi/src/torch_mist/distributions/joint/base/index.rst", "autoapi/src/torch_mist/distributions/joint/index.rst", "autoapi/src/torch_mist/distributions/parametrizations/index.rst", "autoapi/src/torch_mist/distributions/parametrizations/map/index.rst", "autoapi/src/torch_mist/distributions/product/index.rst", "autoapi/src/torch_mist/distributions/transforms/base/index.rst", "autoapi/src/torch_mist/distributions/transforms/index.rst", "autoapi/src/torch_mist/distributions/transforms/linear/index.rst", "autoapi/src/torch_mist/distributions/transforms/permute/index.rst", "autoapi/src/torch_mist/distributions/transforms/split/index.rst", "autoapi/src/torch_mist/distributions/utils/index.rst", "autoapi/src/torch_mist/estimators/base/index.rst", "autoapi/src/torch_mist/estimators/discriminative/index.rst", "autoapi/src/torch_mist/estimators/generative/index.rst", "autoapi/src/torch_mist/estimators/hybrid/index.rst", "autoapi/src/torch_mist/estimators/implementations/index.rst", "autoapi/src/torch_mist/estimators/index.rst", "autoapi/src/torch_mist/estimators/log_partition/index.rst", "autoapi/src/torch_mist/estimators/simclr/index.rst", "autoapi/src/torch_mist/index.rst", "autoapi/src/torch_mist/models/encoder/index.rst", "autoapi/src/torch_mist/models/encoder/mlp/index.rst", "autoapi/src/torch_mist/models/encoder/slow_updates/index.rst", "autoapi/src/torch_mist/models/encoder/types/index.rst", "autoapi/src/torch_mist/models/index.rst", "autoapi/src/torch_mist/models/learnable_distributions/categorical/index.rst", "autoapi/src/torch_mist/models/learnable_distributions/index.rst", "autoapi/src/torch_mist/models/learnable_distributions/transformed_normal/index.rst", "autoapi/src/torch_mist/nn/index.rst", "autoapi/src/torch_mist/nn/utils/index.rst", "autoapi/src/torch_mist/optim/index.rst", "autoapi/src/torch_mist/optim/lr_scheduler/index.rst", "autoapi/src/torch_mist/quantization/index.rst", "autoapi/src/torch_mist/ratio/base/index.rst", "autoapi/src/torch_mist/ratio/conditional_dist/index.rst", "autoapi/src/torch_mist/ratio/index.rst", "autoapi/src/torch_mist/ratio/joint/index.rst", "autoapi/src/torch_mist/ratio/separable/index.rst", "autoapi/src/torch_mist/task/index.rst", "autoapi/src/torch_mist/task/infomax/index.rst", "changelog.md", "conduct.md", "contributing.md", "example.ipynb", "index.md"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.baselines.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.baselines</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.conditional.categorical</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.conditional.correlated_normal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.conditional</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.joint.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.joint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.parametrizations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.parametrizations.map</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.product</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.transforms.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.transforms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.transforms.linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.transforms.permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.transforms.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.distributions.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.estimators.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.estimators.discriminative</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.estimators.generative</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.estimators.hybrid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.estimators.implementations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.estimators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.estimators.log_partition</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.estimators.simclr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.models.encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.models.encoder.mlp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.models.encoder.slow_updates</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.models.encoder.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.models.learnable_distributions.categorical</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.models.learnable_distributions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.models.learnable_distributions.transformed_normal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.nn.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.optim</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.optim.lr_scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.ratio.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.ratio.conditional_dist</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.ratio</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.ratio.joint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.ratio.separable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.torch_mist.task.infomax</span></code>", "Changelog", "Code of Conduct", "Contributing", "Example usage", "torch_mist"], "terms": {"thi": [0, 2, 3, 5, 14, 15, 16, 17, 19, 21, 22, 23, 24, 26, 28, 30, 31, 34, 35, 37, 40, 41, 43, 44, 45, 49, 50, 52], "page": 0, "contain": [0, 2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "auto": 0, "gener": [0, 1, 12, 13, 14, 20, 22, 24, 27, 28, 31, 33, 34, 35], "document": 0, "1": [0, 2, 3, 5, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 49, 51], "src": 0, "torch_mist": [0, 1, 48, 50, 51], "baselin": [0, 1, 20, 24, 27], "base": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52], "distribut": [0, 1, 20, 21, 24, 27, 28, 29, 33, 34, 35, 36, 37, 42], "condit": [0, 1, 7, 13, 14, 15, 27, 28, 29, 33, 34, 36, 37], "categor": [0, 6, 7, 27, 32, 34], "correlated_norm": [0, 6, 7, 27], "joint": [0, 1, 7, 21, 24, 27, 34, 35, 43], "parametr": [0, 1, 7, 27], "map": [0, 7, 10, 27], "transform": [0, 1, 5, 7, 27, 28, 29, 34, 35, 36, 37], "linear": [0, 7, 14, 23, 27, 34, 35, 39], "permut": [0, 7, 14, 27], "split": [0, 7, 14, 27], "product": [0, 1, 7, 27], "util": [0, 1, 7, 27, 36, 46, 47], "estim": [0, 1, 27, 41, 43, 44, 45, 46, 47, 52], "discrimin": [0, 1, 22, 24, 27], "hybrid": [0, 1, 24, 27], "implement": [0, 1, 5, 14, 15, 24, 27, 28, 29, 36, 37], "log_partit": [0, 1, 24, 27], "simclr": [0, 1, 24, 27], "model": [0, 1, 2, 3, 19, 21, 22, 23, 24, 26, 27, 37, 40, 41, 43, 44, 45, 46, 47], "encod": [0, 1, 19, 24, 27, 32, 46, 47], "mlp": [0, 27, 28, 32], "slow_upd": [0, 27, 28, 32], "type": [0, 4, 5, 6, 11, 13, 14, 15, 16, 19, 24, 27, 28, 32, 33, 34, 46, 47], "learnable_distribut": [0, 1, 27, 32], "transformed_norm": [0, 27, 32, 34], "nn": [0, 1, 2, 3, 4, 6, 13, 14, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 40, 41, 43, 44, 45, 46, 47], "optim": [0, 1, 27, 46, 47], "lr_schedul": [0, 1, 27, 38, 46, 47], "ratio": [0, 1, 19, 20, 23, 24, 25, 27], "conditional_dist": [0, 1, 27, 43], "separ": [0, 1, 27, 43, 49], "task": [0, 1, 27], "infomax": [0, 1, 27, 46], "quantiz": [0, 1, 21, 27], "creat": [0, 4, 5, 6, 13, 14, 16, 33, 34, 35, 49, 50, 52], "sphinx": 0, "autoapi": 0, "arg": [2, 3, 19, 21, 24, 25, 37, 40, 41, 43], "kwarg": [2, 3, 19, 21, 23, 24, 25, 26, 37, 40, 41, 43], "torch": [2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "all": [2, 3, 14, 15, 17, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45, 49, 50], "neural": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "network": [2, 3, 14, 16, 19, 21, 22, 23, 24, 26, 28, 29, 30, 34, 35, 36, 37, 40, 41, 43, 44, 45], "your": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45, 50], "should": [2, 3, 5, 14, 15, 17, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45, 50], "also": [2, 3, 5, 14, 15, 17, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "subclass": [2, 3, 14, 15, 17, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "can": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45, 50], "other": [2, 3, 14, 16, 19, 21, 22, 23, 24, 26, 28, 29, 30, 34, 35, 36, 37, 40, 41, 43, 44, 45, 49], "allow": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "nest": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "them": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "tree": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "structur": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "you": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45, 50, 52], "assign": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "submodul": [2, 19, 21, 22, 23, 26, 30, 35, 37, 40, 41, 44, 45], "regular": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "attribut": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "import": [2, 3, 14, 16, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45, 51], "function": [2, 3, 13, 19, 21, 22, 23, 24, 26, 28, 30, 33, 34, 37, 39, 40, 41, 43, 44, 45, 50], "f": [2, 3, 19, 20, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "def": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "__init__": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "self": [2, 3, 11, 13, 14, 19, 21, 22, 23, 24, 26, 28, 30, 33, 34, 35, 37, 40, 41, 43, 44, 45], "super": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "conv1": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "conv2d": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "20": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "5": [2, 3, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 34, 35, 36, 37, 40, 41, 43, 44, 45], "conv2": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "forward": [2, 3, 5, 14, 15, 17, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47], "x": [2, 3, 4, 5, 6, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47], "relu": [2, 3, 19, 21, 22, 23, 24, 26, 28, 29, 30, 34, 35, 36, 37, 40, 41, 43, 44, 45], "return": [2, 3, 4, 5, 6, 11, 13, 14, 15, 16, 19, 21, 22, 23, 24, 26, 28, 30, 33, 34, 35, 37, 40, 41, 43, 44, 45], "wai": [2, 3, 4, 5, 6, 13, 14, 19, 21, 22, 23, 24, 26, 28, 30, 33, 34, 35, 37, 40, 41, 43, 44, 45, 49], "regist": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "have": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45, 49, 50], "paramet": [2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45], "convert": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "too": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "when": [2, 3, 5, 14, 15, 16, 19, 21, 22, 23, 24, 26, 28, 29, 30, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 49, 50], "call": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45, 51], "etc": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "As": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "per": [2, 3, 19, 21, 22, 23, 24, 26, 28, 29, 30, 34, 35, 36, 37, 40, 41, 43, 44, 45], "exampl": [2, 3, 5, 14, 15, 16, 19, 21, 22, 23, 24, 26, 28, 29, 30, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 49], "abov": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "an": [2, 3, 4, 5, 6, 13, 14, 16, 19, 21, 22, 23, 24, 26, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 49], "parent": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "must": [2, 3, 5, 14, 15, 16, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "made": [2, 3, 14, 16, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "befor": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45, 50], "child": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "variabl": [2, 3, 14, 16, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "train": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 39, 40, 41, 43, 44, 45], "bool": [2, 3, 5, 13, 14, 15, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 39, 40, 41, 43, 44, 45], "boolean": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "repres": [2, 3, 5, 11, 14, 15, 16, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45, 49], "whether": [2, 3, 5, 14, 15, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "i": [2, 3, 5, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 49, 50, 52], "evalu": [2, 3, 13, 14, 19, 21, 22, 23, 24, 26, 28, 30, 33, 34, 35, 37, 40, 41, 43, 44, 45], "mode": [2, 3, 19, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 41, 43, 44, 45], "abstract": [2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 19, 20, 25, 33, 34, 35], "f_": [2, 3, 20, 24], "tensor": [2, 3, 5, 8, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 26, 28, 30, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47], "y": [2, 3, 5, 12, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 34, 35, 41, 42, 43, 44, 45], "option": [2, 3, 8, 11, 20, 21, 22, 23, 24, 26, 34, 35, 43, 45, 46, 47], "none": [2, 3, 11, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 34, 35, 43, 45, 46, 47], "constantbaselin": [2, 3, 20, 24], "valu": [2, 3, 5, 13, 14, 15, 16, 19, 24, 33, 34, 35, 37, 41, 43, 44, 45], "float": [2, 3, 5, 6, 8, 11, 14, 15, 20, 23, 24, 26, 28, 30, 43, 45, 46, 47], "0": [2, 3, 5, 11, 14, 15, 16, 20, 23, 24, 26, 39, 43, 45, 46, 47], "exponentialmovingaverag": [2, 3], "gamma": [2, 3, 20, 24], "9": [2, 3, 20, 24], "batchlogmeanexp": [2, 3], "dim": [2, 3, 14, 16, 36, 37], "learnablebaselin": [2, 3], "net": [2, 3, 4, 6, 14, 15, 37], "learnablemlpbaselin": [2, 3], "x_dim": [2, 3, 23, 26, 34, 35, 43, 44, 45], "int": [2, 3, 5, 7, 11, 14, 15, 16, 18, 20, 23, 24, 26, 28, 29, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45], "hidden_dim": [2, 3, 7, 14, 15, 18, 23, 26, 28, 29, 33, 34, 35, 36, 37, 43, 44, 45], "list": [2, 3, 7, 8, 11, 13, 14, 18, 23, 26, 28, 29, 33, 34, 35, 36, 37, 39, 43, 44, 45], "learnablejointbaselin": [2, 3, 20, 24], "learnablejointmlpbaselin": [2, 3], "y_dim": [2, 3, 23, 26, 33, 34, 35, 43, 44, 45], "interpolatedbaselin": [2, 3], "baseline_1": [2, 3], "baseline_2": [2, 3], "alpha": [2, 3, 20, 23, 24], "alphatubabaselin": 2, "modul": [3, 6, 14, 24, 28, 34, 36, 43, 46, 51], "conditionalcategor": [4, 6, 33, 34], "pyro": [4, 5, 6, 13, 14, 15, 16, 17, 20, 21, 24, 28, 29, 33, 34, 36, 37, 42], "conditionaldistribut": [4, 5, 6, 13, 14, 20, 21, 24, 33, 34, 42], "helper": [4, 5, 6, 13, 14, 16, 33, 34, 35], "provid": [4, 5, 6, 13, 14, 33, 34, 35], "standard": [4, 5, 6, 13, 14, 33, 34, 35], "abc": [4, 5, 6, 13, 14, 33, 34, 35], "us": [4, 5, 6, 13, 14, 15, 16, 17, 28, 29, 33, 34, 35, 36, 37, 49, 50, 51], "inherit": [4, 5, 6, 13, 14, 15, 17, 33, 34, 35], "correlatednorm": [5, 6], "rho": [5, 6], "context": [5, 6, 13, 14, 15, 16], "cubicptransform": 5, "k1": 5, "k3": 5, "invert": [5, 14, 15, 16], "comput": [5, 14, 15, 17, 19, 24, 39, 41, 43, 44, 45], "log": [5, 13, 14, 15, 16, 17, 25, 33, 34, 35], "det": [5, 14, 15, 17], "jacobian": [5, 14, 15, 16, 17], "thei": [5, 14, 15, 17, 49, 50], "ar": [5, 12, 13, 14, 15, 17, 19, 20, 24, 33, 34, 35, 49, 50], "primarili": [5, 14, 15], "transformeddistribut": [5, 14, 15, 16], "cach": [5, 14, 15], "whose": [5, 14, 15], "invers": [5, 14, 15, 17], "either": [5, 14, 15], "expens": [5, 14, 15], "numer": [5, 14, 15], "unstabl": [5, 14, 15], "note": [5, 14, 15, 16, 28, 29, 36, 37, 50, 52], "care": [5, 14, 15], "taken": [5, 14, 15], "memoiz": [5, 14, 15], "sinc": [5, 14, 15, 16], "autograd": [5, 14, 15], "graph": [5, 14, 15], "mai": [5, 14, 15, 49], "revers": [5, 14, 15], "For": [5, 14, 15], "while": [5, 14, 15], "follow": [5, 14, 15, 19, 24, 49], "work": [5, 14, 15, 16, 50], "without": [5, 14, 15, 49], "t": [5, 14, 15, 19, 24], "log_abs_det_jacobian": [5, 14, 15, 16, 17], "backward": [5, 14, 15], "receiv": [5, 14, 15], "gradient": [5, 14, 15], "howev": [5, 14, 15, 16], "error": [5, 14, 15], "due": [5, 14, 15], "depend": [5, 14, 15], "z": [5, 14, 15, 28, 29, 36, 37], "inv": [5, 14, 15], "grad": [5, 14, 15], "sum": [5, 14, 15, 16], "becaus": [5, 14, 15], "deriv": [5, 14, 15, 28, 31], "one": [5, 11, 14, 15, 39], "both": [5, 14, 15, 49], "_call": [5, 14, 15, 16, 17], "_invers": [5, 14, 15, 16, 17], "set": [5, 14, 15, 39, 49, 50], "biject": [5, 14, 15, 16], "true": [5, 13, 14, 15, 20, 39, 43, 45], "cache_s": [5, 14, 15, 16], "size": [5, 8, 12, 13, 14, 15, 28, 29, 33, 34, 35, 36, 37, 49], "If": [5, 14, 15, 39, 50], "zero": [5, 14, 15, 16], "done": [5, 14, 15, 50], "latest": [5, 14, 15], "singl": [5, 14, 15], "onli": [5, 14, 15], "support": [5, 14, 15, 50], "domain": [5, 14, 15, 17], "The": [5, 11, 14, 15, 28, 29, 36, 37, 39, 41, 43, 44, 45, 49, 50], "constraint": [5, 14, 15], "valid": [5, 14, 15, 39], "input": [5, 14, 15, 16, 17, 28, 29, 36, 37], "codomain": [5, 14, 15, 17], "output": [5, 14, 15, 16, 17, 28, 29, 36, 37], "which": [5, 14, 15, 19, 24, 39, 49], "A": [5, 14, 15, 16, 39], "iff": [5, 14, 15], "everi": [5, 14, 15, 50], "least": [5, 14, 15], "maintain": [5, 14, 15, 49], "weaker": [5, 14, 15], "pseudoinvers": [5, 14, 15], "properti": [5, 14, 15, 19, 28, 30, 34, 35, 40], "sign": [5, 14, 15], "univari": [5, 14, 15], "monoton": [5, 14, 15], "increas": [5, 14, 15, 16], "decreas": [5, 14, 15], "method": [5, 11, 14, 15, 17], "dy": [5, 14, 15, 17], "dx": [5, 14, 15, 17], "given": [5, 14, 15, 17, 39, 41, 43, 44, 45, 50], "randomfliptransform": 5, "fals": [5, 14, 15, 20, 39, 43, 45], "cubiccorrelatednorm": [5, 6], "translat": 5, "b": [5, 28, 29, 36, 37, 50], "skewedcorrelatednorm": [5, 6], "conditional_categor": [7, 18], "n_class": [7, 18, 33, 34], "context_dim": [7, 14, 15, 18, 28, 29, 36, 37], "conditional_mutivariate_categor": [7, 18], "output_dim": [7, 18, 28, 29], "jointdistribut": [8, 21, 24, 34, 35], "label": [8, 34, 35], "entropi": 8, "union": [8, 11, 13, 14, 20, 25, 46, 47], "str": [8, 11, 13, 14, 21, 23, 25, 34, 35, 46, 47], "sampl": [8, 12, 13, 14, 16, 19, 20, 21, 24, 33, 34, 35], "sample_shap": [8, 12, 13, 14, 33, 34, 35], "dict": [8, 11, 13, 14, 21, 25, 34, 35, 46, 47], "log_prob": [8, 13, 14, 33, 34, 35], "data": 8, "epsilon": [11, 14, 15], "1e": [11, 14, 15, 26], "06": [11, 14, 15, 26], "parametermap": 11, "from": [11, 14, 15, 16, 17, 19, 24, 28, 31, 49], "dictionari": 11, "supported_distribut": 11, "n_paramet": 11, "map_paramet": 11, "parameter_list": 11, "respons": 11, "defin": [11, 14, 16, 28, 31, 49], "interest": [11, 49, 52], "name": [11, 50, 51], "__call__": [11, 25], "extra_repr": 11, "__repr__": [11, 13, 14, 20, 21, 24, 33, 34, 37, 46, 47], "repr": [11, 13, 14, 21, 24, 33, 34, 37], "deltamap": 11, "delta": 11, "same": [11, 28, 31, 46, 47], "locat": 11, "locscalemap": 11, "scale": [11, 14, 15], "scale_offset": 11, "logitsmap": 11, "temperaturelogitsmap": 11, "2": 11, "shuffledbatchdistribut": 12, "probabl": [12, 13, 14, 20, 33, 34, 35], "rsampl": [12, 13, 14, 33, 34, 35], "shape": [12, 13, 14, 16, 19, 24, 28, 29, 33, 34, 35, 36, 37], "reparameter": [12, 13, 14, 33, 34, 35], "batch": [12, 13, 14, 20, 33, 34, 35, 46, 47], "distributionmodul": [13, 14, 34, 35], "validate_arg": [13, 14], "conditionaldistributionmodul": [13, 14], "conditionaltransformeddistributionmodul": [13, 14, 34, 35], "base_dist": [13, 14, 16], "conditionaltransform": [13, 14, 15], "conditionaltransformeddistribut": [13, 14], "clear_cach": [13, 14], "transformeddistributionmodul": [13, 14], "densiti": [13, 14, 25, 33, 34, 35], "mass": [13, 14, 33, 34, 35], "input_dim": [14, 15, 16, 17, 26, 28, 29, 34, 35, 36, 37], "loc": [14, 15], "initial_scal": [14, 15], "conditionedlinear": [14, 15], "transformmodul": [14, 15, 16, 17], "_param": [14, 15], "conditionallinear": [14, 15], "skip_connect": [14, 15], "conditionaltransformmodul": [14, 15], "learnabl": [14, 15, 17], "normal": [14, 15, 16, 17, 25], "flow": [14, 15, 17, 28, 29, 36, 37], "rather": [14, 15, 17], "than": [14, 15, 17], "so": [14, 15, 16, 17, 28, 29, 36, 37], "conditional_linear": [14, 15, 23, 34, 35], "conditional_skip_linear": [14, 15], "learn_loc": [14, 15], "splittransform": [14, 17], "out_dim": [14, 17, 26, 43, 45], "dist": [14, 16, 17, 34, 35], "add_dim": [14, 17], "remove_dim": [14, 17], "reorder": [14, 16], "dimens": [14, 16, 28, 29, 36, 37], "multipli": [14, 16], "matrix": [14, 16], "between": [14, 16, 25], "affineautoregress": [14, 16], "flexibl": [14, 16], "result": [14, 16, 46, 47], "stabil": [14, 16], "learn": [14, 16, 39], "whilst": [14, 16], "being": [14, 16], "autoregress": [14, 16, 28, 29, 36, 37], "absolut": [14, 16], "determin": [14, 16, 49], "easili": [14, 16], "calcul": [14, 16], "two": [14, 16, 28, 29, 36, 37, 39], "layer": [14, 16, 28, 29, 36, 37], "equival": [14, 16], "insid": [14, 16], "those": [14, 16], "iaf": [14, 16], "more": [14, 16], "usag": [14, 16, 28, 29, 36, 37], "autoregressivenn": [14, 16], "10": [14, 16, 28, 29, 36, 37], "ones": [14, 16], "iaf1": [14, 16], "40": [14, 16], "ff": [14, 16], "randperm": [14, 16], "dtype": [14, 16], "long": [14, 16], "iaf2": [14, 16], "flow_dist": [14, 16], "longtensor": [14, 16, 40], "order": [14, 16], "appli": [14, 16, 19, 28, 29, 36, 37, 49], "neg": [14, 16], "event": [14, 16, 49], "ab": [14, 16], "update_devic": [14, 16], "invok": [14, 16], "prototyp": [14, 16], "previou": [14, 16], "elementwis": [14, 16], "e": [14, 16, 28, 29, 36, 37, 49], "dy_0": [14, 16], "dx_0": [14, 16], "dy_": [14, 16], "n": [14, 16, 19, 20, 24], "dx_": [14, 16], "express": [14, 16, 49], "turn": [14, 16], "out": [14, 16, 52], "": [14, 16, 19, 24, 49, 50], "alwai": [14, 16, 50], "vector": [14, 16], "object": [14, 16, 19, 24], "consist": [14, 16], "tupl": [14, 16, 25, 26, 46, 47], "correspond": [14, 16], "integ": [14, 16, 39], "indic": [14, 16], "default": [14, 16, 28, 29, 36, 37, 39], "random": [14, 16], "param": [15, 19, 24, 41, 43, 44, 45], "loss": [19, 24], "__add__": 19, "__sub__": 19, "fn": 19, "logratioestim": [19, 24], "log_ratio": [19, 20, 21, 22, 24], "mutualinformationestim": [19, 20, 21, 22, 23, 24, 26, 46, 47], "lower_bound": [19, 20, 24], "upper_bound": [19, 20, 24], "d": [19, 24], "p": [19, 24], "m": [19, 24], "j": [19, 20, 23, 24], "quantiti": [19, 24], "differenti": [19, 24], "maxim": [19, 24], "mutual": [19, 24, 52], "inform": [19, 24, 49, 52], "w": [19, 24], "r": [19, 24], "propos": [19, 20, 24, 50], "compon": [19, 24], "empiricaldistribut": 20, "sample_n": 20, "n_sampl": 20, "discriminativemutualinformationestim": [20, 22, 24], "unnormalized_log_ratio": [20, 24], "unnormalizedratioestim": [20, 23, 24, 41, 42, 43, 44, 45], "mc_sampl": [20, 24], "sample_propos": [20, 25], "_compute_log_ratio": [20, 24], "y_": [20, 24, 26], "_compute_log_ratio_grad": [20, 24], "nwj": [20, 23, 24], "tuba": [20, 23, 24], "grad_baselin": [20, 24], "mine": [20, 23, 24], "infonc": [20, 23, 24], "separableunnormalizedratioestim": [20, 24, 43, 45], "alphatuba": [20, 23, 24], "smile": [20, 23, 24], "tau": [20, 23, 24, 28, 30, 46, 47], "flo": [20, 24], "generativemutualinformationestim": [21, 23, 24], "log_prob_i": [21, 24], "log_prob_y_x": [21, 24], "compute_loss": [21, 24], "log_p_i": [21, 24], "log_p_y_x": [21, 24], "variationalproposalmutualinformationestim": [21, 22, 24], "conditional_y_x": [21, 24, 42], "ba": [21, 23, 24], "marginal_i": [21, 24], "h_y": [21, 23, 24], "doe": [21, 23, 24], "gm": [21, 24], "joint_xi": [21, 24], "marginal_x": [21, 24], "h_x": [21, 24], "log_prob_x": [21, 24], "pq": 21, "conditional_qx_i": 21, "q": 21, "quantizationfunct": [21, 40], "expected_log_ratio": 21, "club": 21, "l1out": 21, "hybridmutualinformationestim": [22, 24], "generative_estim": [22, 24], "discriminative_estim": [22, 24], "n_transform": [23, 34, 35], "conditional_transform_nam": 23, "transform_nam": [23, 34, 35], "marginal_transform_nam": 23, "n_marginal_transform": 23, "neg_sampl": [23, 26], "ratio_estim": 23, "baseline_hidden_dim": 23, "logpartit": 25, "ani": [25, 34, 35, 46, 47, 49, 50], "normalizedlogpartit": 25, "partit": 25, "unnormalizedlogpartit": 25, "ellipsi": 25, "project": [26, 49, 50, 51, 52], "128": 26, "norm_lay": 26, "partial": 26, "layernorm": 26, "ep": 26, "temperatur": [26, 43, 45], "compute_dual_ratio": 26, "__version__": [27, 51], "encoderkeyword": [28, 31, 46, 47], "enum": [28, 31], "enumer": [28, 31], "new": [28, 31], "slow": [28, 31], "encodermlp": [28, 29], "densenn": [28, 29, 36, 37], "simpl": [28, 29, 36, 37], "dens": [28, 29, 36, 37], "feedforward": [28, 29, 36, 37], "g": [28, 29, 36, 37], "some": [28, 29, 36, 37], "conditionalplanarflow": [28, 29, 36, 37], "uncondit": [28, 29, 36, 37], "affinecoupl": [28, 29, 36, 37], "do": [28, 29, 36, 37, 49], "requir": [28, 29, 36, 37, 50], "rand": [28, 29, 36, 37], "100": [28, 29, 36, 37, 39], "50": [28, 29, 36, 37], "param_dim": [28, 29, 36, 37], "c": [28, 29, 36, 37], "dimension": [28, 29, 36, 37], "hidden": [28, 29, 36, 37], "unit": [28, 29, 36, 37], "p_n": [28, 29, 36, 37], "nonlinear": [28, 29, 36, 37], "final": [28, 29, 36, 37], "unbound": [28, 29, 36, 37], "real": [28, 29, 36, 37], "number": [28, 29, 36, 37], "slowlyupdatingmodel": [28, 30], "current_model": [28, 30], "_update_weight": [28, 30], "updat": [28, 30, 39, 50], "target": [28, 30], "conditionalcategoricalmlp": [33, 34], "a_dim": [33, 34], "conditionalcategoricallinear": [33, 34], "learnablecategor": [33, 34], "conditionalflowtransformednorm": [34, 35], "transform_param": [34, 35], "flowtransformednorm": [34, 35], "flowtransformedjointnorm": [34, 35], "fetch_transform": 35, "jointdensenn": [36, 37], "constant": 37, "ident": [37, 49], "skipdensenn": 37, "mergeoutput": 37, "warmupschedul": 39, "warmup_step": 39, "total_step": 39, "cosin": 39, "lambdalr": 39, "rate": 39, "each": 39, "group": 39, "initi": 39, "lr": 39, "time": 39, "last_epoch": 39, "wrap": 39, "lr_lambda": 39, "multipl": 39, "factor": 39, "epoch": 39, "param_group": 39, "index": 39, "last": [39, 51], "verbos": 39, "print": [39, 51], "messag": 39, "stdout": 39, "xdoctest": 39, "skip": 39, "assum": 39, "ha": 39, "lambda1": 39, "lambda": 39, "30": 39, "lambda2": 39, "95": 39, "schedul": 39, "rang": 39, "step": [39, 46, 47, 50], "num_bin": 40, "critic": [41, 43, 44, 45, 49], "pair": [41, 43, 44, 45], "conditionaldistributionratio": 42, "jointunnormalizedratioestim": [43, 44], "joint_net": [43, 44], "jointratioestimatormlp": [43, 44], "f_x": [43, 45], "f_y": [43, 45], "separableratioestimatormlp": [43, 45], "transform_x": [43, 45], "transform_i": [43, 45], "same_transform": [43, 45], "normalize_output": [43, 45], "mi_estim": [46, 47], "optimizer_class": [46, 47], "optimizer_init_arg": [46, 47], "lr_scheduler_class": [46, 47], "_lrschedul": [46, 47], "lr_scheduler_init_arg": [46, 47], "lr_scheduler_param": [46, 47], "encoder_x": [46, 47], "encoder_i": [46, 47], "99": [46, 47], "pytorch_lightn": [46, 47], "lightningmodul": [46, 47], "shared_step": [46, 47], "step_output": [46, 47], "log_compon": [46, 47], "training_step": [46, 47], "batch_idx": [46, 47], "validation_step": [46, 47], "test_step": [46, 47], "configure_optim": [46, 47], "first": 48, "releas": [48, 50, 52], "In": [49, 51], "foster": 49, "open": [49, 50], "welcom": [49, 50], "environ": 49, "we": 49, "contributor": 49, "make": [49, 50], "particip": 49, "commun": 49, "harass": 49, "free": [49, 50], "experi": 49, "everyon": 49, "regardless": 49, "ag": 49, "bodi": 49, "disabl": 49, "ethnic": 49, "gender": 49, "level": 49, "nation": 49, "person": 49, "appear": 49, "race": 49, "religion": 49, "sexual": 49, "orient": 49, "behavior": 49, "contribut": 49, "posit": 49, "includ": [49, 50], "inclus": 49, "languag": 49, "Being": 49, "respect": 49, "differ": 49, "viewpoint": 49, "gracefulli": 49, "accept": 49, "construct": 49, "focus": 49, "what": 49, "best": 49, "show": 49, "empathi": 49, "toward": 49, "member": 49, "unaccept": 49, "imageri": 49, "unwelcom": 49, "attent": 49, "advanc": 49, "troll": 49, "insult": 49, "derogatori": 49, "comment": 49, "polit": 49, "attack": 49, "public": 49, "privat": 49, "publish": 49, "physic": 49, "electron": 49, "address": 49, "explicit": 49, "permiss": 49, "could": 49, "reason": 49, "consid": 49, "inappropri": 49, "profession": 49, "clarifi": 49, "expect": 49, "take": 49, "appropri": [49, 50], "fair": 49, "correct": 49, "action": 49, "instanc": 49, "right": 49, "remov": 49, "edit": 49, "reject": 49, "commit": [49, 50], "wiki": 49, "issu": [49, 50], "align": 49, "ban": 49, "temporarili": 49, "perman": 49, "deem": 49, "threaten": 49, "offens": 49, "harm": 49, "within": 49, "space": 49, "individu": 49, "its": [49, 50, 52], "offici": [49, 50], "mail": 49, "post": [49, 50], "via": 49, "social": 49, "media": 49, "account": 49, "act": 49, "appoint": 49, "onlin": 49, "offlin": 49, "represent": 49, "further": 49, "abus": 49, "otherwis": 49, "report": 49, "contact": 49, "team": 49, "review": 49, "investig": 49, "complaint": 49, "respond": 49, "circumst": 49, "oblig": 49, "confidenti": 49, "regard": 49, "incid": 49, "detail": [49, 50], "specif": 49, "polici": 49, "who": 49, "good": 49, "faith": 49, "face": 49, "temporari": 49, "repercuss": 49, "leadership": 49, "adapt": 49, "coven": 49, "homepag": 49, "version": [49, 50], "4": 49, "greatli": 50, "appreci": 50, "littl": 50, "bit": 50, "help": 50, "credit": 50, "pleas": [50, 52], "oper": 50, "system": 50, "about": 50, "local": 50, "setup": 50, "might": 50, "troubleshoot": 50, "reproduc": 50, "look": 50, "through": 50, "github": 50, "anyth": 50, "tag": 50, "want": 50, "whoever": 50, "enhanc": 50, "never": 50, "enough": 50, "feel": 50, "part": 50, "doc": 50, "docstr": 50, "even": 50, "web": 50, "blog": 50, "articl": 50, "explain": 50, "how": 50, "would": 50, "keep": 50, "scope": 50, "narrow": 50, "possibl": 50, "easier": 50, "rememb": 50, "volunt": 50, "driven": 50, "readi": 50, "here": 50, "up": 50, "develop": 50, "download": 50, "copi": 50, "instal": 50, "poetri": 50, "git": 50, "similar": 50, "branch": 50, "chang": 50, "checkout": 50, "bugfix": 50, "re": 50, "check": [50, 52], "conform": 50, "format": 50, "pass": 50, "test": 50, "meet": 50, "addit": 50, "add": 50, "current": 50, "python": 50, "By": [50, 52], "agre": [50, 52], "abid": [50, 52], "term": [50, 52], "To": 51, "modulenotfounderror": 51, "traceback": 51, "most": 51, "recent": 51, "cell": 51, "line": 51, "3": 51, "No": 51, "toolkit": 52, "pytorch": 52, "pip": 52, "todo": 52, "guidelin": 52, "code": 52, "conduct": 52, "wa": 52, "marco": 52, "federici": 52, "It": 52, "under": 52, "mit": 52, "cookiecutt": 52, "py": 52, "pkg": 52, "templat": 52}, "objects": {"": [[1, 0, 0, "-", "src"]], "src": [[27, 0, 0, "-", "torch_mist"]], "src.torch_mist": [[27, 1, 1, "", "__version__"], [3, 0, 0, "-", "baselines"], [7, 0, 0, "-", "distributions"], [24, 0, 0, "-", "estimators"], [32, 0, 0, "-", "models"], [36, 0, 0, "-", "nn"], [38, 0, 0, "-", "optim"], [40, 0, 0, "-", "quantization"], [43, 0, 0, "-", "ratio"], [46, 0, 0, "-", "task"]], "src.torch_mist.baselines": [[3, 2, 1, "", "Baseline"], [3, 2, 1, "", "BatchLogMeanExp"], [3, 2, 1, "", "ConstantBaseline"], [3, 2, 1, "", "ExponentialMovingAverage"], [3, 2, 1, "", "InterpolatedBaseline"], [3, 2, 1, "", "LearnableBaseline"], [3, 2, 1, "", "LearnableJointBaseline"], [3, 2, 1, "", "LearnableJointMLPBaseline"], [3, 2, 1, "", "LearnableMLPBaseline"], [2, 0, 0, "-", "base"]], "src.torch_mist.baselines.Baseline": [[3, 3, 1, "", "forward"]], "src.torch_mist.baselines.BatchLogMeanExp": [[3, 3, 1, "", "forward"]], "src.torch_mist.baselines.ConstantBaseline": [[3, 3, 1, "", "forward"]], "src.torch_mist.baselines.ExponentialMovingAverage": [[3, 3, 1, "", "forward"]], "src.torch_mist.baselines.InterpolatedBaseline": [[3, 3, 1, "", "forward"]], "src.torch_mist.baselines.LearnableBaseline": [[3, 3, 1, "", "forward"]], "src.torch_mist.baselines.LearnableJointBaseline": [[3, 3, 1, "", "forward"]], "src.torch_mist.baselines.base": [[2, 2, 1, "", "AlphaTUBABaseline"], [2, 2, 1, "", "Baseline"], [2, 2, 1, "", "BatchLogMeanExp"], [2, 2, 1, "", "ConstantBaseline"], [2, 2, 1, "", "ExponentialMovingAverage"], [2, 2, 1, "", "InterpolatedBaseline"], [2, 2, 1, "", "LearnableBaseline"], [2, 2, 1, "", "LearnableJointBaseline"], [2, 2, 1, "", "LearnableJointMLPBaseline"], [2, 2, 1, "", "LearnableMLPBaseline"]], "src.torch_mist.baselines.base.Baseline": [[2, 3, 1, "", "forward"]], "src.torch_mist.baselines.base.BatchLogMeanExp": [[2, 3, 1, "", "forward"]], "src.torch_mist.baselines.base.ConstantBaseline": [[2, 3, 1, "", "forward"]], "src.torch_mist.baselines.base.ExponentialMovingAverage": [[2, 3, 1, "", "forward"]], "src.torch_mist.baselines.base.InterpolatedBaseline": [[2, 3, 1, "", "forward"]], "src.torch_mist.baselines.base.LearnableBaseline": [[2, 3, 1, "", "forward"]], "src.torch_mist.baselines.base.LearnableJointBaseline": [[2, 3, 1, "", "forward"]], "src.torch_mist.distributions": [[6, 0, 0, "-", "conditional"], [7, 5, 1, "", "conditional_categorical"], [7, 5, 1, "", "conditional_mutivariate_categorical"], [9, 0, 0, "-", "joint"], [10, 0, 0, "-", "parametrizations"], [12, 0, 0, "-", "product"], [14, 0, 0, "-", "transforms"], [18, 0, 0, "-", "utils"]], "src.torch_mist.distributions.conditional": [[6, 2, 1, "", "ConditionalCategorical"], [6, 2, 1, "", "CorrelatedNormal"], [6, 2, 1, "", "CubicCorrelatedNormal"], [6, 2, 1, "", "SkewedCorrelatedNormal"], [4, 0, 0, "-", "categorical"], [5, 0, 0, "-", "correlated_normal"]], "src.torch_mist.distributions.conditional.ConditionalCategorical": [[6, 3, 1, "", "condition"]], "src.torch_mist.distributions.conditional.CorrelatedNormal": [[6, 3, 1, "", "condition"]], "src.torch_mist.distributions.conditional.CubicCorrelatedNormal": [[6, 3, 1, "", "condition"]], "src.torch_mist.distributions.conditional.SkewedCorrelatedNormal": [[6, 3, 1, "", "condition"]], "src.torch_mist.distributions.conditional.categorical": [[4, 2, 1, "", "ConditionalCategorical"]], "src.torch_mist.distributions.conditional.categorical.ConditionalCategorical": [[4, 3, 1, "", "condition"]], "src.torch_mist.distributions.conditional.correlated_normal": [[5, 2, 1, "", "CorrelatedNormal"], [5, 2, 1, "", "CubicCorrelatedNormal"], [5, 2, 1, "", "CubicPTransform"], [5, 2, 1, "", "RandomFlipTransform"], [5, 2, 1, "", "SkewedCorrelatedNormal"], [5, 2, 1, "", "Translate"]], "src.torch_mist.distributions.conditional.correlated_normal.CorrelatedNormal": [[5, 3, 1, "", "condition"]], "src.torch_mist.distributions.conditional.correlated_normal.CubicCorrelatedNormal": [[5, 3, 1, "", "condition"]], "src.torch_mist.distributions.conditional.correlated_normal.CubicPTransform": [[5, 3, 1, "", "_call"], [5, 3, 1, "", "_inverse"], [5, 4, 1, "id0", "bijective"], [5, 4, 1, "id2", "codomain"], [5, 4, 1, "id1", "domain"], [5, 3, 1, "", "log_abs_det_jacobian"], [5, 4, 1, "", "sign"]], "src.torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform": [[5, 3, 1, "", "_call"], [5, 4, 1, "id3", "bijective"], [5, 4, 1, "id5", "codomain"], [5, 4, 1, "id4", "domain"], [5, 4, 1, "", "sign"]], "src.torch_mist.distributions.conditional.correlated_normal.SkewedCorrelatedNormal": [[5, 3, 1, "", "condition"]], "src.torch_mist.distributions.conditional.correlated_normal.Translate": [[5, 3, 1, "", "_call"], [5, 3, 1, "", "_inverse"], [5, 4, 1, "id6", "bijective"], [5, 4, 1, "id8", "codomain"], [5, 4, 1, "id7", "domain"], [5, 3, 1, "", "log_abs_det_jacobian"], [5, 4, 1, "", "sign"]], "src.torch_mist.distributions.joint": [[8, 0, 0, "-", "base"]], "src.torch_mist.distributions.joint.base": [[8, 2, 1, "", "JointDistribution"]], "src.torch_mist.distributions.joint.base.JointDistribution": [[8, 3, 1, "", "entropy"], [8, 4, 1, "", "labels"], [8, 3, 1, "", "log_prob"], [8, 3, 1, "", "sample"]], "src.torch_mist.distributions.parametrizations": [[11, 0, 0, "-", "map"]], "src.torch_mist.distributions.parametrizations.map": [[11, 2, 1, "", "DeltaMap"], [11, 1, 1, "", "EPSILON"], [11, 2, 1, "", "LocScaleMap"], [11, 2, 1, "", "LogitsMap"], [11, 2, 1, "", "ParameterMap"], [11, 2, 1, "", "TemperatureLogitsMap"]], "src.torch_mist.distributions.parametrizations.map.DeltaMap": [[11, 3, 1, "", "map_parameters"], [11, 4, 1, "", "n_parameters"], [11, 4, 1, "", "supported_distributions"]], "src.torch_mist.distributions.parametrizations.map.LocScaleMap": [[11, 3, 1, "", "map_parameters"], [11, 4, 1, "", "supported_distributions"]], "src.torch_mist.distributions.parametrizations.map.LogitsMap": [[11, 3, 1, "", "map_parameters"], [11, 4, 1, "", "n_parameters"], [11, 4, 1, "", "supported_distributions"]], "src.torch_mist.distributions.parametrizations.map.ParameterMap": [[11, 3, 1, "", "__call__"], [11, 3, 1, "", "__repr__"], [11, 3, 1, "", "extra_repr"], [11, 3, 1, "", "map_parameters"], [11, 4, 1, "", "n_parameters"], [11, 4, 1, "", "supported_distributions"]], "src.torch_mist.distributions.parametrizations.map.TemperatureLogitsMap": [[11, 3, 1, "", "map_parameters"], [11, 4, 1, "", "n_parameters"], [11, 4, 1, "", "supported_distributions"]], "src.torch_mist.distributions.product": [[12, 2, 1, "", "ShuffledBatchDistribution"]], "src.torch_mist.distributions.product.ShuffledBatchDistribution": [[12, 3, 1, "", "rsample"], [12, 3, 1, "", "sample"]], "src.torch_mist.distributions.transforms": [[14, 2, 1, "", "ConditionalDistributionModule"], [14, 2, 1, "", "ConditionalLinear"], [14, 2, 1, "", "ConditionalTransformedDistributionModule"], [14, 2, 1, "", "DistributionModule"], [14, 2, 1, "", "Linear"], [14, 2, 1, "", "Permute"], [14, 2, 1, "", "SplitTransform"], [14, 2, 1, "", "TransformedDistributionModule"], [13, 0, 0, "-", "base"], [14, 5, 1, "", "conditional_linear"], [14, 5, 1, "", "conditional_skip_linear"], [15, 0, 0, "-", "linear"], [16, 0, 0, "-", "permute"], [17, 0, 0, "-", "split"]], "src.torch_mist.distributions.transforms.ConditionalLinear": [[14, 3, 1, "", "_params"], [14, 4, 1, "", "bijective"], [14, 4, 1, "", "codomain"], [14, 3, 1, "", "condition"], [14, 4, 1, "", "domain"]], "src.torch_mist.distributions.transforms.ConditionalTransformedDistributionModule": [[14, 3, 1, "", "clear_cache"], [14, 3, 1, "", "condition"]], "src.torch_mist.distributions.transforms.DistributionModule": [[14, 3, 1, "", "__repr__"]], "src.torch_mist.distributions.transforms.Linear": [[14, 3, 1, "", "_params"], [14, 4, 1, "", "bijective"], [14, 4, 1, "", "codomain"], [14, 4, 1, "", "domain"], [14, 4, 1, "", "sign"]], "src.torch_mist.distributions.transforms.Permute": [[14, 3, 1, "", "_call"], [14, 3, 1, "", "_inverse"], [14, 3, 1, "", "log_abs_det_jacobian"], [14, 3, 1, "", "update_device"]], "src.torch_mist.distributions.transforms.SplitTransform": [[14, 3, 1, "", "_call"], [14, 3, 1, "", "_inverse"], [14, 3, 1, "", "add_dims"], [14, 4, 1, "", "codomain"], [14, 3, 1, "", "dist"], [14, 4, 1, "", "domain"], [14, 3, 1, "", "log_abs_det_jacobian"], [14, 3, 1, "", "remove_dims"]], "src.torch_mist.distributions.transforms.TransformedDistributionModule": [[14, 3, 1, "", "__repr__"], [14, 3, 1, "", "log_prob"], [14, 3, 1, "", "rsample"]], "src.torch_mist.distributions.transforms.base": [[13, 2, 1, "", "ConditionalDistributionModule"], [13, 2, 1, "", "ConditionalTransformedDistributionModule"], [13, 2, 1, "", "DistributionModule"], [13, 2, 1, "", "TransformedDistributionModule"]], "src.torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule": [[13, 3, 1, "", "clear_cache"], [13, 3, 1, "", "condition"]], "src.torch_mist.distributions.transforms.base.DistributionModule": [[13, 3, 1, "", "__repr__"]], "src.torch_mist.distributions.transforms.base.TransformedDistributionModule": [[13, 3, 1, "", "__repr__"], [13, 3, 1, "", "log_prob"], [13, 3, 1, "", "rsample"]], "src.torch_mist.distributions.transforms.linear": [[15, 2, 1, "", "ConditionalLinear"], [15, 2, 1, "", "ConditionedLinear"], [15, 2, 1, "", "Linear"], [15, 5, 1, "", "conditional_linear"], [15, 5, 1, "", "conditional_skip_linear"], [15, 5, 1, "", "linear"]], "src.torch_mist.distributions.transforms.linear.ConditionalLinear": [[15, 3, 1, "", "_params"], [15, 4, 1, "", "bijective"], [15, 4, 1, "", "codomain"], [15, 3, 1, "", "condition"], [15, 4, 1, "", "domain"]], "src.torch_mist.distributions.transforms.linear.ConditionedLinear": [[15, 3, 1, "", "_call"], [15, 3, 1, "", "_inverse"], [15, 4, 1, "id2", "bijective"], [15, 4, 1, "id1", "codomain"], [15, 4, 1, "id0", "domain"], [15, 3, 1, "", "log_abs_det_jacobian"], [15, 4, 1, "", "sign"]], "src.torch_mist.distributions.transforms.linear.Linear": [[15, 3, 1, "", "_params"], [15, 4, 1, "", "bijective"], [15, 4, 1, "", "codomain"], [15, 4, 1, "", "domain"], [15, 4, 1, "", "sign"]], "src.torch_mist.distributions.transforms.permute": [[16, 2, 1, "", "Permute"], [16, 5, 1, "", "permute"]], "src.torch_mist.distributions.transforms.permute.Permute": [[16, 3, 1, "", "_call"], [16, 3, 1, "", "_inverse"], [16, 3, 1, "", "log_abs_det_jacobian"], [16, 3, 1, "", "update_device"]], "src.torch_mist.distributions.transforms.split": [[17, 2, 1, "", "SplitTransform"]], "src.torch_mist.distributions.transforms.split.SplitTransform": [[17, 3, 1, "", "_call"], [17, 3, 1, "", "_inverse"], [17, 3, 1, "", "add_dims"], [17, 4, 1, "", "codomain"], [17, 3, 1, "", "dist"], [17, 4, 1, "", "domain"], [17, 3, 1, "", "log_abs_det_jacobian"], [17, 3, 1, "", "remove_dims"]], "src.torch_mist.distributions.utils": [[18, 5, 1, "", "conditional_categorical"], [18, 5, 1, "", "conditional_mutivariate_categorical"]], "src.torch_mist.estimators": [[24, 2, 1, "", "AlphaTUBA"], [24, 2, 1, "", "BA"], [24, 2, 1, "", "DoE"], [24, 2, 1, "", "FLO"], [24, 2, 1, "", "GM"], [24, 2, 1, "", "HybridMutualInformationEstimator"], [24, 2, 1, "", "InfoNCE"], [24, 2, 1, "", "JS"], [24, 2, 1, "", "MINE"], [24, 2, 1, "", "MutualInformationEstimator"], [24, 2, 1, "", "NWJ"], [24, 2, 1, "", "SMILE"], [24, 2, 1, "", "TUBA"], [19, 0, 0, "-", "base"], [20, 0, 0, "-", "discriminative"], [21, 0, 0, "-", "generative"], [22, 0, 0, "-", "hybrid"], [23, 0, 0, "-", "implementations"], [25, 0, 0, "-", "log_partition"], [26, 0, 0, "-", "simclr"]], "src.torch_mist.estimators.BA": [[24, 3, 1, "", "compute_loss"], [24, 3, 1, "", "log_prob_y"]], "src.torch_mist.estimators.DoE": [[24, 3, 1, "", "__repr__"]], "src.torch_mist.estimators.FLO": [[24, 3, 1, "", "_compute_log_ratio"]], "src.torch_mist.estimators.GM": [[24, 3, 1, "", "__repr__"], [24, 3, 1, "", "compute_loss"], [24, 3, 1, "", "log_prob_x"], [24, 3, 1, "", "log_prob_y"], [24, 3, 1, "", "log_prob_y_x"]], "src.torch_mist.estimators.HybridMutualInformationEstimator": [[24, 3, 1, "", "log_ratio"]], "src.torch_mist.estimators.InfoNCE": [[24, 3, 1, "", "_compute_log_ratio"]], "src.torch_mist.estimators.JS": [[24, 3, 1, "", "_compute_log_ratio_grad"]], "src.torch_mist.estimators.MutualInformationEstimator": [[24, 3, 1, "", "forward"], [24, 4, 1, "", "lower_bound"], [24, 4, 1, "", "upper_bound"]], "src.torch_mist.estimators.NWJ": [[24, 3, 1, "", "_compute_log_ratio"]], "src.torch_mist.estimators.SMILE": [[24, 3, 1, "", "_compute_log_ratio"], [24, 3, 1, "", "_compute_log_ratio_grad"]], "src.torch_mist.estimators.TUBA": [[24, 3, 1, "", "_compute_log_ratio"], [24, 3, 1, "", "_compute_log_ratio_grad"]], "src.torch_mist.estimators.base": [[19, 2, 1, "", "Estimation"], [19, 2, 1, "", "LogRatioEstimator"], [19, 2, 1, "", "MutualInformationEstimator"]], "src.torch_mist.estimators.base.Estimation": [[19, 3, 1, "", "__add__"], [19, 3, 1, "", "__sub__"], [19, 3, 1, "", "apply"], [19, 4, 1, "", "loss"], [19, 6, 1, "", "shape"], [19, 4, 1, "", "value"]], "src.torch_mist.estimators.base.LogRatioEstimator": [[19, 3, 1, "", "forward"], [19, 3, 1, "", "log_ratio"]], "src.torch_mist.estimators.base.MutualInformationEstimator": [[19, 3, 1, "", "forward"], [19, 4, 1, "", "lower_bound"], [19, 4, 1, "", "upper_bound"]], "src.torch_mist.estimators.discriminative": [[20, 2, 1, "", "AlphaTUBA"], [20, 2, 1, "", "DiscriminativeMutualInformationEstimator"], [20, 2, 1, "", "EmpiricalDistribution"], [20, 2, 1, "", "FLO"], [20, 2, 1, "", "InfoNCE"], [20, 2, 1, "", "JS"], [20, 2, 1, "", "MINE"], [20, 2, 1, "", "NWJ"], [20, 2, 1, "", "SMILE"], [20, 2, 1, "", "TUBA"]], "src.torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator": [[20, 3, 1, "", "__repr__"], [20, 3, 1, "", "_compute_log_ratio"], [20, 3, 1, "", "_compute_log_ratio_grad"], [20, 3, 1, "", "log_ratio"], [20, 4, 1, "", "lower_bound"], [20, 4, 1, "", "proposal"], [20, 3, 1, "", "sample_proposal"], [20, 4, 1, "", "upper_bound"]], "src.torch_mist.estimators.discriminative.EmpiricalDistribution": [[20, 3, 1, "", "sample_n"]], "src.torch_mist.estimators.discriminative.FLO": [[20, 3, 1, "", "_compute_log_ratio"]], "src.torch_mist.estimators.discriminative.InfoNCE": [[20, 3, 1, "", "_compute_log_ratio"]], "src.torch_mist.estimators.discriminative.JS": [[20, 3, 1, "", "_compute_log_ratio_grad"]], "src.torch_mist.estimators.discriminative.NWJ": [[20, 3, 1, "", "_compute_log_ratio"]], "src.torch_mist.estimators.discriminative.SMILE": [[20, 3, 1, "", "_compute_log_ratio"], [20, 3, 1, "", "_compute_log_ratio_grad"]], "src.torch_mist.estimators.discriminative.TUBA": [[20, 3, 1, "", "_compute_log_ratio"], [20, 3, 1, "", "_compute_log_ratio_grad"]], "src.torch_mist.estimators.generative": [[21, 2, 1, "", "BA"], [21, 2, 1, "", "CLUB"], [21, 2, 1, "", "DoE"], [21, 2, 1, "", "GM"], [21, 2, 1, "", "GenerativeMutualInformationEstimator"], [21, 2, 1, "", "L1Out"], [21, 2, 1, "", "PQ"], [21, 2, 1, "", "VariationalProposalMutualInformationEstimator"]], "src.torch_mist.estimators.generative.BA": [[21, 3, 1, "", "compute_loss"], [21, 3, 1, "", "log_prob_y"]], "src.torch_mist.estimators.generative.CLUB": [[21, 3, 1, "", "log_prob_y"]], "src.torch_mist.estimators.generative.DoE": [[21, 3, 1, "", "__repr__"]], "src.torch_mist.estimators.generative.GM": [[21, 3, 1, "", "__repr__"], [21, 3, 1, "", "compute_loss"], [21, 3, 1, "", "log_prob_x"], [21, 3, 1, "", "log_prob_y"], [21, 3, 1, "", "log_prob_y_x"]], "src.torch_mist.estimators.generative.GenerativeMutualInformationEstimator": [[21, 3, 1, "", "compute_loss"], [21, 3, 1, "", "log_prob_y"], [21, 3, 1, "", "log_prob_y_x"], [21, 3, 1, "", "log_ratio"]], "src.torch_mist.estimators.generative.L1Out": [[21, 3, 1, "", "log_prob_y"]], "src.torch_mist.estimators.generative.PQ": [[21, 3, 1, "", "__repr__"], [21, 3, 1, "", "expected_log_ratio"], [21, 3, 1, "", "log_prob_y"]], "src.torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator": [[21, 3, 1, "", "__repr__"], [21, 3, 1, "", "compute_loss"], [21, 3, 1, "", "log_prob_y_x"]], "src.torch_mist.estimators.hybrid": [[22, 2, 1, "", "HybridMutualInformationEstimator"]], "src.torch_mist.estimators.hybrid.HybridMutualInformationEstimator": [[22, 3, 1, "", "log_ratio"]], "src.torch_mist.estimators.implementations": [[23, 2, 1, "", "AlphaTuba"], [23, 2, 1, "", "BA"], [23, 2, 1, "", "DoE"], [23, 2, 1, "", "InfoNCE"], [23, 2, 1, "", "JS"], [23, 2, 1, "", "MINE"], [23, 2, 1, "", "NWJ"], [23, 2, 1, "", "SMILE"], [23, 2, 1, "", "TUBA"]], "src.torch_mist.estimators.log_partition": [[25, 2, 1, "", "LogPartition"], [25, 2, 1, "", "NormalizedLogPartition"], [25, 2, 1, "", "UnnormalizedLogPartition"]], "src.torch_mist.estimators.log_partition.LogPartition": [[25, 3, 1, "", "__call__"]], "src.torch_mist.estimators.log_partition.NormalizedLogPartition": [[25, 3, 1, "", "__call__"]], "src.torch_mist.estimators.log_partition.UnnormalizedLogPartition": [[25, 3, 1, "", "sample_proposal"]], "src.torch_mist.estimators.simclr": [[26, 2, 1, "", "Projection"], [26, 2, 1, "", "SimCLR"]], "src.torch_mist.estimators.simclr.Projection": [[26, 3, 1, "", "forward"]], "src.torch_mist.estimators.simclr.SimCLR": [[26, 3, 1, "", "compute_dual_ratio"]], "src.torch_mist.models": [[28, 0, 0, "-", "encoder"], [34, 0, 0, "-", "learnable_distributions"]], "src.torch_mist.models.encoder": [[28, 2, 1, "", "EncoderKeywords"], [28, 2, 1, "", "EncoderMLP"], [28, 2, 1, "", "SlowlyUpdatingModel"], [29, 0, 0, "-", "mlp"], [30, 0, 0, "-", "slow_updates"], [31, 0, 0, "-", "types"]], "src.torch_mist.models.encoder.EncoderKeywords": [[28, 4, 1, "", "same"], [28, 4, 1, "", "slow"]], "src.torch_mist.models.encoder.SlowlyUpdatingModel": [[28, 3, 1, "", "_update_weights"], [28, 6, 1, "", "current_model"], [28, 3, 1, "", "forward"]], "src.torch_mist.models.encoder.mlp": [[29, 2, 1, "", "EncoderMLP"]], "src.torch_mist.models.encoder.slow_updates": [[30, 2, 1, "", "SlowlyUpdatingModel"]], "src.torch_mist.models.encoder.slow_updates.SlowlyUpdatingModel": [[30, 3, 1, "", "_update_weights"], [30, 6, 1, "", "current_model"], [30, 3, 1, "", "forward"]], "src.torch_mist.models.encoder.types": [[31, 2, 1, "", "EncoderKeywords"]], "src.torch_mist.models.encoder.types.EncoderKeywords": [[31, 4, 1, "", "same"], [31, 4, 1, "", "slow"]], "src.torch_mist.models.learnable_distributions": [[34, 2, 1, "", "ConditionalCategoricalLinear"], [34, 2, 1, "", "ConditionalCategoricalMLP"], [34, 2, 1, "", "ConditionalFlowTransformedNormal"], [34, 2, 1, "", "FlowTransformedJointNormal"], [34, 2, 1, "", "FlowTransformedNormal"], [34, 2, 1, "", "LearnableCategorical"], [33, 0, 0, "-", "categorical"], [35, 0, 0, "-", "transformed_normal"]], "src.torch_mist.models.learnable_distributions.ConditionalCategoricalLinear": [[34, 3, 1, "", "condition"]], "src.torch_mist.models.learnable_distributions.FlowTransformedJointNormal": [[34, 6, 1, "", "dist"], [34, 4, 1, "", "labels"], [34, 3, 1, "", "log_prob"], [34, 3, 1, "", "rsample"], [34, 3, 1, "", "sample"]], "src.torch_mist.models.learnable_distributions.FlowTransformedNormal": [[34, 6, 1, "", "dist"], [34, 3, 1, "", "log_prob"], [34, 3, 1, "", "rsample"], [34, 3, 1, "", "sample"]], "src.torch_mist.models.learnable_distributions.LearnableCategorical": [[34, 3, 1, "", "__repr__"], [34, 3, 1, "", "log_prob"], [34, 3, 1, "", "rsample"], [34, 3, 1, "", "sample"]], "src.torch_mist.models.learnable_distributions.categorical": [[33, 2, 1, "", "ConditionalCategoricalLinear"], [33, 2, 1, "", "ConditionalCategoricalMLP"], [33, 2, 1, "", "LearnableCategorical"]], "src.torch_mist.models.learnable_distributions.categorical.ConditionalCategoricalLinear": [[33, 3, 1, "", "condition"]], "src.torch_mist.models.learnable_distributions.categorical.LearnableCategorical": [[33, 3, 1, "", "__repr__"], [33, 3, 1, "", "log_prob"], [33, 3, 1, "", "rsample"], [33, 3, 1, "", "sample"]], "src.torch_mist.models.learnable_distributions.transformed_normal": [[35, 2, 1, "", "ConditionalFlowTransformedNormal"], [35, 2, 1, "", "FlowTransformedJointNormal"], [35, 2, 1, "", "FlowTransformedNormal"], [35, 5, 1, "", "fetch_transform"]], "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedJointNormal": [[35, 6, 1, "", "dist"], [35, 4, 1, "", "labels"], [35, 3, 1, "", "log_prob"], [35, 3, 1, "", "rsample"], [35, 3, 1, "", "sample"]], "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedNormal": [[35, 6, 1, "", "dist"], [35, 3, 1, "", "log_prob"], [35, 3, 1, "", "rsample"], [35, 3, 1, "", "sample"]], "src.torch_mist.nn": [[36, 2, 1, "", "JointDenseNN"], [37, 0, 0, "-", "utils"]], "src.torch_mist.nn.JointDenseNN": [[36, 3, 1, "", "forward"]], "src.torch_mist.nn.utils": [[37, 2, 1, "", "Constant"], [37, 2, 1, "", "Identity"], [37, 2, 1, "", "JointDenseNN"], [37, 2, 1, "", "MergeOutputs"], [37, 2, 1, "", "SkipDenseNN"]], "src.torch_mist.nn.utils.Constant": [[37, 3, 1, "", "__repr__"], [37, 3, 1, "", "forward"]], "src.torch_mist.nn.utils.Identity": [[37, 3, 1, "", "forward"]], "src.torch_mist.nn.utils.JointDenseNN": [[37, 3, 1, "", "forward"]], "src.torch_mist.nn.utils.MergeOutputs": [[37, 3, 1, "", "forward"]], "src.torch_mist.nn.utils.SkipDenseNN": [[37, 3, 1, "", "forward"]], "src.torch_mist.optim": [[39, 0, 0, "-", "lr_scheduler"]], "src.torch_mist.optim.lr_scheduler": [[39, 2, 1, "", "WarmupScheduler"]], "src.torch_mist.quantization": [[40, 2, 1, "", "QuantizationFunction"]], "src.torch_mist.quantization.QuantizationFunction": [[40, 3, 1, "", "forward"], [40, 6, 1, "", "num_bins"]], "src.torch_mist.ratio": [[43, 2, 1, "", "JointRatioEstimatorMLP"], [43, 2, 1, "", "JointUnnormalizedRatioEstimator"], [43, 2, 1, "", "SeparableRatioEstimatorMLP"], [43, 2, 1, "", "SeparableUnnormalizedRatioEstimator"], [43, 2, 1, "", "UnnormalizedRatioEstimator"], [41, 0, 0, "-", "base"], [42, 0, 0, "-", "conditional_dist"], [44, 0, 0, "-", "joint"], [45, 0, 0, "-", "separable"]], "src.torch_mist.ratio.JointUnnormalizedRatioEstimator": [[43, 3, 1, "", "forward"]], "src.torch_mist.ratio.SeparableUnnormalizedRatioEstimator": [[43, 3, 1, "", "forward"]], "src.torch_mist.ratio.UnnormalizedRatioEstimator": [[43, 3, 1, "", "forward"]], "src.torch_mist.ratio.base": [[41, 2, 1, "", "UnnormalizedRatioEstimator"]], "src.torch_mist.ratio.base.UnnormalizedRatioEstimator": [[41, 3, 1, "", "forward"]], "src.torch_mist.ratio.conditional_dist": [[42, 2, 1, "", "ConditionalDistributionRatio"]], "src.torch_mist.ratio.conditional_dist.ConditionalDistributionRatio": [[42, 3, 1, "", "forward"]], "src.torch_mist.ratio.joint": [[44, 2, 1, "", "JointRatioEstimatorMLP"], [44, 2, 1, "", "JointUnnormalizedRatioEstimator"]], "src.torch_mist.ratio.joint.JointUnnormalizedRatioEstimator": [[44, 3, 1, "", "forward"]], "src.torch_mist.ratio.separable": [[45, 2, 1, "", "SeparableRatioEstimatorMLP"], [45, 2, 1, "", "SeparableUnnormalizedRatioEstimator"]], "src.torch_mist.ratio.separable.SeparableUnnormalizedRatioEstimator": [[45, 3, 1, "", "forward"]], "src.torch_mist.task": [[46, 2, 1, "", "InfoMax"], [47, 0, 0, "-", "infomax"]], "src.torch_mist.task.InfoMax": [[46, 3, 1, "", "__repr__"], [46, 3, 1, "", "configure_optimizers"], [46, 3, 1, "", "forward"], [46, 3, 1, "", "log_components"], [46, 3, 1, "", "shared_step"], [46, 3, 1, "", "test_step"], [46, 3, 1, "", "training_step"], [46, 3, 1, "", "validation_step"]], "src.torch_mist.task.infomax": [[47, 2, 1, "", "InfoMax"]], "src.torch_mist.task.infomax.InfoMax": [[47, 3, 1, "", "__repr__"], [47, 3, 1, "", "configure_optimizers"], [47, 3, 1, "", "forward"], [47, 3, 1, "", "log_components"], [47, 3, 1, "", "shared_step"], [47, 3, 1, "", "test_step"], [47, 3, 1, "", "training_step"], [47, 3, 1, "", "validation_step"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "refer": 0, "src": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "subpackag": [1, 7, 27, 32], "torch_mist": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52], "baselin": [2, 3], "base": [2, 8, 13, 19, 41], "modul": [2, 4, 5, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 33, 35, 37, 39, 40, 41, 42, 44, 45, 47], "content": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "class": [2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "submodul": [3, 6, 7, 9, 10, 14, 24, 27, 28, 34, 36, 38, 43, 46], "packag": [3, 6, 7, 14, 24, 27, 28, 34, 36, 43, 46], "distribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "condit": [4, 5, 6], "categor": [4, 33], "correlated_norm": 5, "function": [7, 14, 15, 16, 18, 35], "joint": [8, 9, 44], "parametr": [10, 11], "map": 11, "attribut": [11, 49], "product": 12, "transform": [13, 14, 15, 16, 17], "linear": 15, "permut": 16, "split": 17, "util": [18, 37], "estim": [19, 20, 21, 22, 23, 24, 25, 26], "discrimin": 20, "gener": 21, "hybrid": 22, "implement": [23, 50], "log_partit": 25, "simclr": 26, "model": [28, 29, 30, 31, 32, 33, 34, 35], "encod": [28, 29, 30, 31], "mlp": 29, "slow_upd": 30, "type": [31, 50], "learnable_distribut": [33, 34, 35], "transformed_norm": 35, "nn": [36, 37], "optim": [38, 39], "lr_schedul": 39, "quantiz": 40, "ratio": [41, 42, 43, 44, 45], "conditional_dist": 42, "separ": 45, "task": [46, 47], "infomax": 47, "changelog": 48, "v0": 48, "1": 48, "0": 48, "20": 48, "06": 48, "2023": 48, "code": [49, 50], "conduct": [49, 50], "our": 49, "pledg": 49, "standard": 49, "respons": 49, "scope": 49, "enforc": 49, "contribut": [50, 52], "report": 50, "bug": 50, "fix": 50, "featur": 50, "write": 50, "document": 50, "submit": 50, "feedback": 50, "get": 50, "start": 50, "pull": 50, "request": 50, "guidelin": 50, "exampl": 51, "usag": [51, 52], "instal": 52, "licens": 52, "credit": 52}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "src": [[1, "module-src"]], "Subpackages": [[1, "subpackages"], [7, "subpackages"], [27, "subpackages"], [32, "subpackages"]], "src.torch_mist.baselines.base": [[2, "module-src.torch_mist.baselines.base"]], "Module Contents": [[2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [8, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [25, "module-contents"], [26, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [33, "module-contents"], [35, "module-contents"], [37, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [44, "module-contents"], [45, "module-contents"], [47, "module-contents"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [8, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"]], "src.torch_mist.baselines": [[3, "module-src.torch_mist.baselines"]], "Submodules": [[3, "submodules"], [6, "submodules"], [7, "submodules"], [9, "submodules"], [10, "submodules"], [14, "submodules"], [24, "submodules"], [27, "submodules"], [28, "submodules"], [34, "submodules"], [36, "submodules"], [38, "submodules"], [43, "submodules"], [46, "submodules"]], "Package Contents": [[3, "package-contents"], [6, "package-contents"], [7, "package-contents"], [14, "package-contents"], [24, "package-contents"], [27, "package-contents"], [28, "package-contents"], [34, "package-contents"], [36, "package-contents"], [43, "package-contents"], [46, "package-contents"]], "src.torch_mist.distributions.conditional.categorical": [[4, "module-src.torch_mist.distributions.conditional.categorical"]], "src.torch_mist.distributions.conditional.correlated_normal": [[5, "module-src.torch_mist.distributions.conditional.correlated_normal"]], "src.torch_mist.distributions.conditional": [[6, "module-src.torch_mist.distributions.conditional"]], "src.torch_mist.distributions": [[7, "module-src.torch_mist.distributions"]], "Functions": [[7, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [18, "functions"], [35, "functions"]], "src.torch_mist.distributions.joint.base": [[8, "module-src.torch_mist.distributions.joint.base"]], "src.torch_mist.distributions.joint": [[9, "module-src.torch_mist.distributions.joint"]], "src.torch_mist.distributions.parametrizations": [[10, "module-src.torch_mist.distributions.parametrizations"]], "src.torch_mist.distributions.parametrizations.map": [[11, "module-src.torch_mist.distributions.parametrizations.map"]], "Attributes": [[11, "attributes"]], "src.torch_mist.distributions.product": [[12, "module-src.torch_mist.distributions.product"]], "src.torch_mist.distributions.transforms.base": [[13, "module-src.torch_mist.distributions.transforms.base"]], "src.torch_mist.distributions.transforms": [[14, "module-src.torch_mist.distributions.transforms"]], "src.torch_mist.distributions.transforms.linear": [[15, "module-src.torch_mist.distributions.transforms.linear"]], "src.torch_mist.distributions.transforms.permute": [[16, "module-src.torch_mist.distributions.transforms.permute"]], "src.torch_mist.distributions.transforms.split": [[17, "module-src.torch_mist.distributions.transforms.split"]], "src.torch_mist.distributions.utils": [[18, "module-src.torch_mist.distributions.utils"]], "src.torch_mist.estimators.base": [[19, "module-src.torch_mist.estimators.base"]], "src.torch_mist.estimators.discriminative": [[20, "module-src.torch_mist.estimators.discriminative"]], "src.torch_mist.estimators.generative": [[21, "module-src.torch_mist.estimators.generative"]], "src.torch_mist.estimators.hybrid": [[22, "module-src.torch_mist.estimators.hybrid"]], "src.torch_mist.estimators.implementations": [[23, "module-src.torch_mist.estimators.implementations"]], "src.torch_mist.estimators": [[24, "module-src.torch_mist.estimators"]], "src.torch_mist.estimators.log_partition": [[25, "module-src.torch_mist.estimators.log_partition"]], "src.torch_mist.estimators.simclr": [[26, "module-src.torch_mist.estimators.simclr"]], "src.torch_mist": [[27, "module-src.torch_mist"]], "src.torch_mist.models.encoder": [[28, "module-src.torch_mist.models.encoder"]], "src.torch_mist.models.encoder.mlp": [[29, "module-src.torch_mist.models.encoder.mlp"]], "src.torch_mist.models.encoder.slow_updates": [[30, "module-src.torch_mist.models.encoder.slow_updates"]], "src.torch_mist.models.encoder.types": [[31, "module-src.torch_mist.models.encoder.types"]], "src.torch_mist.models": [[32, "module-src.torch_mist.models"]], "src.torch_mist.models.learnable_distributions.categorical": [[33, "module-src.torch_mist.models.learnable_distributions.categorical"]], "src.torch_mist.models.learnable_distributions": [[34, "module-src.torch_mist.models.learnable_distributions"]], "src.torch_mist.models.learnable_distributions.transformed_normal": [[35, "module-src.torch_mist.models.learnable_distributions.transformed_normal"]], "src.torch_mist.nn": [[36, "module-src.torch_mist.nn"]], "src.torch_mist.nn.utils": [[37, "module-src.torch_mist.nn.utils"]], "src.torch_mist.optim": [[38, "module-src.torch_mist.optim"]], "src.torch_mist.optim.lr_scheduler": [[39, "module-src.torch_mist.optim.lr_scheduler"]], "src.torch_mist.quantization": [[40, "module-src.torch_mist.quantization"]], "src.torch_mist.ratio.base": [[41, "module-src.torch_mist.ratio.base"]], "src.torch_mist.ratio.conditional_dist": [[42, "module-src.torch_mist.ratio.conditional_dist"]], "src.torch_mist.ratio": [[43, "module-src.torch_mist.ratio"]], "src.torch_mist.ratio.joint": [[44, "module-src.torch_mist.ratio.joint"]], "src.torch_mist.ratio.separable": [[45, "module-src.torch_mist.ratio.separable"]], "src.torch_mist.task": [[46, "module-src.torch_mist.task"]], "src.torch_mist.task.infomax": [[47, "module-src.torch_mist.task.infomax"]], "Changelog": [[48, "changelog"]], "v0.1.0 (20/06/2023)": [[48, "v0-1-0-20-06-2023"]], "Code of Conduct": [[49, "code-of-conduct"], [50, "code-of-conduct"]], "Our Pledge": [[49, "our-pledge"]], "Our Standards": [[49, "our-standards"]], "Our Responsibilities": [[49, "our-responsibilities"]], "Scope": [[49, "scope"]], "Enforcement": [[49, "enforcement"]], "Attribution": [[49, "attribution"]], "Contributing": [[50, "contributing"], [52, "contributing"]], "Types of Contributions": [[50, "types-of-contributions"]], "Report Bugs": [[50, "report-bugs"]], "Fix Bugs": [[50, "fix-bugs"]], "Implement Features": [[50, "implement-features"]], "Write Documentation": [[50, "write-documentation"]], "Submit Feedback": [[50, "submit-feedback"]], "Get Started!": [[50, "get-started"]], "Pull Request Guidelines": [[50, "pull-request-guidelines"]], "Example usage": [[51, "example-usage"]], "torch_mist": [[52, "torch-mist"]], "Installation": [[52, "installation"]], "Usage": [[52, "usage"]], "License": [[52, "license"]], "Credits": [[52, "credits"]]}, "indexentries": {"module": [[1, "module-src"], [2, "module-src.torch_mist.baselines.base"], [3, "module-src.torch_mist.baselines"], [4, "module-src.torch_mist.distributions.conditional.categorical"], [5, "module-src.torch_mist.distributions.conditional.correlated_normal"], [6, "module-src.torch_mist.distributions.conditional"], [7, "module-src.torch_mist.distributions"], [8, "module-src.torch_mist.distributions.joint.base"], [9, "module-src.torch_mist.distributions.joint"], [10, "module-src.torch_mist.distributions.parametrizations"], [11, "module-src.torch_mist.distributions.parametrizations.map"], [12, "module-src.torch_mist.distributions.product"], [13, "module-src.torch_mist.distributions.transforms.base"], [14, "module-src.torch_mist.distributions.transforms"], [15, "module-src.torch_mist.distributions.transforms.linear"], [16, "module-src.torch_mist.distributions.transforms.permute"], [17, "module-src.torch_mist.distributions.transforms.split"], [18, "module-src.torch_mist.distributions.utils"], [19, "module-src.torch_mist.estimators.base"], [20, "module-src.torch_mist.estimators.discriminative"], [21, "module-src.torch_mist.estimators.generative"], [22, "module-src.torch_mist.estimators.hybrid"], [23, "module-src.torch_mist.estimators.implementations"], [24, "module-src.torch_mist.estimators"], [25, "module-src.torch_mist.estimators.log_partition"], [26, "module-src.torch_mist.estimators.simclr"], [27, "module-src.torch_mist"], [28, "module-src.torch_mist.models.encoder"], [29, "module-src.torch_mist.models.encoder.mlp"], [30, "module-src.torch_mist.models.encoder.slow_updates"], [31, "module-src.torch_mist.models.encoder.types"], [32, "module-src.torch_mist.models"], [33, "module-src.torch_mist.models.learnable_distributions.categorical"], [34, "module-src.torch_mist.models.learnable_distributions"], [35, "module-src.torch_mist.models.learnable_distributions.transformed_normal"], [36, "module-src.torch_mist.nn"], [37, "module-src.torch_mist.nn.utils"], [38, "module-src.torch_mist.optim"], [39, "module-src.torch_mist.optim.lr_scheduler"], [40, "module-src.torch_mist.quantization"], [41, "module-src.torch_mist.ratio.base"], [42, "module-src.torch_mist.ratio.conditional_dist"], [43, "module-src.torch_mist.ratio"], [44, "module-src.torch_mist.ratio.joint"], [45, "module-src.torch_mist.ratio.separable"], [46, "module-src.torch_mist.task"], [47, "module-src.torch_mist.task.infomax"]], "src": [[1, "module-src"]], "alphatubabaseline (class in src.torch_mist.baselines.base)": [[2, "src.torch_mist.baselines.base.AlphaTUBABaseline"]], "baseline (class in src.torch_mist.baselines.base)": [[2, "src.torch_mist.baselines.base.Baseline"]], "batchlogmeanexp (class in src.torch_mist.baselines.base)": [[2, "src.torch_mist.baselines.base.BatchLogMeanExp"]], "constantbaseline (class in src.torch_mist.baselines.base)": [[2, "src.torch_mist.baselines.base.ConstantBaseline"]], "exponentialmovingaverage (class in src.torch_mist.baselines.base)": [[2, "src.torch_mist.baselines.base.ExponentialMovingAverage"]], "interpolatedbaseline (class in src.torch_mist.baselines.base)": [[2, "src.torch_mist.baselines.base.InterpolatedBaseline"]], "learnablebaseline (class in src.torch_mist.baselines.base)": [[2, "src.torch_mist.baselines.base.LearnableBaseline"]], "learnablejointbaseline (class in src.torch_mist.baselines.base)": [[2, "src.torch_mist.baselines.base.LearnableJointBaseline"]], "learnablejointmlpbaseline (class in src.torch_mist.baselines.base)": [[2, "src.torch_mist.baselines.base.LearnableJointMLPBaseline"]], "learnablemlpbaseline (class in src.torch_mist.baselines.base)": [[2, "src.torch_mist.baselines.base.LearnableMLPBaseline"]], "forward() (src.torch_mist.baselines.base.baseline method)": [[2, "src.torch_mist.baselines.base.Baseline.forward"]], "forward() (src.torch_mist.baselines.base.batchlogmeanexp method)": [[2, "src.torch_mist.baselines.base.BatchLogMeanExp.forward"]], "forward() (src.torch_mist.baselines.base.constantbaseline method)": [[2, "src.torch_mist.baselines.base.ConstantBaseline.forward"]], "forward() (src.torch_mist.baselines.base.exponentialmovingaverage method)": [[2, "src.torch_mist.baselines.base.ExponentialMovingAverage.forward"]], "forward() (src.torch_mist.baselines.base.interpolatedbaseline method)": [[2, "src.torch_mist.baselines.base.InterpolatedBaseline.forward"]], "forward() (src.torch_mist.baselines.base.learnablebaseline method)": [[2, "src.torch_mist.baselines.base.LearnableBaseline.forward"]], "forward() (src.torch_mist.baselines.base.learnablejointbaseline method)": [[2, "src.torch_mist.baselines.base.LearnableJointBaseline.forward"]], "src.torch_mist.baselines.base": [[2, "module-src.torch_mist.baselines.base"]], "baseline (class in src.torch_mist.baselines)": [[3, "src.torch_mist.baselines.Baseline"]], "batchlogmeanexp (class in src.torch_mist.baselines)": [[3, "src.torch_mist.baselines.BatchLogMeanExp"]], "constantbaseline (class in src.torch_mist.baselines)": [[3, "src.torch_mist.baselines.ConstantBaseline"]], "exponentialmovingaverage (class in src.torch_mist.baselines)": [[3, "src.torch_mist.baselines.ExponentialMovingAverage"]], "interpolatedbaseline (class in src.torch_mist.baselines)": [[3, "src.torch_mist.baselines.InterpolatedBaseline"]], "learnablebaseline (class in src.torch_mist.baselines)": [[3, "src.torch_mist.baselines.LearnableBaseline"]], "learnablejointbaseline (class in src.torch_mist.baselines)": [[3, "src.torch_mist.baselines.LearnableJointBaseline"]], "learnablejointmlpbaseline (class in src.torch_mist.baselines)": [[3, "src.torch_mist.baselines.LearnableJointMLPBaseline"]], "learnablemlpbaseline (class in src.torch_mist.baselines)": [[3, "src.torch_mist.baselines.LearnableMLPBaseline"]], "forward() (src.torch_mist.baselines.baseline method)": [[3, "src.torch_mist.baselines.Baseline.forward"]], "forward() (src.torch_mist.baselines.batchlogmeanexp method)": [[3, "src.torch_mist.baselines.BatchLogMeanExp.forward"]], "forward() (src.torch_mist.baselines.constantbaseline method)": [[3, "src.torch_mist.baselines.ConstantBaseline.forward"]], "forward() (src.torch_mist.baselines.exponentialmovingaverage method)": [[3, "src.torch_mist.baselines.ExponentialMovingAverage.forward"]], "forward() (src.torch_mist.baselines.interpolatedbaseline method)": [[3, "src.torch_mist.baselines.InterpolatedBaseline.forward"]], "forward() (src.torch_mist.baselines.learnablebaseline method)": [[3, "src.torch_mist.baselines.LearnableBaseline.forward"]], "forward() (src.torch_mist.baselines.learnablejointbaseline method)": [[3, "src.torch_mist.baselines.LearnableJointBaseline.forward"]], "src.torch_mist.baselines": [[3, "module-src.torch_mist.baselines"]], "conditionalcategorical (class in src.torch_mist.distributions.conditional.categorical)": [[4, "src.torch_mist.distributions.conditional.categorical.ConditionalCategorical"]], "condition() (src.torch_mist.distributions.conditional.categorical.conditionalcategorical method)": [[4, "src.torch_mist.distributions.conditional.categorical.ConditionalCategorical.condition"]], "src.torch_mist.distributions.conditional.categorical": [[4, "module-src.torch_mist.distributions.conditional.categorical"]], "correlatednormal (class in src.torch_mist.distributions.conditional.correlated_normal)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.CorrelatedNormal"]], "cubiccorrelatednormal (class in src.torch_mist.distributions.conditional.correlated_normal)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.CubicCorrelatedNormal"]], "cubicptransform (class in src.torch_mist.distributions.conditional.correlated_normal)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.CubicPTransform"]], "randomfliptransform (class in src.torch_mist.distributions.conditional.correlated_normal)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform"]], "skewedcorrelatednormal (class in src.torch_mist.distributions.conditional.correlated_normal)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.SkewedCorrelatedNormal"]], "translate (class in src.torch_mist.distributions.conditional.correlated_normal)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.Translate"]], "_call() (src.torch_mist.distributions.conditional.correlated_normal.cubicptransform method)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.CubicPTransform._call"]], "_call() (src.torch_mist.distributions.conditional.correlated_normal.randomfliptransform method)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform._call"]], "_call() (src.torch_mist.distributions.conditional.correlated_normal.translate method)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.Translate._call"]], "_inverse() (src.torch_mist.distributions.conditional.correlated_normal.cubicptransform method)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.CubicPTransform._inverse"]], "_inverse() (src.torch_mist.distributions.conditional.correlated_normal.translate method)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.Translate._inverse"]], "bijective (src.torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[5, "id0"], [5, "src.torch_mist.distributions.conditional.correlated_normal.CubicPTransform.bijective"]], "bijective (src.torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[5, "id3"], [5, "src.torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.bijective"]], "bijective (src.torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[5, "id6"], [5, "src.torch_mist.distributions.conditional.correlated_normal.Translate.bijective"]], "codomain (src.torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[5, "id2"], [5, "src.torch_mist.distributions.conditional.correlated_normal.CubicPTransform.codomain"]], "codomain (src.torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[5, "id5"], [5, "src.torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.codomain"]], "codomain (src.torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[5, "id8"], [5, "src.torch_mist.distributions.conditional.correlated_normal.Translate.codomain"]], "condition() (src.torch_mist.distributions.conditional.correlated_normal.correlatednormal method)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.CorrelatedNormal.condition"]], "condition() (src.torch_mist.distributions.conditional.correlated_normal.cubiccorrelatednormal method)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.CubicCorrelatedNormal.condition"]], "condition() (src.torch_mist.distributions.conditional.correlated_normal.skewedcorrelatednormal method)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.SkewedCorrelatedNormal.condition"]], "domain (src.torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[5, "id1"], [5, "src.torch_mist.distributions.conditional.correlated_normal.CubicPTransform.domain"]], "domain (src.torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[5, "id4"], [5, "src.torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.domain"]], "domain (src.torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[5, "id7"], [5, "src.torch_mist.distributions.conditional.correlated_normal.Translate.domain"]], "log_abs_det_jacobian() (src.torch_mist.distributions.conditional.correlated_normal.cubicptransform method)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.CubicPTransform.log_abs_det_jacobian"]], "log_abs_det_jacobian() (src.torch_mist.distributions.conditional.correlated_normal.translate method)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.Translate.log_abs_det_jacobian"]], "sign (src.torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.CubicPTransform.sign"]], "sign (src.torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.sign"]], "sign (src.torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[5, "src.torch_mist.distributions.conditional.correlated_normal.Translate.sign"]], "src.torch_mist.distributions.conditional.correlated_normal": [[5, "module-src.torch_mist.distributions.conditional.correlated_normal"]], "conditionalcategorical (class in src.torch_mist.distributions.conditional)": [[6, "src.torch_mist.distributions.conditional.ConditionalCategorical"]], "correlatednormal (class in src.torch_mist.distributions.conditional)": [[6, "src.torch_mist.distributions.conditional.CorrelatedNormal"]], "cubiccorrelatednormal (class in src.torch_mist.distributions.conditional)": [[6, "src.torch_mist.distributions.conditional.CubicCorrelatedNormal"]], "skewedcorrelatednormal (class in src.torch_mist.distributions.conditional)": [[6, "src.torch_mist.distributions.conditional.SkewedCorrelatedNormal"]], "condition() (src.torch_mist.distributions.conditional.conditionalcategorical method)": [[6, "src.torch_mist.distributions.conditional.ConditionalCategorical.condition"]], "condition() (src.torch_mist.distributions.conditional.correlatednormal method)": [[6, "src.torch_mist.distributions.conditional.CorrelatedNormal.condition"]], "condition() (src.torch_mist.distributions.conditional.cubiccorrelatednormal method)": [[6, "src.torch_mist.distributions.conditional.CubicCorrelatedNormal.condition"]], "condition() (src.torch_mist.distributions.conditional.skewedcorrelatednormal method)": [[6, "src.torch_mist.distributions.conditional.SkewedCorrelatedNormal.condition"]], "src.torch_mist.distributions.conditional": [[6, "module-src.torch_mist.distributions.conditional"]], "conditional_categorical() (in module src.torch_mist.distributions)": [[7, "src.torch_mist.distributions.conditional_categorical"]], "conditional_mutivariate_categorical() (in module src.torch_mist.distributions)": [[7, "src.torch_mist.distributions.conditional_mutivariate_categorical"]], "src.torch_mist.distributions": [[7, "module-src.torch_mist.distributions"]], "jointdistribution (class in src.torch_mist.distributions.joint.base)": [[8, "src.torch_mist.distributions.joint.base.JointDistribution"]], "entropy() (src.torch_mist.distributions.joint.base.jointdistribution method)": [[8, "src.torch_mist.distributions.joint.base.JointDistribution.entropy"]], "labels (src.torch_mist.distributions.joint.base.jointdistribution attribute)": [[8, "src.torch_mist.distributions.joint.base.JointDistribution.labels"]], "log_prob() (src.torch_mist.distributions.joint.base.jointdistribution method)": [[8, "src.torch_mist.distributions.joint.base.JointDistribution.log_prob"]], "sample() (src.torch_mist.distributions.joint.base.jointdistribution method)": [[8, "src.torch_mist.distributions.joint.base.JointDistribution.sample"]], "src.torch_mist.distributions.joint.base": [[8, "module-src.torch_mist.distributions.joint.base"]], "src.torch_mist.distributions.joint": [[9, "module-src.torch_mist.distributions.joint"]], "src.torch_mist.distributions.parametrizations": [[10, "module-src.torch_mist.distributions.parametrizations"]], "deltamap (class in src.torch_mist.distributions.parametrizations.map)": [[11, "src.torch_mist.distributions.parametrizations.map.DeltaMap"]], "epsilon (in module src.torch_mist.distributions.parametrizations.map)": [[11, "src.torch_mist.distributions.parametrizations.map.EPSILON"]], "locscalemap (class in src.torch_mist.distributions.parametrizations.map)": [[11, "src.torch_mist.distributions.parametrizations.map.LocScaleMap"]], "logitsmap (class in src.torch_mist.distributions.parametrizations.map)": [[11, "src.torch_mist.distributions.parametrizations.map.LogitsMap"]], "parametermap (class in src.torch_mist.distributions.parametrizations.map)": [[11, "src.torch_mist.distributions.parametrizations.map.ParameterMap"]], "temperaturelogitsmap (class in src.torch_mist.distributions.parametrizations.map)": [[11, "src.torch_mist.distributions.parametrizations.map.TemperatureLogitsMap"]], "__call__() (src.torch_mist.distributions.parametrizations.map.parametermap method)": [[11, "src.torch_mist.distributions.parametrizations.map.ParameterMap.__call__"]], "__repr__() (src.torch_mist.distributions.parametrizations.map.parametermap method)": [[11, "src.torch_mist.distributions.parametrizations.map.ParameterMap.__repr__"]], "extra_repr() (src.torch_mist.distributions.parametrizations.map.parametermap method)": [[11, "src.torch_mist.distributions.parametrizations.map.ParameterMap.extra_repr"]], "map_parameters() (src.torch_mist.distributions.parametrizations.map.deltamap method)": [[11, "src.torch_mist.distributions.parametrizations.map.DeltaMap.map_parameters"]], "map_parameters() (src.torch_mist.distributions.parametrizations.map.locscalemap method)": [[11, "src.torch_mist.distributions.parametrizations.map.LocScaleMap.map_parameters"]], "map_parameters() (src.torch_mist.distributions.parametrizations.map.logitsmap method)": [[11, "src.torch_mist.distributions.parametrizations.map.LogitsMap.map_parameters"]], "map_parameters() (src.torch_mist.distributions.parametrizations.map.parametermap method)": [[11, "src.torch_mist.distributions.parametrizations.map.ParameterMap.map_parameters"]], "map_parameters() (src.torch_mist.distributions.parametrizations.map.temperaturelogitsmap method)": [[11, "src.torch_mist.distributions.parametrizations.map.TemperatureLogitsMap.map_parameters"]], "n_parameters (src.torch_mist.distributions.parametrizations.map.deltamap attribute)": [[11, "src.torch_mist.distributions.parametrizations.map.DeltaMap.n_parameters"]], "n_parameters (src.torch_mist.distributions.parametrizations.map.logitsmap attribute)": [[11, "src.torch_mist.distributions.parametrizations.map.LogitsMap.n_parameters"]], "n_parameters (src.torch_mist.distributions.parametrizations.map.parametermap attribute)": [[11, "src.torch_mist.distributions.parametrizations.map.ParameterMap.n_parameters"]], "n_parameters (src.torch_mist.distributions.parametrizations.map.temperaturelogitsmap attribute)": [[11, "src.torch_mist.distributions.parametrizations.map.TemperatureLogitsMap.n_parameters"]], "src.torch_mist.distributions.parametrizations.map": [[11, "module-src.torch_mist.distributions.parametrizations.map"]], "supported_distributions (src.torch_mist.distributions.parametrizations.map.deltamap attribute)": [[11, "src.torch_mist.distributions.parametrizations.map.DeltaMap.supported_distributions"]], "supported_distributions (src.torch_mist.distributions.parametrizations.map.locscalemap attribute)": [[11, "src.torch_mist.distributions.parametrizations.map.LocScaleMap.supported_distributions"]], "supported_distributions (src.torch_mist.distributions.parametrizations.map.logitsmap attribute)": [[11, "src.torch_mist.distributions.parametrizations.map.LogitsMap.supported_distributions"]], "supported_distributions (src.torch_mist.distributions.parametrizations.map.parametermap attribute)": [[11, "src.torch_mist.distributions.parametrizations.map.ParameterMap.supported_distributions"]], "supported_distributions (src.torch_mist.distributions.parametrizations.map.temperaturelogitsmap attribute)": [[11, "src.torch_mist.distributions.parametrizations.map.TemperatureLogitsMap.supported_distributions"]], "shuffledbatchdistribution (class in src.torch_mist.distributions.product)": [[12, "src.torch_mist.distributions.product.ShuffledBatchDistribution"]], "rsample() (src.torch_mist.distributions.product.shuffledbatchdistribution method)": [[12, "src.torch_mist.distributions.product.ShuffledBatchDistribution.rsample"]], "sample() (src.torch_mist.distributions.product.shuffledbatchdistribution method)": [[12, "src.torch_mist.distributions.product.ShuffledBatchDistribution.sample"]], "src.torch_mist.distributions.product": [[12, "module-src.torch_mist.distributions.product"]], "conditionaldistributionmodule (class in src.torch_mist.distributions.transforms.base)": [[13, "src.torch_mist.distributions.transforms.base.ConditionalDistributionModule"]], "conditionaltransformeddistributionmodule (class in src.torch_mist.distributions.transforms.base)": [[13, "src.torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule"]], "distributionmodule (class in src.torch_mist.distributions.transforms.base)": [[13, "src.torch_mist.distributions.transforms.base.DistributionModule"]], "transformeddistributionmodule (class in src.torch_mist.distributions.transforms.base)": [[13, "src.torch_mist.distributions.transforms.base.TransformedDistributionModule"]], "__repr__() (src.torch_mist.distributions.transforms.base.distributionmodule method)": [[13, "src.torch_mist.distributions.transforms.base.DistributionModule.__repr__"]], "__repr__() (src.torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[13, "src.torch_mist.distributions.transforms.base.TransformedDistributionModule.__repr__"]], "clear_cache() (src.torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[13, "src.torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.clear_cache"]], "condition() (src.torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[13, "src.torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.condition"]], "log_prob() (src.torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[13, "src.torch_mist.distributions.transforms.base.TransformedDistributionModule.log_prob"]], "rsample() (src.torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[13, "src.torch_mist.distributions.transforms.base.TransformedDistributionModule.rsample"]], "src.torch_mist.distributions.transforms.base": [[13, "module-src.torch_mist.distributions.transforms.base"]], "conditionaldistributionmodule (class in src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.ConditionalDistributionModule"]], "conditionallinear (class in src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.ConditionalLinear"]], "conditionaltransformeddistributionmodule (class in src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.ConditionalTransformedDistributionModule"]], "distributionmodule (class in src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.DistributionModule"]], "linear (class in src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.Linear"]], "permute (class in src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.Permute"]], "splittransform (class in src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.SplitTransform"]], "transformeddistributionmodule (class in src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.TransformedDistributionModule"]], "__repr__() (src.torch_mist.distributions.transforms.distributionmodule method)": [[14, "src.torch_mist.distributions.transforms.DistributionModule.__repr__"]], "__repr__() (src.torch_mist.distributions.transforms.transformeddistributionmodule method)": [[14, "src.torch_mist.distributions.transforms.TransformedDistributionModule.__repr__"]], "_call() (src.torch_mist.distributions.transforms.permute method)": [[14, "src.torch_mist.distributions.transforms.Permute._call"]], "_call() (src.torch_mist.distributions.transforms.splittransform method)": [[14, "src.torch_mist.distributions.transforms.SplitTransform._call"]], "_inverse() (src.torch_mist.distributions.transforms.permute method)": [[14, "src.torch_mist.distributions.transforms.Permute._inverse"]], "_inverse() (src.torch_mist.distributions.transforms.splittransform method)": [[14, "src.torch_mist.distributions.transforms.SplitTransform._inverse"]], "_params() (src.torch_mist.distributions.transforms.conditionallinear method)": [[14, "src.torch_mist.distributions.transforms.ConditionalLinear._params"]], "_params() (src.torch_mist.distributions.transforms.linear method)": [[14, "src.torch_mist.distributions.transforms.Linear._params"]], "add_dims() (src.torch_mist.distributions.transforms.splittransform method)": [[14, "src.torch_mist.distributions.transforms.SplitTransform.add_dims"]], "bijective (src.torch_mist.distributions.transforms.conditionallinear attribute)": [[14, "src.torch_mist.distributions.transforms.ConditionalLinear.bijective"]], "bijective (src.torch_mist.distributions.transforms.linear attribute)": [[14, "src.torch_mist.distributions.transforms.Linear.bijective"]], "clear_cache() (src.torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[14, "src.torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.clear_cache"]], "codomain (src.torch_mist.distributions.transforms.conditionallinear attribute)": [[14, "src.torch_mist.distributions.transforms.ConditionalLinear.codomain"]], "codomain (src.torch_mist.distributions.transforms.linear attribute)": [[14, "src.torch_mist.distributions.transforms.Linear.codomain"]], "codomain (src.torch_mist.distributions.transforms.splittransform attribute)": [[14, "src.torch_mist.distributions.transforms.SplitTransform.codomain"]], "condition() (src.torch_mist.distributions.transforms.conditionallinear method)": [[14, "src.torch_mist.distributions.transforms.ConditionalLinear.condition"]], "condition() (src.torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[14, "src.torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.condition"]], "conditional_linear() (in module src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.conditional_linear"]], "conditional_skip_linear() (in module src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.conditional_skip_linear"]], "dist() (src.torch_mist.distributions.transforms.splittransform method)": [[14, "src.torch_mist.distributions.transforms.SplitTransform.dist"]], "domain (src.torch_mist.distributions.transforms.conditionallinear attribute)": [[14, "src.torch_mist.distributions.transforms.ConditionalLinear.domain"]], "domain (src.torch_mist.distributions.transforms.linear attribute)": [[14, "src.torch_mist.distributions.transforms.Linear.domain"]], "domain (src.torch_mist.distributions.transforms.splittransform attribute)": [[14, "src.torch_mist.distributions.transforms.SplitTransform.domain"]], "linear() (in module src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.linear"]], "log_abs_det_jacobian() (src.torch_mist.distributions.transforms.permute method)": [[14, "src.torch_mist.distributions.transforms.Permute.log_abs_det_jacobian"]], "log_abs_det_jacobian() (src.torch_mist.distributions.transforms.splittransform method)": [[14, "src.torch_mist.distributions.transforms.SplitTransform.log_abs_det_jacobian"]], "log_prob() (src.torch_mist.distributions.transforms.transformeddistributionmodule method)": [[14, "src.torch_mist.distributions.transforms.TransformedDistributionModule.log_prob"]], "permute() (in module src.torch_mist.distributions.transforms)": [[14, "src.torch_mist.distributions.transforms.permute"]], "remove_dims() (src.torch_mist.distributions.transforms.splittransform method)": [[14, "src.torch_mist.distributions.transforms.SplitTransform.remove_dims"]], "rsample() (src.torch_mist.distributions.transforms.transformeddistributionmodule method)": [[14, "src.torch_mist.distributions.transforms.TransformedDistributionModule.rsample"]], "sign (src.torch_mist.distributions.transforms.linear attribute)": [[14, "src.torch_mist.distributions.transforms.Linear.sign"]], "src.torch_mist.distributions.transforms": [[14, "module-src.torch_mist.distributions.transforms"]], "update_device() (src.torch_mist.distributions.transforms.permute method)": [[14, "src.torch_mist.distributions.transforms.Permute.update_device"]], "conditionallinear (class in src.torch_mist.distributions.transforms.linear)": [[15, "src.torch_mist.distributions.transforms.linear.ConditionalLinear"]], "conditionedlinear (class in src.torch_mist.distributions.transforms.linear)": [[15, "src.torch_mist.distributions.transforms.linear.ConditionedLinear"]], "linear (class in src.torch_mist.distributions.transforms.linear)": [[15, "src.torch_mist.distributions.transforms.linear.Linear"]], "_call() (src.torch_mist.distributions.transforms.linear.conditionedlinear method)": [[15, "src.torch_mist.distributions.transforms.linear.ConditionedLinear._call"]], "_inverse() (src.torch_mist.distributions.transforms.linear.conditionedlinear method)": [[15, "src.torch_mist.distributions.transforms.linear.ConditionedLinear._inverse"]], "_params() (src.torch_mist.distributions.transforms.linear.conditionallinear method)": [[15, "src.torch_mist.distributions.transforms.linear.ConditionalLinear._params"]], "_params() (src.torch_mist.distributions.transforms.linear.linear method)": [[15, "src.torch_mist.distributions.transforms.linear.Linear._params"]], "bijective (src.torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[15, "src.torch_mist.distributions.transforms.linear.ConditionalLinear.bijective"]], "bijective (src.torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[15, "id2"], [15, "src.torch_mist.distributions.transforms.linear.ConditionedLinear.bijective"]], "bijective (src.torch_mist.distributions.transforms.linear.linear attribute)": [[15, "src.torch_mist.distributions.transforms.linear.Linear.bijective"]], "codomain (src.torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[15, "src.torch_mist.distributions.transforms.linear.ConditionalLinear.codomain"]], "codomain (src.torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[15, "id1"], [15, "src.torch_mist.distributions.transforms.linear.ConditionedLinear.codomain"]], "codomain (src.torch_mist.distributions.transforms.linear.linear attribute)": [[15, "src.torch_mist.distributions.transforms.linear.Linear.codomain"]], "condition() (src.torch_mist.distributions.transforms.linear.conditionallinear method)": [[15, "src.torch_mist.distributions.transforms.linear.ConditionalLinear.condition"]], "conditional_linear() (in module src.torch_mist.distributions.transforms.linear)": [[15, "src.torch_mist.distributions.transforms.linear.conditional_linear"]], "conditional_skip_linear() (in module src.torch_mist.distributions.transforms.linear)": [[15, "src.torch_mist.distributions.transforms.linear.conditional_skip_linear"]], "domain (src.torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[15, "src.torch_mist.distributions.transforms.linear.ConditionalLinear.domain"]], "domain (src.torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[15, "id0"], [15, "src.torch_mist.distributions.transforms.linear.ConditionedLinear.domain"]], "domain (src.torch_mist.distributions.transforms.linear.linear attribute)": [[15, "src.torch_mist.distributions.transforms.linear.Linear.domain"]], "linear() (in module src.torch_mist.distributions.transforms.linear)": [[15, "src.torch_mist.distributions.transforms.linear.linear"]], "log_abs_det_jacobian() (src.torch_mist.distributions.transforms.linear.conditionedlinear method)": [[15, "src.torch_mist.distributions.transforms.linear.ConditionedLinear.log_abs_det_jacobian"]], "sign (src.torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[15, "src.torch_mist.distributions.transforms.linear.ConditionedLinear.sign"]], "sign (src.torch_mist.distributions.transforms.linear.linear attribute)": [[15, "src.torch_mist.distributions.transforms.linear.Linear.sign"]], "src.torch_mist.distributions.transforms.linear": [[15, "module-src.torch_mist.distributions.transforms.linear"]], "permute (class in src.torch_mist.distributions.transforms.permute)": [[16, "src.torch_mist.distributions.transforms.permute.Permute"]], "_call() (src.torch_mist.distributions.transforms.permute.permute method)": [[16, "src.torch_mist.distributions.transforms.permute.Permute._call"]], "_inverse() (src.torch_mist.distributions.transforms.permute.permute method)": [[16, "src.torch_mist.distributions.transforms.permute.Permute._inverse"]], "log_abs_det_jacobian() (src.torch_mist.distributions.transforms.permute.permute method)": [[16, "src.torch_mist.distributions.transforms.permute.Permute.log_abs_det_jacobian"]], "permute() (in module src.torch_mist.distributions.transforms.permute)": [[16, "src.torch_mist.distributions.transforms.permute.permute"]], "src.torch_mist.distributions.transforms.permute": [[16, "module-src.torch_mist.distributions.transforms.permute"]], "update_device() (src.torch_mist.distributions.transforms.permute.permute method)": [[16, "src.torch_mist.distributions.transforms.permute.Permute.update_device"]], "splittransform (class in src.torch_mist.distributions.transforms.split)": [[17, "src.torch_mist.distributions.transforms.split.SplitTransform"]], "_call() (src.torch_mist.distributions.transforms.split.splittransform method)": [[17, "src.torch_mist.distributions.transforms.split.SplitTransform._call"]], "_inverse() (src.torch_mist.distributions.transforms.split.splittransform method)": [[17, "src.torch_mist.distributions.transforms.split.SplitTransform._inverse"]], "add_dims() (src.torch_mist.distributions.transforms.split.splittransform method)": [[17, "src.torch_mist.distributions.transforms.split.SplitTransform.add_dims"]], "codomain (src.torch_mist.distributions.transforms.split.splittransform attribute)": [[17, "src.torch_mist.distributions.transforms.split.SplitTransform.codomain"]], "dist() (src.torch_mist.distributions.transforms.split.splittransform method)": [[17, "src.torch_mist.distributions.transforms.split.SplitTransform.dist"]], "domain (src.torch_mist.distributions.transforms.split.splittransform attribute)": [[17, "src.torch_mist.distributions.transforms.split.SplitTransform.domain"]], "log_abs_det_jacobian() (src.torch_mist.distributions.transforms.split.splittransform method)": [[17, "src.torch_mist.distributions.transforms.split.SplitTransform.log_abs_det_jacobian"]], "remove_dims() (src.torch_mist.distributions.transforms.split.splittransform method)": [[17, "src.torch_mist.distributions.transforms.split.SplitTransform.remove_dims"]], "src.torch_mist.distributions.transforms.split": [[17, "module-src.torch_mist.distributions.transforms.split"]], "conditional_categorical() (in module src.torch_mist.distributions.utils)": [[18, "src.torch_mist.distributions.utils.conditional_categorical"]], "conditional_mutivariate_categorical() (in module src.torch_mist.distributions.utils)": [[18, "src.torch_mist.distributions.utils.conditional_mutivariate_categorical"]], "src.torch_mist.distributions.utils": [[18, "module-src.torch_mist.distributions.utils"]], "estimation (class in src.torch_mist.estimators.base)": [[19, "src.torch_mist.estimators.base.Estimation"]], "logratioestimator (class in src.torch_mist.estimators.base)": [[19, "src.torch_mist.estimators.base.LogRatioEstimator"]], "mutualinformationestimator (class in src.torch_mist.estimators.base)": [[19, "src.torch_mist.estimators.base.MutualInformationEstimator"]], "__add__() (src.torch_mist.estimators.base.estimation method)": [[19, "src.torch_mist.estimators.base.Estimation.__add__"]], "__sub__() (src.torch_mist.estimators.base.estimation method)": [[19, "src.torch_mist.estimators.base.Estimation.__sub__"]], "apply() (src.torch_mist.estimators.base.estimation method)": [[19, "src.torch_mist.estimators.base.Estimation.apply"]], "forward() (src.torch_mist.estimators.base.logratioestimator method)": [[19, "src.torch_mist.estimators.base.LogRatioEstimator.forward"]], "forward() (src.torch_mist.estimators.base.mutualinformationestimator method)": [[19, "src.torch_mist.estimators.base.MutualInformationEstimator.forward"]], "log_ratio() (src.torch_mist.estimators.base.logratioestimator method)": [[19, "src.torch_mist.estimators.base.LogRatioEstimator.log_ratio"]], "loss (src.torch_mist.estimators.base.estimation attribute)": [[19, "src.torch_mist.estimators.base.Estimation.loss"]], "lower_bound (src.torch_mist.estimators.base.mutualinformationestimator attribute)": [[19, "src.torch_mist.estimators.base.MutualInformationEstimator.lower_bound"]], "shape (src.torch_mist.estimators.base.estimation property)": [[19, "src.torch_mist.estimators.base.Estimation.shape"]], "src.torch_mist.estimators.base": [[19, "module-src.torch_mist.estimators.base"]], "upper_bound (src.torch_mist.estimators.base.mutualinformationestimator attribute)": [[19, "src.torch_mist.estimators.base.MutualInformationEstimator.upper_bound"]], "value (src.torch_mist.estimators.base.estimation attribute)": [[19, "src.torch_mist.estimators.base.Estimation.value"]], "alphatuba (class in src.torch_mist.estimators.discriminative)": [[20, "src.torch_mist.estimators.discriminative.AlphaTUBA"]], "discriminativemutualinformationestimator (class in src.torch_mist.estimators.discriminative)": [[20, "src.torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator"]], "empiricaldistribution (class in src.torch_mist.estimators.discriminative)": [[20, "src.torch_mist.estimators.discriminative.EmpiricalDistribution"]], "flo (class in src.torch_mist.estimators.discriminative)": [[20, "src.torch_mist.estimators.discriminative.FLO"]], "infonce (class in src.torch_mist.estimators.discriminative)": [[20, "src.torch_mist.estimators.discriminative.InfoNCE"]], "js (class in src.torch_mist.estimators.discriminative)": [[20, "src.torch_mist.estimators.discriminative.JS"]], "mine (class in src.torch_mist.estimators.discriminative)": [[20, "src.torch_mist.estimators.discriminative.MINE"]], "nwj (class in src.torch_mist.estimators.discriminative)": [[20, "src.torch_mist.estimators.discriminative.NWJ"]], "smile (class in src.torch_mist.estimators.discriminative)": [[20, "src.torch_mist.estimators.discriminative.SMILE"]], "tuba (class in src.torch_mist.estimators.discriminative)": [[20, "src.torch_mist.estimators.discriminative.TUBA"]], "__repr__() (src.torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[20, "src.torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.__repr__"]], "_compute_log_ratio() (src.torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[20, "src.torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator._compute_log_ratio"]], "_compute_log_ratio() (src.torch_mist.estimators.discriminative.flo method)": [[20, "src.torch_mist.estimators.discriminative.FLO._compute_log_ratio"]], "_compute_log_ratio() (src.torch_mist.estimators.discriminative.infonce method)": [[20, "src.torch_mist.estimators.discriminative.InfoNCE._compute_log_ratio"]], "_compute_log_ratio() (src.torch_mist.estimators.discriminative.nwj method)": [[20, "src.torch_mist.estimators.discriminative.NWJ._compute_log_ratio"]], "_compute_log_ratio() (src.torch_mist.estimators.discriminative.smile method)": [[20, "src.torch_mist.estimators.discriminative.SMILE._compute_log_ratio"]], "_compute_log_ratio() (src.torch_mist.estimators.discriminative.tuba method)": [[20, "src.torch_mist.estimators.discriminative.TUBA._compute_log_ratio"]], "_compute_log_ratio_grad() (src.torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[20, "src.torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (src.torch_mist.estimators.discriminative.js method)": [[20, "src.torch_mist.estimators.discriminative.JS._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (src.torch_mist.estimators.discriminative.smile method)": [[20, "src.torch_mist.estimators.discriminative.SMILE._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (src.torch_mist.estimators.discriminative.tuba method)": [[20, "src.torch_mist.estimators.discriminative.TUBA._compute_log_ratio_grad"]], "log_ratio() (src.torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[20, "src.torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.log_ratio"]], "lower_bound (src.torch_mist.estimators.discriminative.discriminativemutualinformationestimator attribute)": [[20, "src.torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.lower_bound"]], "proposal (src.torch_mist.estimators.discriminative.discriminativemutualinformationestimator attribute)": [[20, "src.torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.proposal"]], "sample_n() (src.torch_mist.estimators.discriminative.empiricaldistribution method)": [[20, "src.torch_mist.estimators.discriminative.EmpiricalDistribution.sample_n"]], "sample_proposal() (src.torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[20, "src.torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.sample_proposal"]], "src.torch_mist.estimators.discriminative": [[20, "module-src.torch_mist.estimators.discriminative"]], "upper_bound (src.torch_mist.estimators.discriminative.discriminativemutualinformationestimator attribute)": [[20, "src.torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.upper_bound"]], "ba (class in src.torch_mist.estimators.generative)": [[21, "src.torch_mist.estimators.generative.BA"]], "club (class in src.torch_mist.estimators.generative)": [[21, "src.torch_mist.estimators.generative.CLUB"]], "doe (class in src.torch_mist.estimators.generative)": [[21, "src.torch_mist.estimators.generative.DoE"]], "gm (class in src.torch_mist.estimators.generative)": [[21, "src.torch_mist.estimators.generative.GM"]], "generativemutualinformationestimator (class in src.torch_mist.estimators.generative)": [[21, "src.torch_mist.estimators.generative.GenerativeMutualInformationEstimator"]], "l1out (class in src.torch_mist.estimators.generative)": [[21, "src.torch_mist.estimators.generative.L1Out"]], "pq (class in src.torch_mist.estimators.generative)": [[21, "src.torch_mist.estimators.generative.PQ"]], "variationalproposalmutualinformationestimator (class in src.torch_mist.estimators.generative)": [[21, "src.torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator"]], "__repr__() (src.torch_mist.estimators.generative.doe method)": [[21, "src.torch_mist.estimators.generative.DoE.__repr__"]], "__repr__() (src.torch_mist.estimators.generative.gm method)": [[21, "src.torch_mist.estimators.generative.GM.__repr__"]], "__repr__() (src.torch_mist.estimators.generative.pq method)": [[21, "src.torch_mist.estimators.generative.PQ.__repr__"]], "__repr__() (src.torch_mist.estimators.generative.variationalproposalmutualinformationestimator method)": [[21, "src.torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator.__repr__"]], "compute_loss() (src.torch_mist.estimators.generative.ba method)": [[21, "src.torch_mist.estimators.generative.BA.compute_loss"]], "compute_loss() (src.torch_mist.estimators.generative.gm method)": [[21, "src.torch_mist.estimators.generative.GM.compute_loss"]], "compute_loss() (src.torch_mist.estimators.generative.generativemutualinformationestimator method)": [[21, "src.torch_mist.estimators.generative.GenerativeMutualInformationEstimator.compute_loss"]], "compute_loss() (src.torch_mist.estimators.generative.variationalproposalmutualinformationestimator method)": [[21, "src.torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator.compute_loss"]], "expected_log_ratio() (src.torch_mist.estimators.generative.pq method)": [[21, "src.torch_mist.estimators.generative.PQ.expected_log_ratio"]], "log_prob_x() (src.torch_mist.estimators.generative.gm method)": [[21, "src.torch_mist.estimators.generative.GM.log_prob_x"]], "log_prob_y() (src.torch_mist.estimators.generative.ba method)": [[21, "src.torch_mist.estimators.generative.BA.log_prob_y"]], "log_prob_y() (src.torch_mist.estimators.generative.club method)": [[21, "src.torch_mist.estimators.generative.CLUB.log_prob_y"]], "log_prob_y() (src.torch_mist.estimators.generative.gm method)": [[21, "src.torch_mist.estimators.generative.GM.log_prob_y"]], "log_prob_y() (src.torch_mist.estimators.generative.generativemutualinformationestimator method)": [[21, "src.torch_mist.estimators.generative.GenerativeMutualInformationEstimator.log_prob_y"]], "log_prob_y() (src.torch_mist.estimators.generative.l1out method)": [[21, "src.torch_mist.estimators.generative.L1Out.log_prob_y"]], "log_prob_y() (src.torch_mist.estimators.generative.pq method)": [[21, "src.torch_mist.estimators.generative.PQ.log_prob_y"]], "log_prob_y_x() (src.torch_mist.estimators.generative.gm method)": [[21, "src.torch_mist.estimators.generative.GM.log_prob_y_x"]], "log_prob_y_x() (src.torch_mist.estimators.generative.generativemutualinformationestimator method)": [[21, "src.torch_mist.estimators.generative.GenerativeMutualInformationEstimator.log_prob_y_x"]], "log_prob_y_x() (src.torch_mist.estimators.generative.variationalproposalmutualinformationestimator method)": [[21, "src.torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator.log_prob_y_x"]], "log_ratio() (src.torch_mist.estimators.generative.generativemutualinformationestimator method)": [[21, "src.torch_mist.estimators.generative.GenerativeMutualInformationEstimator.log_ratio"]], "src.torch_mist.estimators.generative": [[21, "module-src.torch_mist.estimators.generative"]], "hybridmutualinformationestimator (class in src.torch_mist.estimators.hybrid)": [[22, "src.torch_mist.estimators.hybrid.HybridMutualInformationEstimator"]], "log_ratio() (src.torch_mist.estimators.hybrid.hybridmutualinformationestimator method)": [[22, "src.torch_mist.estimators.hybrid.HybridMutualInformationEstimator.log_ratio"]], "src.torch_mist.estimators.hybrid": [[22, "module-src.torch_mist.estimators.hybrid"]], "alphatuba (class in src.torch_mist.estimators.implementations)": [[23, "src.torch_mist.estimators.implementations.AlphaTuba"]], "ba (class in src.torch_mist.estimators.implementations)": [[23, "src.torch_mist.estimators.implementations.BA"]], "doe (class in src.torch_mist.estimators.implementations)": [[23, "src.torch_mist.estimators.implementations.DoE"]], "infonce (class in src.torch_mist.estimators.implementations)": [[23, "src.torch_mist.estimators.implementations.InfoNCE"]], "js (class in src.torch_mist.estimators.implementations)": [[23, "src.torch_mist.estimators.implementations.JS"]], "mine (class in src.torch_mist.estimators.implementations)": [[23, "src.torch_mist.estimators.implementations.MINE"]], "nwj (class in src.torch_mist.estimators.implementations)": [[23, "src.torch_mist.estimators.implementations.NWJ"]], "smile (class in src.torch_mist.estimators.implementations)": [[23, "src.torch_mist.estimators.implementations.SMILE"]], "tuba (class in src.torch_mist.estimators.implementations)": [[23, "src.torch_mist.estimators.implementations.TUBA"]], "src.torch_mist.estimators.implementations": [[23, "module-src.torch_mist.estimators.implementations"]], "alphatuba (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.AlphaTUBA"]], "ba (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.BA"]], "doe (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.DoE"]], "flo (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.FLO"]], "gm (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.GM"]], "hybridmutualinformationestimator (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.HybridMutualInformationEstimator"]], "infonce (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.InfoNCE"]], "js (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.JS"]], "mine (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.MINE"]], "mutualinformationestimator (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.MutualInformationEstimator"]], "nwj (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.NWJ"]], "smile (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.SMILE"]], "tuba (class in src.torch_mist.estimators)": [[24, "src.torch_mist.estimators.TUBA"]], "__repr__() (src.torch_mist.estimators.doe method)": [[24, "src.torch_mist.estimators.DoE.__repr__"]], "__repr__() (src.torch_mist.estimators.gm method)": [[24, "src.torch_mist.estimators.GM.__repr__"]], "_compute_log_ratio() (src.torch_mist.estimators.flo method)": [[24, "src.torch_mist.estimators.FLO._compute_log_ratio"]], "_compute_log_ratio() (src.torch_mist.estimators.infonce method)": [[24, "src.torch_mist.estimators.InfoNCE._compute_log_ratio"]], "_compute_log_ratio() (src.torch_mist.estimators.nwj method)": [[24, "src.torch_mist.estimators.NWJ._compute_log_ratio"]], "_compute_log_ratio() (src.torch_mist.estimators.smile method)": [[24, "src.torch_mist.estimators.SMILE._compute_log_ratio"]], "_compute_log_ratio() (src.torch_mist.estimators.tuba method)": [[24, "src.torch_mist.estimators.TUBA._compute_log_ratio"]], "_compute_log_ratio_grad() (src.torch_mist.estimators.js method)": [[24, "src.torch_mist.estimators.JS._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (src.torch_mist.estimators.smile method)": [[24, "src.torch_mist.estimators.SMILE._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (src.torch_mist.estimators.tuba method)": [[24, "src.torch_mist.estimators.TUBA._compute_log_ratio_grad"]], "compute_loss() (src.torch_mist.estimators.ba method)": [[24, "src.torch_mist.estimators.BA.compute_loss"]], "compute_loss() (src.torch_mist.estimators.gm method)": [[24, "src.torch_mist.estimators.GM.compute_loss"]], "forward() (src.torch_mist.estimators.mutualinformationestimator method)": [[24, "src.torch_mist.estimators.MutualInformationEstimator.forward"]], "log_prob_x() (src.torch_mist.estimators.gm method)": [[24, "src.torch_mist.estimators.GM.log_prob_x"]], "log_prob_y() (src.torch_mist.estimators.ba method)": [[24, "src.torch_mist.estimators.BA.log_prob_y"]], "log_prob_y() (src.torch_mist.estimators.gm method)": [[24, "src.torch_mist.estimators.GM.log_prob_y"]], "log_prob_y_x() (src.torch_mist.estimators.gm method)": [[24, "src.torch_mist.estimators.GM.log_prob_y_x"]], "log_ratio() (src.torch_mist.estimators.hybridmutualinformationestimator method)": [[24, "src.torch_mist.estimators.HybridMutualInformationEstimator.log_ratio"]], "lower_bound (src.torch_mist.estimators.mutualinformationestimator attribute)": [[24, "src.torch_mist.estimators.MutualInformationEstimator.lower_bound"]], "src.torch_mist.estimators": [[24, "module-src.torch_mist.estimators"]], "upper_bound (src.torch_mist.estimators.mutualinformationestimator attribute)": [[24, "src.torch_mist.estimators.MutualInformationEstimator.upper_bound"]], "logpartition (class in src.torch_mist.estimators.log_partition)": [[25, "src.torch_mist.estimators.log_partition.LogPartition"]], "normalizedlogpartition (class in src.torch_mist.estimators.log_partition)": [[25, "src.torch_mist.estimators.log_partition.NormalizedLogPartition"]], "unnormalizedlogpartition (class in src.torch_mist.estimators.log_partition)": [[25, "src.torch_mist.estimators.log_partition.UnnormalizedLogPartition"]], "__call__() (src.torch_mist.estimators.log_partition.logpartition method)": [[25, "src.torch_mist.estimators.log_partition.LogPartition.__call__"]], "__call__() (src.torch_mist.estimators.log_partition.normalizedlogpartition method)": [[25, "src.torch_mist.estimators.log_partition.NormalizedLogPartition.__call__"]], "sample_proposal() (src.torch_mist.estimators.log_partition.unnormalizedlogpartition method)": [[25, "src.torch_mist.estimators.log_partition.UnnormalizedLogPartition.sample_proposal"]], "src.torch_mist.estimators.log_partition": [[25, "module-src.torch_mist.estimators.log_partition"]], "projection (class in src.torch_mist.estimators.simclr)": [[26, "src.torch_mist.estimators.simclr.Projection"]], "simclr (class in src.torch_mist.estimators.simclr)": [[26, "src.torch_mist.estimators.simclr.SimCLR"]], "compute_dual_ratio() (src.torch_mist.estimators.simclr.simclr method)": [[26, "src.torch_mist.estimators.simclr.SimCLR.compute_dual_ratio"]], "forward() (src.torch_mist.estimators.simclr.projection method)": [[26, "src.torch_mist.estimators.simclr.Projection.forward"]], "src.torch_mist.estimators.simclr": [[26, "module-src.torch_mist.estimators.simclr"]], "__version__ (in module src.torch_mist)": [[27, "src.torch_mist.__version__"]], "src.torch_mist": [[27, "module-src.torch_mist"]], "encoderkeywords (class in src.torch_mist.models.encoder)": [[28, "src.torch_mist.models.encoder.EncoderKeywords"]], "encodermlp (class in src.torch_mist.models.encoder)": [[28, "src.torch_mist.models.encoder.EncoderMLP"]], "slowlyupdatingmodel (class in src.torch_mist.models.encoder)": [[28, "src.torch_mist.models.encoder.SlowlyUpdatingModel"]], "_update_weights() (src.torch_mist.models.encoder.slowlyupdatingmodel method)": [[28, "src.torch_mist.models.encoder.SlowlyUpdatingModel._update_weights"]], "current_model (src.torch_mist.models.encoder.slowlyupdatingmodel property)": [[28, "src.torch_mist.models.encoder.SlowlyUpdatingModel.current_model"]], "forward() (src.torch_mist.models.encoder.slowlyupdatingmodel method)": [[28, "src.torch_mist.models.encoder.SlowlyUpdatingModel.forward"]], "same (src.torch_mist.models.encoder.encoderkeywords attribute)": [[28, "src.torch_mist.models.encoder.EncoderKeywords.same"]], "slow (src.torch_mist.models.encoder.encoderkeywords attribute)": [[28, "src.torch_mist.models.encoder.EncoderKeywords.slow"]], "src.torch_mist.models.encoder": [[28, "module-src.torch_mist.models.encoder"]], "encodermlp (class in src.torch_mist.models.encoder.mlp)": [[29, "src.torch_mist.models.encoder.mlp.EncoderMLP"]], "src.torch_mist.models.encoder.mlp": [[29, "module-src.torch_mist.models.encoder.mlp"]], "slowlyupdatingmodel (class in src.torch_mist.models.encoder.slow_updates)": [[30, "src.torch_mist.models.encoder.slow_updates.SlowlyUpdatingModel"]], "_update_weights() (src.torch_mist.models.encoder.slow_updates.slowlyupdatingmodel method)": [[30, "src.torch_mist.models.encoder.slow_updates.SlowlyUpdatingModel._update_weights"]], "current_model (src.torch_mist.models.encoder.slow_updates.slowlyupdatingmodel property)": [[30, "src.torch_mist.models.encoder.slow_updates.SlowlyUpdatingModel.current_model"]], "forward() (src.torch_mist.models.encoder.slow_updates.slowlyupdatingmodel method)": [[30, "src.torch_mist.models.encoder.slow_updates.SlowlyUpdatingModel.forward"]], "src.torch_mist.models.encoder.slow_updates": [[30, "module-src.torch_mist.models.encoder.slow_updates"]], "encoderkeywords (class in src.torch_mist.models.encoder.types)": [[31, "src.torch_mist.models.encoder.types.EncoderKeywords"]], "same (src.torch_mist.models.encoder.types.encoderkeywords attribute)": [[31, "src.torch_mist.models.encoder.types.EncoderKeywords.same"]], "slow (src.torch_mist.models.encoder.types.encoderkeywords attribute)": [[31, "src.torch_mist.models.encoder.types.EncoderKeywords.slow"]], "src.torch_mist.models.encoder.types": [[31, "module-src.torch_mist.models.encoder.types"]], "src.torch_mist.models": [[32, "module-src.torch_mist.models"]], "conditionalcategoricallinear (class in src.torch_mist.models.learnable_distributions.categorical)": [[33, "src.torch_mist.models.learnable_distributions.categorical.ConditionalCategoricalLinear"]], "conditionalcategoricalmlp (class in src.torch_mist.models.learnable_distributions.categorical)": [[33, "src.torch_mist.models.learnable_distributions.categorical.ConditionalCategoricalMLP"]], "learnablecategorical (class in src.torch_mist.models.learnable_distributions.categorical)": [[33, "src.torch_mist.models.learnable_distributions.categorical.LearnableCategorical"]], "__repr__() (src.torch_mist.models.learnable_distributions.categorical.learnablecategorical method)": [[33, "src.torch_mist.models.learnable_distributions.categorical.LearnableCategorical.__repr__"]], "condition() (src.torch_mist.models.learnable_distributions.categorical.conditionalcategoricallinear method)": [[33, "src.torch_mist.models.learnable_distributions.categorical.ConditionalCategoricalLinear.condition"]], "log_prob() (src.torch_mist.models.learnable_distributions.categorical.learnablecategorical method)": [[33, "src.torch_mist.models.learnable_distributions.categorical.LearnableCategorical.log_prob"]], "rsample() (src.torch_mist.models.learnable_distributions.categorical.learnablecategorical method)": [[33, "src.torch_mist.models.learnable_distributions.categorical.LearnableCategorical.rsample"]], "sample() (src.torch_mist.models.learnable_distributions.categorical.learnablecategorical method)": [[33, "src.torch_mist.models.learnable_distributions.categorical.LearnableCategorical.sample"]], "src.torch_mist.models.learnable_distributions.categorical": [[33, "module-src.torch_mist.models.learnable_distributions.categorical"]], "conditionalcategoricallinear (class in src.torch_mist.models.learnable_distributions)": [[34, "src.torch_mist.models.learnable_distributions.ConditionalCategoricalLinear"]], "conditionalcategoricalmlp (class in src.torch_mist.models.learnable_distributions)": [[34, "src.torch_mist.models.learnable_distributions.ConditionalCategoricalMLP"]], "conditionalflowtransformednormal (class in src.torch_mist.models.learnable_distributions)": [[34, "src.torch_mist.models.learnable_distributions.ConditionalFlowTransformedNormal"]], "flowtransformedjointnormal (class in src.torch_mist.models.learnable_distributions)": [[34, "src.torch_mist.models.learnable_distributions.FlowTransformedJointNormal"]], "flowtransformednormal (class in src.torch_mist.models.learnable_distributions)": [[34, "src.torch_mist.models.learnable_distributions.FlowTransformedNormal"]], "learnablecategorical (class in src.torch_mist.models.learnable_distributions)": [[34, "src.torch_mist.models.learnable_distributions.LearnableCategorical"]], "__repr__() (src.torch_mist.models.learnable_distributions.learnablecategorical method)": [[34, "src.torch_mist.models.learnable_distributions.LearnableCategorical.__repr__"]], "condition() (src.torch_mist.models.learnable_distributions.conditionalcategoricallinear method)": [[34, "src.torch_mist.models.learnable_distributions.ConditionalCategoricalLinear.condition"]], "dist (src.torch_mist.models.learnable_distributions.flowtransformedjointnormal property)": [[34, "src.torch_mist.models.learnable_distributions.FlowTransformedJointNormal.dist"]], "dist (src.torch_mist.models.learnable_distributions.flowtransformednormal property)": [[34, "src.torch_mist.models.learnable_distributions.FlowTransformedNormal.dist"]], "labels (src.torch_mist.models.learnable_distributions.flowtransformedjointnormal attribute)": [[34, "src.torch_mist.models.learnable_distributions.FlowTransformedJointNormal.labels"]], "log_prob() (src.torch_mist.models.learnable_distributions.flowtransformedjointnormal method)": [[34, "src.torch_mist.models.learnable_distributions.FlowTransformedJointNormal.log_prob"]], "log_prob() (src.torch_mist.models.learnable_distributions.flowtransformednormal method)": [[34, "src.torch_mist.models.learnable_distributions.FlowTransformedNormal.log_prob"]], "log_prob() (src.torch_mist.models.learnable_distributions.learnablecategorical method)": [[34, "src.torch_mist.models.learnable_distributions.LearnableCategorical.log_prob"]], "rsample() (src.torch_mist.models.learnable_distributions.flowtransformedjointnormal method)": [[34, "src.torch_mist.models.learnable_distributions.FlowTransformedJointNormal.rsample"]], "rsample() (src.torch_mist.models.learnable_distributions.flowtransformednormal method)": [[34, "src.torch_mist.models.learnable_distributions.FlowTransformedNormal.rsample"]], "rsample() (src.torch_mist.models.learnable_distributions.learnablecategorical method)": [[34, "src.torch_mist.models.learnable_distributions.LearnableCategorical.rsample"]], "sample() (src.torch_mist.models.learnable_distributions.flowtransformedjointnormal method)": [[34, "src.torch_mist.models.learnable_distributions.FlowTransformedJointNormal.sample"]], "sample() (src.torch_mist.models.learnable_distributions.flowtransformednormal method)": [[34, "src.torch_mist.models.learnable_distributions.FlowTransformedNormal.sample"]], "sample() (src.torch_mist.models.learnable_distributions.learnablecategorical method)": [[34, "src.torch_mist.models.learnable_distributions.LearnableCategorical.sample"]], "src.torch_mist.models.learnable_distributions": [[34, "module-src.torch_mist.models.learnable_distributions"]], "conditionalflowtransformednormal (class in src.torch_mist.models.learnable_distributions.transformed_normal)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.ConditionalFlowTransformedNormal"]], "flowtransformedjointnormal (class in src.torch_mist.models.learnable_distributions.transformed_normal)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedJointNormal"]], "flowtransformednormal (class in src.torch_mist.models.learnable_distributions.transformed_normal)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedNormal"]], "dist (src.torch_mist.models.learnable_distributions.transformed_normal.flowtransformedjointnormal property)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedJointNormal.dist"]], "dist (src.torch_mist.models.learnable_distributions.transformed_normal.flowtransformednormal property)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedNormal.dist"]], "fetch_transform() (in module src.torch_mist.models.learnable_distributions.transformed_normal)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.fetch_transform"]], "labels (src.torch_mist.models.learnable_distributions.transformed_normal.flowtransformedjointnormal attribute)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedJointNormal.labels"]], "log_prob() (src.torch_mist.models.learnable_distributions.transformed_normal.flowtransformedjointnormal method)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedJointNormal.log_prob"]], "log_prob() (src.torch_mist.models.learnable_distributions.transformed_normal.flowtransformednormal method)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedNormal.log_prob"]], "rsample() (src.torch_mist.models.learnable_distributions.transformed_normal.flowtransformedjointnormal method)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedJointNormal.rsample"]], "rsample() (src.torch_mist.models.learnable_distributions.transformed_normal.flowtransformednormal method)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedNormal.rsample"]], "sample() (src.torch_mist.models.learnable_distributions.transformed_normal.flowtransformedjointnormal method)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedJointNormal.sample"]], "sample() (src.torch_mist.models.learnable_distributions.transformed_normal.flowtransformednormal method)": [[35, "src.torch_mist.models.learnable_distributions.transformed_normal.FlowTransformedNormal.sample"]], "src.torch_mist.models.learnable_distributions.transformed_normal": [[35, "module-src.torch_mist.models.learnable_distributions.transformed_normal"]], "jointdensenn (class in src.torch_mist.nn)": [[36, "src.torch_mist.nn.JointDenseNN"]], "forward() (src.torch_mist.nn.jointdensenn method)": [[36, "src.torch_mist.nn.JointDenseNN.forward"]], "src.torch_mist.nn": [[36, "module-src.torch_mist.nn"]], "constant (class in src.torch_mist.nn.utils)": [[37, "src.torch_mist.nn.utils.Constant"]], "identity (class in src.torch_mist.nn.utils)": [[37, "src.torch_mist.nn.utils.Identity"]], "jointdensenn (class in src.torch_mist.nn.utils)": [[37, "src.torch_mist.nn.utils.JointDenseNN"]], "mergeoutputs (class in src.torch_mist.nn.utils)": [[37, "src.torch_mist.nn.utils.MergeOutputs"]], "skipdensenn (class in src.torch_mist.nn.utils)": [[37, "src.torch_mist.nn.utils.SkipDenseNN"]], "__repr__() (src.torch_mist.nn.utils.constant method)": [[37, "src.torch_mist.nn.utils.Constant.__repr__"]], "forward() (src.torch_mist.nn.utils.constant method)": [[37, "src.torch_mist.nn.utils.Constant.forward"]], "forward() (src.torch_mist.nn.utils.identity method)": [[37, "src.torch_mist.nn.utils.Identity.forward"]], "forward() (src.torch_mist.nn.utils.jointdensenn method)": [[37, "src.torch_mist.nn.utils.JointDenseNN.forward"]], "forward() (src.torch_mist.nn.utils.mergeoutputs method)": [[37, "src.torch_mist.nn.utils.MergeOutputs.forward"]], "forward() (src.torch_mist.nn.utils.skipdensenn method)": [[37, "src.torch_mist.nn.utils.SkipDenseNN.forward"]], "src.torch_mist.nn.utils": [[37, "module-src.torch_mist.nn.utils"]], "src.torch_mist.optim": [[38, "module-src.torch_mist.optim"]], "warmupscheduler (class in src.torch_mist.optim.lr_scheduler)": [[39, "src.torch_mist.optim.lr_scheduler.WarmupScheduler"]], "src.torch_mist.optim.lr_scheduler": [[39, "module-src.torch_mist.optim.lr_scheduler"]], "quantizationfunction (class in src.torch_mist.quantization)": [[40, "src.torch_mist.quantization.QuantizationFunction"]], "forward() (src.torch_mist.quantization.quantizationfunction method)": [[40, "src.torch_mist.quantization.QuantizationFunction.forward"]], "num_bins (src.torch_mist.quantization.quantizationfunction property)": [[40, "src.torch_mist.quantization.QuantizationFunction.num_bins"]], "src.torch_mist.quantization": [[40, "module-src.torch_mist.quantization"]], "unnormalizedratioestimator (class in src.torch_mist.ratio.base)": [[41, "src.torch_mist.ratio.base.UnnormalizedRatioEstimator"]], "forward() (src.torch_mist.ratio.base.unnormalizedratioestimator method)": [[41, "src.torch_mist.ratio.base.UnnormalizedRatioEstimator.forward"]], "src.torch_mist.ratio.base": [[41, "module-src.torch_mist.ratio.base"]], "conditionaldistributionratio (class in src.torch_mist.ratio.conditional_dist)": [[42, "src.torch_mist.ratio.conditional_dist.ConditionalDistributionRatio"]], "forward() (src.torch_mist.ratio.conditional_dist.conditionaldistributionratio method)": [[42, "src.torch_mist.ratio.conditional_dist.ConditionalDistributionRatio.forward"]], "src.torch_mist.ratio.conditional_dist": [[42, "module-src.torch_mist.ratio.conditional_dist"]], "jointratioestimatormlp (class in src.torch_mist.ratio)": [[43, "src.torch_mist.ratio.JointRatioEstimatorMLP"]], "jointunnormalizedratioestimator (class in src.torch_mist.ratio)": [[43, "src.torch_mist.ratio.JointUnnormalizedRatioEstimator"]], "separableratioestimatormlp (class in src.torch_mist.ratio)": [[43, "src.torch_mist.ratio.SeparableRatioEstimatorMLP"]], "separableunnormalizedratioestimator (class in src.torch_mist.ratio)": [[43, "src.torch_mist.ratio.SeparableUnnormalizedRatioEstimator"]], "unnormalizedratioestimator (class in src.torch_mist.ratio)": [[43, "src.torch_mist.ratio.UnnormalizedRatioEstimator"]], "forward() (src.torch_mist.ratio.jointunnormalizedratioestimator method)": [[43, "src.torch_mist.ratio.JointUnnormalizedRatioEstimator.forward"]], "forward() (src.torch_mist.ratio.separableunnormalizedratioestimator method)": [[43, "src.torch_mist.ratio.SeparableUnnormalizedRatioEstimator.forward"]], "forward() (src.torch_mist.ratio.unnormalizedratioestimator method)": [[43, "src.torch_mist.ratio.UnnormalizedRatioEstimator.forward"]], "src.torch_mist.ratio": [[43, "module-src.torch_mist.ratio"]], "jointratioestimatormlp (class in src.torch_mist.ratio.joint)": [[44, "src.torch_mist.ratio.joint.JointRatioEstimatorMLP"]], "jointunnormalizedratioestimator (class in src.torch_mist.ratio.joint)": [[44, "src.torch_mist.ratio.joint.JointUnnormalizedRatioEstimator"]], "forward() (src.torch_mist.ratio.joint.jointunnormalizedratioestimator method)": [[44, "src.torch_mist.ratio.joint.JointUnnormalizedRatioEstimator.forward"]], "src.torch_mist.ratio.joint": [[44, "module-src.torch_mist.ratio.joint"]], "separableratioestimatormlp (class in src.torch_mist.ratio.separable)": [[45, "src.torch_mist.ratio.separable.SeparableRatioEstimatorMLP"]], "separableunnormalizedratioestimator (class in src.torch_mist.ratio.separable)": [[45, "src.torch_mist.ratio.separable.SeparableUnnormalizedRatioEstimator"]], "forward() (src.torch_mist.ratio.separable.separableunnormalizedratioestimator method)": [[45, "src.torch_mist.ratio.separable.SeparableUnnormalizedRatioEstimator.forward"]], "src.torch_mist.ratio.separable": [[45, "module-src.torch_mist.ratio.separable"]], "infomax (class in src.torch_mist.task)": [[46, "src.torch_mist.task.InfoMax"]], "__repr__() (src.torch_mist.task.infomax method)": [[46, "src.torch_mist.task.InfoMax.__repr__"]], "configure_optimizers() (src.torch_mist.task.infomax method)": [[46, "src.torch_mist.task.InfoMax.configure_optimizers"]], "forward() (src.torch_mist.task.infomax method)": [[46, "src.torch_mist.task.InfoMax.forward"]], "log_components() (src.torch_mist.task.infomax method)": [[46, "src.torch_mist.task.InfoMax.log_components"]], "shared_step() (src.torch_mist.task.infomax method)": [[46, "src.torch_mist.task.InfoMax.shared_step"]], "src.torch_mist.task": [[46, "module-src.torch_mist.task"]], "test_step() (src.torch_mist.task.infomax method)": [[46, "src.torch_mist.task.InfoMax.test_step"]], "training_step() (src.torch_mist.task.infomax method)": [[46, "src.torch_mist.task.InfoMax.training_step"]], "validation_step() (src.torch_mist.task.infomax method)": [[46, "src.torch_mist.task.InfoMax.validation_step"]], "infomax (class in src.torch_mist.task.infomax)": [[47, "src.torch_mist.task.infomax.InfoMax"]], "__repr__() (src.torch_mist.task.infomax.infomax method)": [[47, "src.torch_mist.task.infomax.InfoMax.__repr__"]], "configure_optimizers() (src.torch_mist.task.infomax.infomax method)": [[47, "src.torch_mist.task.infomax.InfoMax.configure_optimizers"]], "forward() (src.torch_mist.task.infomax.infomax method)": [[47, "src.torch_mist.task.infomax.InfoMax.forward"]], "log_components() (src.torch_mist.task.infomax.infomax method)": [[47, "src.torch_mist.task.infomax.InfoMax.log_components"]], "shared_step() (src.torch_mist.task.infomax.infomax method)": [[47, "src.torch_mist.task.infomax.InfoMax.shared_step"]], "src.torch_mist.task.infomax": [[47, "module-src.torch_mist.task.infomax"]], "test_step() (src.torch_mist.task.infomax.infomax method)": [[47, "src.torch_mist.task.infomax.InfoMax.test_step"]], "training_step() (src.torch_mist.task.infomax.infomax method)": [[47, "src.torch_mist.task.infomax.InfoMax.training_step"]], "validation_step() (src.torch_mist.task.infomax.infomax method)": [[47, "src.torch_mist.task.infomax.InfoMax.validation_step"]]}})