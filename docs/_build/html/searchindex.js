Search.setIndex({"docnames": [".pytest_cache/README", "autoapi/index", "autoapi/torch_mist/baselines/index", "autoapi/torch_mist/critic/base/index", "autoapi/torch_mist/critic/index", "autoapi/torch_mist/critic/joint/index", "autoapi/torch_mist/critic/separable/index", "autoapi/torch_mist/critic/utils/index", "autoapi/torch_mist/distributions/conditional/categorical/index", "autoapi/torch_mist/distributions/conditional/correlated_normal/index", "autoapi/torch_mist/distributions/conditional/index", "autoapi/torch_mist/distributions/index", "autoapi/torch_mist/distributions/parametrizations/index", "autoapi/torch_mist/distributions/parametrizations/map/index", "autoapi/torch_mist/distributions/product/index", "autoapi/torch_mist/distributions/transforms/base/index", "autoapi/torch_mist/distributions/transforms/index", "autoapi/torch_mist/distributions/transforms/linear/index", "autoapi/torch_mist/distributions/transforms/permute/index", "autoapi/torch_mist/distributions/transforms/split/index", "autoapi/torch_mist/distributions/utils/index", "autoapi/torch_mist/estimators/base/index", "autoapi/torch_mist/estimators/discriminative/index", "autoapi/torch_mist/estimators/generative/index", "autoapi/torch_mist/estimators/hybrid/index", "autoapi/torch_mist/estimators/index", "autoapi/torch_mist/index", "autoapi/torch_mist/nn/index", "autoapi/torch_mist/nn/utils/index", "autoapi/torch_mist/quantization/index", "autoapi/torch_mist/utils/data/index", "autoapi/torch_mist/utils/estimate/index", "autoapi/torch_mist/utils/index", "changelog", "conduct", "contributing", "example", "index"], "filenames": [".pytest_cache/README.md", "autoapi/index.rst", "autoapi/torch_mist/baselines/index.rst", "autoapi/torch_mist/critic/base/index.rst", "autoapi/torch_mist/critic/index.rst", "autoapi/torch_mist/critic/joint/index.rst", "autoapi/torch_mist/critic/separable/index.rst", "autoapi/torch_mist/critic/utils/index.rst", "autoapi/torch_mist/distributions/conditional/categorical/index.rst", "autoapi/torch_mist/distributions/conditional/correlated_normal/index.rst", "autoapi/torch_mist/distributions/conditional/index.rst", "autoapi/torch_mist/distributions/index.rst", "autoapi/torch_mist/distributions/parametrizations/index.rst", "autoapi/torch_mist/distributions/parametrizations/map/index.rst", "autoapi/torch_mist/distributions/product/index.rst", "autoapi/torch_mist/distributions/transforms/base/index.rst", "autoapi/torch_mist/distributions/transforms/index.rst", "autoapi/torch_mist/distributions/transforms/linear/index.rst", "autoapi/torch_mist/distributions/transforms/permute/index.rst", "autoapi/torch_mist/distributions/transforms/split/index.rst", "autoapi/torch_mist/distributions/utils/index.rst", "autoapi/torch_mist/estimators/base/index.rst", "autoapi/torch_mist/estimators/discriminative/index.rst", "autoapi/torch_mist/estimators/generative/index.rst", "autoapi/torch_mist/estimators/hybrid/index.rst", "autoapi/torch_mist/estimators/index.rst", "autoapi/torch_mist/index.rst", "autoapi/torch_mist/nn/index.rst", "autoapi/torch_mist/nn/utils/index.rst", "autoapi/torch_mist/quantization/index.rst", "autoapi/torch_mist/utils/data/index.rst", "autoapi/torch_mist/utils/estimate/index.rst", "autoapi/torch_mist/utils/index.rst", "changelog.md", "conduct.md", "contributing.md", "example.ipynb", "index.md"], "titles": ["pytest cache directory", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.baselines</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.joint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.separable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.conditional.categorical</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.conditional.correlated_normal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.conditional</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.parametrizations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.parametrizations.map</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.product</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.hybrid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.nn.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.estimate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils</span></code>", "Changelog", "Code of Conduct", "Contributing", "Example usage", "Mist - A PyTorch Mutual information Estimation toolkit"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 9, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 29, 34, 35, 37], "contain": [0, 1, 2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "data": [0, 1, 26, 32], "from": [0, 13, 16, 17, 18, 19, 21, 25, 30, 34], "": [0, 16, 18, 21, 25, 34, 35], "plugin": 0, "which": [0, 9, 16, 17, 21, 25, 34], "provid": [0, 8, 9, 10, 15, 16], "lf": 0, "ff": [0, 16, 18], "option": [0, 2, 4, 6, 13, 20, 22, 23, 24, 25, 31], "well": 0, "fixtur": 0, "do": [0, 28, 34], "commit": [0, 34, 35], "version": [0, 34, 35], "control": 0, "see": 0, "doc": [0, 35], "more": [0, 16, 18], "inform": [0, 21, 25, 34], "page": 1, "auto": 1, "gener": [1, 14, 15, 16, 20, 24, 25, 26], "document": 1, "1": [1, 2, 3, 4, 5, 6, 7, 9, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 34, 36], "torch_mist": [1, 33, 35, 36, 37], "critic": [1, 22, 25, 26, 34], "base": [1, 2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 37], "joint": [1, 4, 22, 25, 26], "separ": [1, 4, 22, 25, 26, 34], "util": [1, 4, 11, 26, 27], "distribut": [1, 23, 25, 26, 28, 30], "condit": [1, 11, 15, 16, 17, 26, 28], "categor": [1, 10, 11, 26], "correlated_norm": [1, 10, 11, 26], "parametr": [1, 11, 26], "map": [1, 11, 12, 26], "transform": [1, 9, 11, 20, 26, 28], "linear": [1, 11, 16, 20, 26], "permut": [1, 11, 16, 26], "split": [1, 11, 16, 26], "product": [1, 11, 26], "estim": [1, 3, 4, 5, 6, 26, 32], "discrimin": [1, 24, 25, 26], "hybrid": [1, 25, 26], "nn": [1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29], "baselin": [1, 22, 25, 26], "quantiz": [1, 23, 26], "creat": [1, 8, 9, 10, 15, 16, 18, 34, 35, 37], "sphinx": 1, "autoapi": 1, "arg": [2, 3, 4, 21, 23, 25, 28, 29], "kwarg": [2, 3, 4, 7, 21, 22, 23, 25, 28, 29], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31], "torch": [2, 3, 4, 5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31], "all": [2, 3, 4, 5, 6, 16, 17, 19, 21, 22, 23, 24, 25, 28, 29, 34, 35], "neural": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "network": [2, 3, 4, 5, 6, 16, 18, 21, 22, 23, 24, 25, 28, 29], "your": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29, 35], "model": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "should": [2, 3, 4, 5, 6, 9, 16, 17, 19, 21, 22, 23, 24, 25, 28, 29, 35], "also": [2, 3, 4, 5, 6, 9, 16, 17, 19, 21, 22, 23, 24, 25, 28, 29], "subclass": [2, 3, 4, 5, 6, 16, 17, 19, 21, 22, 23, 24, 25, 28, 29], "can": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29, 35], "other": [2, 3, 4, 5, 6, 16, 18, 21, 22, 23, 24, 25, 28, 29, 34], "allow": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "nest": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "them": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "tree": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "structur": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "you": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29, 35, 37], "assign": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "submodul": [2, 3, 5, 6, 21, 22, 23, 24, 28, 29], "regular": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "attribut": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "import": [2, 3, 4, 5, 6, 16, 18, 21, 22, 23, 24, 25, 28, 29, 36], "function": [2, 3, 5, 6, 15, 21, 23, 24, 28, 29, 35], "f": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "def": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "__init__": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "self": [2, 3, 4, 5, 6, 13, 15, 16, 21, 22, 23, 24, 25, 28, 29], "super": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "conv1": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "conv2d": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "20": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "5": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "conv2": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "forward": [2, 3, 4, 5, 6, 9, 16, 17, 19, 21, 22, 23, 24, 25, 28, 29], "x": [2, 3, 4, 5, 6, 8, 9, 10, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 29], "relu": [2, 3, 4, 5, 6, 7, 21, 22, 23, 24, 25, 28, 29], "return": [2, 3, 4, 5, 6, 8, 9, 10, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30], "wai": [2, 3, 4, 5, 6, 8, 9, 10, 15, 16, 21, 22, 23, 24, 25, 28, 29, 34], "regist": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "have": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29, 34, 35], "paramet": [2, 3, 4, 5, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29], "convert": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "too": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "when": [2, 3, 4, 5, 6, 9, 16, 17, 18, 21, 22, 23, 24, 25, 28, 29, 30, 34, 35], "call": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "etc": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "As": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "per": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "exampl": [2, 3, 4, 5, 6, 9, 16, 17, 18, 21, 22, 23, 24, 25, 28, 29, 34], "abov": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "an": [2, 3, 4, 5, 6, 8, 9, 10, 15, 16, 18, 21, 22, 23, 24, 25, 28, 29, 34], "parent": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "must": [2, 3, 4, 5, 6, 9, 16, 17, 18, 21, 22, 23, 24, 25, 28, 29], "made": [2, 3, 4, 5, 6, 16, 18, 21, 22, 23, 24, 25, 28, 29], "befor": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29, 35], "child": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "variabl": [2, 3, 4, 5, 6, 16, 18, 21, 22, 23, 24, 25, 28, 29], "train": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "bool": [2, 3, 4, 5, 6, 9, 15, 16, 17, 21, 22, 23, 24, 25, 28, 29], "boolean": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "repres": [2, 3, 4, 5, 6, 9, 13, 16, 17, 18, 21, 22, 23, 24, 25, 28, 29, 34], "whether": [2, 3, 4, 5, 6, 9, 16, 17, 21, 22, 23, 24, 25, 28, 29], "i": [2, 3, 4, 5, 6, 9, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 34, 35, 37], "evalu": [2, 3, 4, 5, 6, 15, 16, 20, 21, 22, 23, 24, 25, 28, 29], "mode": [2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 28, 29], "abstract": [2, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22], "f_": [2, 22, 25], "tensor": [2, 3, 4, 5, 6, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31], "y": [2, 3, 4, 5, 6, 9, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25], "none": [2, 4, 6, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 31], "constantbaselin": [2, 22, 25], "valu": [2, 3, 4, 5, 6, 9, 15, 16, 17, 18, 20, 21, 25, 28], "float": [2, 4, 6, 7, 9, 10, 13, 16, 17, 22, 25, 31], "0": [2, 4, 6, 7, 9, 13, 16, 17, 18, 22, 25, 36], "exponentialmovingaverag": 2, "gamma": [2, 22, 25], "9": [2, 22, 25], "batchlogmeanexp": 2, "dim": [2, 16, 18, 28], "learnablebaselin": 2, "net": [2, 8, 10, 16, 17, 28], "learnablemlpbaselin": 2, "x_dim": [2, 4, 7, 22, 25], "int": [2, 4, 7, 9, 13, 16, 17, 18, 20, 22, 25, 28, 29, 30, 31], "hidden_dim": [2, 4, 7, 16, 17, 20, 22, 25, 28], "list": [2, 4, 7, 13, 15, 16, 20, 22, 25, 28], "nonlinear": [2, 4, 7, 22, 25, 28], "ani": [2, 20, 22, 25, 31, 34, 35], "true": [2, 4, 7, 9, 16, 17, 22, 25], "learnablejointbaselin": [2, 22, 25], "learnablejointmlpbaselin": 2, "y_dim": [2, 4, 7, 22, 25], "interpolatedbaselin": 2, "baseline_1": 2, "baseline_2": 2, "alpha": [2, 22, 25], "alphatubabaselin": 2, "comput": [3, 4, 5, 6, 9, 16, 17, 19, 21, 25], "pair": [3, 4, 5, 6], "param": [3, 4, 5, 6, 17, 21, 25], "The": [3, 4, 5, 6, 9, 13, 16, 17, 28, 34, 35], "ratio": [3, 4, 5, 6, 21, 25], "given": [3, 4, 5, 6, 9, 16, 17, 19, 35], "modul": [4, 10, 16, 25], "jointcrit": [4, 5], "joint_net": [4, 5], "separablecrit": [4, 6, 22, 25], "f_x": [4, 6], "f_y": [4, 6], "temperatur": [4, 6, 7], "critic_typ": [4, 7, 22, 25], "joint_crit": [4, 7], "separable_crit": [4, 7], "projection_head": [4, 7], "str": [4, 7, 13, 15, 16, 20, 23, 31], "symmetr": [4, 7], "output_dim": [4, 7, 20], "128": [4, 7], "conditionalcategor": [8, 10], "pyro": [8, 9, 10, 15, 16, 17, 18, 19, 23, 25, 28], "conditionaldistribut": [8, 9, 10, 15, 16, 23, 25], "helper": [8, 9, 10, 15, 16, 18], "standard": [8, 9, 10, 15, 16], "abc": [8, 9, 10, 15, 16, 30], "us": [8, 9, 10, 15, 16, 17, 18, 19, 28, 34, 35, 36], "inherit": [8, 9, 10, 15, 16, 17, 19], "type": [8, 9, 10, 13, 15, 16, 17, 18, 21, 25, 31], "correlatednorm": [9, 10], "rho": [9, 10], "context": [9, 10, 15, 16, 17, 18], "cubicptransform": 9, "k1": 9, "k3": 9, "invert": [9, 16, 17, 18], "log": [9, 15, 16, 17, 18, 19, 20], "det": [9, 16, 17, 19], "jacobian": [9, 16, 17, 18, 19], "thei": [9, 16, 17, 19, 34, 35], "ar": [9, 14, 15, 16, 17, 19, 20, 21, 25, 34, 35], "primarili": [9, 16, 17], "transformeddistribut": [9, 16, 17, 18], "cach": [9, 16, 17], "whose": [9, 16, 17], "invers": [9, 16, 17, 19], "either": [9, 16, 17], "expens": [9, 16, 17], "numer": [9, 16, 17], "unstabl": [9, 16, 17], "note": [9, 16, 17, 18, 28, 35, 37], "care": [9, 16, 17], "taken": [9, 16, 17], "memoiz": [9, 16, 17], "sinc": [9, 16, 17, 18], "autograd": [9, 16, 17], "graph": [9, 16, 17], "mai": [9, 16, 17, 34], "revers": [9, 16, 17], "For": [9, 16, 17], "while": [9, 16, 17], "follow": [9, 16, 17, 21, 25, 34], "work": [9, 16, 17, 18, 35], "without": [9, 16, 17, 34], "t": [9, 16, 17, 21, 25], "log_abs_det_jacobian": [9, 16, 17, 18, 19], "backward": [9, 16, 17], "receiv": [9, 16, 17], "gradient": [9, 16, 17], "howev": [9, 16, 17, 18], "error": [9, 16, 17], "due": [9, 16, 17], "depend": [9, 16, 17], "z": [9, 16, 17, 28], "inv": [9, 16, 17], "grad": [9, 16, 17], "sum": [9, 16, 17, 18], "becaus": [9, 16, 17], "deriv": [9, 16, 17], "implement": [9, 16, 17, 28], "one": [9, 13, 16, 17], "both": [9, 16, 17, 34], "_call": [9, 16, 17, 18, 19], "_invers": [9, 16, 17, 18, 19], "set": [9, 16, 17, 34, 35], "biject": [9, 16, 17, 18], "cache_s": [9, 16, 17, 18], "size": [9, 14, 15, 16, 17, 20, 28, 34], "If": [9, 16, 17, 35], "zero": [9, 16, 17, 18], "done": [9, 16, 17, 35], "latest": [9, 16, 17], "singl": [9, 16, 17], "onli": [9, 16, 17], "support": [9, 16, 17, 35], "domain": [9, 16, 17, 19], "constraint": [9, 16, 17], "valid": [9, 16, 17], "input": [9, 16, 17, 18, 19, 28], "codomain": [9, 16, 17, 19], "output": [9, 16, 17, 18, 19, 28], "A": [9, 16, 17, 18], "iff": [9, 16, 17], "everi": [9, 16, 17, 35], "least": [9, 16, 17], "maintain": [9, 16, 17, 34], "weaker": [9, 16, 17], "pseudoinvers": [9, 16, 17], "properti": [9, 16, 17, 20, 21, 29], "sign": [9, 16, 17], "univari": [9, 16, 17], "monoton": [9, 16, 17], "increas": [9, 16, 17, 18], "decreas": [9, 16, 17], "method": [9, 13, 16, 17, 19], "dy": [9, 16, 17, 19], "dx": [9, 16, 17, 19], "randomfliptransform": 9, "fals": [9, 15, 16, 17, 22], "cubiccorrelatednorm": [9, 10], "translat": 9, "b": [9, 28, 35], "skewedcorrelatednorm": [9, 10], "epsilon": [13, 16, 17], "1e": [13, 16, 17], "06": [13, 16, 17], "parametermap": 13, "dictionari": 13, "supported_distribut": 13, "n_paramet": 13, "map_paramet": 13, "parameter_list": 13, "dict": [13, 15, 16, 20, 23, 31], "respons": 13, "defin": [13, 16, 18, 34], "interest": [13, 34, 37], "name": [13, 35], "__call__": 13, "union": [13, 15, 16], "extra_repr": 13, "__repr__": [13, 15, 16, 22, 23, 25, 28], "repr": [13, 15, 16, 22, 23, 25, 28], "deltamap": 13, "delta": 13, "same": 13, "locat": 13, "locscalemap": 13, "scale": [13, 16, 17, 20], "scale_offset": 13, "logitsmap": 13, "temperaturelogitsmap": 13, "2": 13, "shuffledbatchdistribut": 14, "probabl": [14, 15, 16, 20], "rsampl": [14, 15, 16, 20], "sample_shap": [14, 15, 16, 20], "shape": [14, 15, 16, 18, 20, 21, 25, 28], "reparameter": [14, 15, 16, 20], "sampl": [14, 15, 16, 18, 20, 21, 23, 25], "batch": [14, 15, 16, 20], "distributionmodul": [15, 16, 20], "validate_arg": [15, 16], "conditionaldistributionmodul": [15, 16], "conditionaltransformeddistributionmodul": [15, 16], "base_dist": [15, 16, 18], "conditionaltransform": [15, 16, 17], "conditionaltransformeddistribut": [15, 16], "clear_cach": [15, 16], "transformeddistributionmodul": [15, 16], "log_prob": [15, 16, 20], "densiti": [15, 16, 20], "mass": [15, 16, 20], "input_dim": [16, 17, 18, 19, 20, 28], "loc": [16, 17, 20], "initial_scal": [16, 17], "conditionedlinear": [16, 17], "transformmodul": [16, 17, 18, 19], "_param": [16, 17], "conditionallinear": [16, 17], "skip_connect": [16, 17], "conditionaltransformmodul": [16, 17], "learnabl": [16, 17, 19], "normal": [16, 17, 18, 19], "flow": [16, 17, 19, 28], "rather": [16, 17, 19], "than": [16, 17, 19], "so": [16, 17, 18, 19, 28], "conditional_linear": [16, 17, 20], "context_dim": [16, 17, 20, 28], "conditional_skip_linear": [16, 17], "learn_loc": [16, 17], "splittransform": [16, 19], "out_dim": [16, 19], "dist": [16, 18, 19, 20], "add_dim": [16, 19], "remove_dim": [16, 19], "reorder": [16, 18], "dimens": [16, 18, 28], "multipli": [16, 18], "matrix": [16, 18], "between": [16, 18], "affineautoregress": [16, 18], "flexibl": [16, 18], "result": [16, 18], "stabil": [16, 18], "learn": [16, 18], "whilst": [16, 18], "being": [16, 18], "autoregress": [16, 18, 28], "absolut": [16, 18], "determin": [16, 18, 34], "easili": [16, 18], "calcul": [16, 18], "two": [16, 18, 28], "layer": [16, 18, 28], "equival": [16, 18], "insid": [16, 18], "those": [16, 18], "iaf": [16, 18], "usag": [16, 18, 28], "autoregressivenn": [16, 18], "10": [16, 18, 28], "ones": [16, 18], "iaf1": [16, 18], "40": [16, 18], "randperm": [16, 18], "dtype": [16, 18], "long": [16, 18], "iaf2": [16, 18], "flow_dist": [16, 18], "longtensor": [16, 18, 29], "order": [16, 18], "appli": [16, 18, 21, 28, 34], "neg": [16, 18], "event": [16, 18, 34], "ab": [16, 18], "update_devic": [16, 18], "invok": [16, 18], "prototyp": [16, 18], "previou": [16, 18], "elementwis": [16, 18], "e": [16, 18, 28, 34], "dy_0": [16, 18], "dx_0": [16, 18], "dy_": [16, 18], "n": [16, 18, 21, 25], "dx_": [16, 18], "express": [16, 18, 34], "turn": [16, 18], "out": [16, 18, 37], "alwai": [16, 18, 35], "vector": [16, 18], "object": [16, 18, 21, 25], "consist": [16, 18], "tupl": [16, 18, 30, 31], "correspond": [16, 18], "integ": [16, 18], "indic": [16, 18], "default": [16, 18, 28], "random": [16, 18], "fetch_transform": 20, "transform_nam": 20, "parametricnorm": 20, "conditional_transformed_norm": 20, "n_transform": 20, "transform_param": 20, "flowtransformednorm": 20, "flow_transformed_norm": 20, "conditional_categor": 20, "n_class": 20, "conditional_mutivariate_categor": 20, "loss": [21, 25], "__add__": 21, "__sub__": 21, "fn": 21, "logratioestim": [21, 25], "log_ratio": [21, 22, 23, 24, 25], "mutualinformationestim": [21, 22, 23, 24, 25, 31], "lower_bound": [21, 22, 25], "upper_bound": [21, 22, 25], "d": [21, 25], "p": [21, 25], "m": [21, 25], "j": [21, 22, 25], "quantiti": [21, 25], "differenti": [21, 25], "maxim": [21, 25], "mutual": [21, 25], "w": [21, 25], "r": [21, 25], "propos": [21, 25, 35], "encod": [21, 25], "compon": [21, 25], "discriminativemutualinformationestim": [22, 24, 25], "unnormalized_log_ratio": [22, 25], "mc_sampl": [22, 25], "sample_propos": 22, "_compute_log_ratio": [22, 25], "y_": [22, 25], "_compute_log_ratio_grad": [22, 25], "nwj": [22, 25], "tuba": [22, 25], "grad_baselin": [22, 25], "mine": [22, 25], "infonc": [22, 25], "alphatuba": [22, 25], "smile": [22, 25], "tau": [22, 25], "flo": [22, 25], "alpha_tuba": [22, 25], "01": [22, 25], "learnable_baselin": [22, 25], "generativemutualinformationestim": [23, 25], "log_prob_i": [23, 25], "log_prob_y_x": [23, 25], "compute_loss": [23, 25], "log_p_i": [23, 25], "log_p_y_x": [23, 25], "variationalproposalmutualinformationestim": [23, 24, 25], "conditional_y_x": [23, 25], "ba": [23, 25], "marginal_i": [23, 25], "h_y": [23, 25], "doe": [23, 25], "gm": [23, 25], "joint_xi": [23, 25], "marginal_x": [23, 25], "h_x": [23, 25], "log_prob_x": [23, 25], "club": 23, "l1out": 23, "pq": 23, "conditional_qx_i": 23, "q": 23, "quantizationfunct": [23, 29], "expected_log_ratio": 23, "hybridmutualinformationestim": [24, 25], "generative_estim": [24, 25], "discriminative_estim": [24, 25], "__version__": [26, 36], "jointdensenn": 28, "param_dim": 28, "densenn": 28, "simpl": 28, "dens": 28, "feedforward": 28, "g": 28, "some": 28, "conditionalplanarflow": 28, "uncondit": 28, "affinecoupl": 28, "requir": [28, 35], "rand": 28, "100": 28, "50": 28, "c": 28, "dimension": 28, "hidden": 28, "unit": 28, "p_n": 28, "final": 28, "unbound": 28, "real": 28, "number": 28, "constant": 28, "ident": [28, 34], "skipdensenn": 28, "mergeoutput": 28, "num_bin": 29, "sampledataload": 30, "joint_dist": 30, "batch_siz": 30, "max_sampl": 30, "100000": 30, "split_dim": 30, "collect": [30, 31], "iter": [30, 31], "__next__": 30, "next": 30, "item": 30, "exhaust": 30, "rais": 30, "stopiter": 30, "__len__": 30, "optimize_mi_estim": 31, "dataload": 31, "n_epoch": 31, "optimizer_class": 31, "optim": 31, "adam": 31, "optimizer_param": 31, "panda": 31, "datafram": 31, "estimate_mi": 31, "estimate_mi_std": 31, "first": 33, "releas": [33, 35, 37], "In": 34, "foster": 34, "open": [34, 35], "welcom": [34, 35], "environ": 34, "we": 34, "contributor": 34, "make": [34, 35], "particip": 34, "project": [34, 35, 36, 37], "commun": 34, "harass": 34, "free": [34, 35], "experi": 34, "everyon": 34, "regardless": 34, "ag": 34, "bodi": 34, "disabl": 34, "ethnic": 34, "gender": 34, "level": 34, "nation": 34, "person": 34, "appear": 34, "race": 34, "religion": 34, "sexual": 34, "orient": 34, "behavior": 34, "contribut": 34, "posit": 34, "includ": [34, 35], "inclus": 34, "languag": 34, "Being": 34, "respect": 34, "differ": 34, "viewpoint": 34, "gracefulli": 34, "accept": 34, "construct": 34, "focus": 34, "what": 34, "best": 34, "show": 34, "empathi": 34, "toward": 34, "member": 34, "unaccept": 34, "imageri": 34, "unwelcom": 34, "attent": 34, "advanc": 34, "troll": 34, "insult": 34, "derogatori": 34, "comment": 34, "polit": 34, "attack": 34, "public": 34, "privat": 34, "publish": 34, "physic": 34, "electron": 34, "address": 34, "explicit": 34, "permiss": 34, "could": 34, "reason": 34, "consid": 34, "inappropri": 34, "profession": 34, "clarifi": 34, "expect": 34, "take": 34, "appropri": [34, 35], "fair": 34, "correct": 34, "action": 34, "instanc": 34, "right": 34, "remov": 34, "edit": 34, "reject": 34, "wiki": 34, "issu": [34, 35], "align": 34, "ban": 34, "temporarili": 34, "perman": 34, "deem": 34, "threaten": 34, "offens": 34, "harm": 34, "within": 34, "space": 34, "individu": 34, "its": [34, 35, 37], "offici": [34, 35], "mail": 34, "post": [34, 35], "via": 34, "social": 34, "media": 34, "account": 34, "act": 34, "appoint": 34, "onlin": 34, "offlin": 34, "represent": 34, "further": 34, "abus": 34, "otherwis": 34, "report": 34, "contact": 34, "team": 34, "review": 34, "investig": 34, "complaint": 34, "respond": 34, "circumst": 34, "oblig": 34, "confidenti": 34, "regard": 34, "incid": 34, "detail": [34, 35], "specif": 34, "polici": 34, "who": 34, "good": 34, "faith": 34, "face": 34, "temporari": 34, "repercuss": 34, "leadership": 34, "adapt": 34, "coven": 34, "homepag": 34, "4": 34, "greatli": 35, "appreci": 35, "littl": 35, "bit": 35, "help": 35, "credit": 35, "pleas": [35, 37], "oper": 35, "system": 35, "about": 35, "local": 35, "setup": 35, "might": 35, "troubleshoot": 35, "step": 35, "reproduc": 35, "look": 35, "through": 35, "github": 35, "anyth": 35, "tag": 35, "want": 35, "whoever": 35, "enhanc": 35, "never": 35, "enough": 35, "feel": 35, "part": 35, "docstr": 35, "even": 35, "web": 35, "blog": 35, "articl": 35, "explain": 35, "how": 35, "would": 35, "keep": 35, "scope": 35, "narrow": 35, "possibl": 35, "easier": 35, "rememb": 35, "volunt": 35, "driven": 35, "readi": 35, "here": 35, "up": 35, "develop": 35, "download": 35, "copi": 35, "instal": 35, "poetri": 35, "git": 35, "similar": 35, "branch": 35, "chang": 35, "checkout": 35, "bugfix": 35, "re": 35, "check": [35, 37], "conform": 35, "format": 35, "pass": 35, "test": 35, "meet": 35, "addit": 35, "add": 35, "updat": 35, "current": 35, "python": 35, "By": [35, 37], "agre": [35, 37], "abid": [35, 37], "term": [35, 37], "To": 36, "print": 36, "TO": 37, "BE": 37, "soon": 37, "pip": 37, "todo": 37, "guidelin": 37, "code": 37, "conduct": 37, "wa": 37, "marco": 37, "federici": 37, "It": 37, "under": 37, "mit": 37, "cookiecutt": 37, "py": 37, "pkg": 37, "templat": 37}, "objects": {"": [[26, 0, 0, "-", "torch_mist"]], "torch_mist": [[26, 1, 1, "", "__version__"], [2, 0, 0, "-", "baselines"], [4, 0, 0, "-", "critic"], [11, 0, 0, "-", "distributions"], [25, 0, 0, "-", "estimators"], [27, 0, 0, "-", "nn"], [29, 0, 0, "-", "quantization"], [32, 0, 0, "-", "utils"]], "torch_mist.baselines": [[2, 2, 1, "", "AlphaTUBABaseline"], [2, 2, 1, "", "Baseline"], [2, 2, 1, "", "BatchLogMeanExp"], [2, 2, 1, "", "ConstantBaseline"], [2, 2, 1, "", "ExponentialMovingAverage"], [2, 2, 1, "", "InterpolatedBaseline"], [2, 2, 1, "", "LearnableBaseline"], [2, 2, 1, "", "LearnableJointBaseline"], [2, 2, 1, "", "LearnableJointMLPBaseline"], [2, 2, 1, "", "LearnableMLPBaseline"]], "torch_mist.baselines.Baseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.BatchLogMeanExp": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.ConstantBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.ExponentialMovingAverage": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.InterpolatedBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.LearnableBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.LearnableJointBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.critic": [[4, 2, 1, "", "Critic"], [4, 2, 1, "", "JointCritic"], [4, 2, 1, "", "SeparableCritic"], [3, 0, 0, "-", "base"], [4, 4, 1, "", "critic"], [5, 0, 0, "-", "joint"], [4, 4, 1, "", "joint_critic"], [6, 0, 0, "-", "separable"], [4, 4, 1, "", "separable_critic"], [7, 0, 0, "-", "utils"]], "torch_mist.critic.Critic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.JointCritic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.SeparableCritic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.base": [[3, 2, 1, "", "Critic"]], "torch_mist.critic.base.Critic": [[3, 3, 1, "", "forward"]], "torch_mist.critic.joint": [[5, 2, 1, "", "JointCritic"]], "torch_mist.critic.joint.JointCritic": [[5, 3, 1, "", "forward"]], "torch_mist.critic.separable": [[6, 2, 1, "", "SeparableCritic"]], "torch_mist.critic.separable.SeparableCritic": [[6, 3, 1, "", "forward"]], "torch_mist.critic.utils": [[7, 4, 1, "", "critic"], [7, 4, 1, "", "joint_critic"], [7, 4, 1, "", "separable_critic"]], "torch_mist.distributions": [[10, 0, 0, "-", "conditional"], [12, 0, 0, "-", "parametrizations"], [14, 0, 0, "-", "product"], [16, 0, 0, "-", "transforms"], [20, 0, 0, "-", "utils"]], "torch_mist.distributions.conditional": [[10, 2, 1, "", "ConditionalCategorical"], [10, 2, 1, "", "CorrelatedNormal"], [10, 2, 1, "", "CubicCorrelatedNormal"], [10, 2, 1, "", "SkewedCorrelatedNormal"], [8, 0, 0, "-", "categorical"], [9, 0, 0, "-", "correlated_normal"]], "torch_mist.distributions.conditional.ConditionalCategorical": [[10, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.CorrelatedNormal": [[10, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.CubicCorrelatedNormal": [[10, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.SkewedCorrelatedNormal": [[10, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.categorical": [[8, 2, 1, "", "ConditionalCategorical"]], "torch_mist.distributions.conditional.categorical.ConditionalCategorical": [[8, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.correlated_normal": [[9, 2, 1, "", "CorrelatedNormal"], [9, 2, 1, "", "CubicCorrelatedNormal"], [9, 2, 1, "", "CubicPTransform"], [9, 2, 1, "", "RandomFlipTransform"], [9, 2, 1, "", "SkewedCorrelatedNormal"], [9, 2, 1, "", "Translate"]], "torch_mist.distributions.conditional.correlated_normal.CorrelatedNormal": [[9, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.correlated_normal.CubicCorrelatedNormal": [[9, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.correlated_normal.CubicPTransform": [[9, 3, 1, "", "_call"], [9, 3, 1, "", "_inverse"], [9, 5, 1, "id0", "bijective"], [9, 5, 1, "id2", "codomain"], [9, 5, 1, "id1", "domain"], [9, 3, 1, "", "log_abs_det_jacobian"], [9, 5, 1, "", "sign"]], "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform": [[9, 3, 1, "", "_call"], [9, 5, 1, "id3", "bijective"], [9, 5, 1, "id5", "codomain"], [9, 5, 1, "id4", "domain"], [9, 5, 1, "", "sign"]], "torch_mist.distributions.conditional.correlated_normal.SkewedCorrelatedNormal": [[9, 3, 1, "", "condition"]], "torch_mist.distributions.conditional.correlated_normal.Translate": [[9, 3, 1, "", "_call"], [9, 3, 1, "", "_inverse"], [9, 5, 1, "id6", "bijective"], [9, 5, 1, "id8", "codomain"], [9, 5, 1, "id7", "domain"], [9, 3, 1, "", "log_abs_det_jacobian"], [9, 5, 1, "", "sign"]], "torch_mist.distributions.parametrizations": [[13, 0, 0, "-", "map"]], "torch_mist.distributions.parametrizations.map": [[13, 2, 1, "", "DeltaMap"], [13, 1, 1, "", "EPSILON"], [13, 2, 1, "", "LocScaleMap"], [13, 2, 1, "", "LogitsMap"], [13, 2, 1, "", "ParameterMap"], [13, 2, 1, "", "TemperatureLogitsMap"]], "torch_mist.distributions.parametrizations.map.DeltaMap": [[13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "n_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.LocScaleMap": [[13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.LogitsMap": [[13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "n_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.ParameterMap": [[13, 3, 1, "", "__call__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "extra_repr"], [13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "n_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.TemperatureLogitsMap": [[13, 3, 1, "", "map_parameters"], [13, 5, 1, "", "n_parameters"], [13, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.product": [[14, 2, 1, "", "ShuffledBatchDistribution"]], "torch_mist.distributions.product.ShuffledBatchDistribution": [[14, 3, 1, "", "rsample"], [14, 3, 1, "", "sample"]], "torch_mist.distributions.transforms": [[16, 2, 1, "", "ConditionalDistributionModule"], [16, 2, 1, "", "ConditionalLinear"], [16, 2, 1, "", "ConditionalTransformedDistributionModule"], [16, 2, 1, "", "DistributionModule"], [16, 2, 1, "", "Linear"], [16, 2, 1, "", "Permute"], [16, 2, 1, "", "SplitTransform"], [16, 2, 1, "", "TransformedDistributionModule"], [15, 0, 0, "-", "base"], [16, 4, 1, "", "conditional_linear"], [16, 4, 1, "", "conditional_skip_linear"], [17, 0, 0, "-", "linear"], [18, 0, 0, "-", "permute"], [19, 0, 0, "-", "split"]], "torch_mist.distributions.transforms.ConditionalLinear": [[16, 3, 1, "", "_params"], [16, 5, 1, "", "bijective"], [16, 5, 1, "", "codomain"], [16, 3, 1, "", "condition"], [16, 5, 1, "", "domain"]], "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule": [[16, 3, 1, "", "clear_cache"], [16, 3, 1, "", "condition"]], "torch_mist.distributions.transforms.DistributionModule": [[16, 3, 1, "", "__repr__"]], "torch_mist.distributions.transforms.Linear": [[16, 3, 1, "", "_params"], [16, 5, 1, "", "bijective"], [16, 5, 1, "", "codomain"], [16, 5, 1, "", "domain"], [16, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.Permute": [[16, 3, 1, "", "_call"], [16, 3, 1, "", "_inverse"], [16, 3, 1, "", "log_abs_det_jacobian"], [16, 3, 1, "", "update_device"]], "torch_mist.distributions.transforms.SplitTransform": [[16, 3, 1, "", "_call"], [16, 3, 1, "", "_inverse"], [16, 3, 1, "", "add_dims"], [16, 5, 1, "", "codomain"], [16, 3, 1, "", "dist"], [16, 5, 1, "", "domain"], [16, 3, 1, "", "log_abs_det_jacobian"], [16, 3, 1, "", "remove_dims"]], "torch_mist.distributions.transforms.TransformedDistributionModule": [[16, 3, 1, "", "__repr__"], [16, 3, 1, "", "log_prob"], [16, 3, 1, "", "rsample"]], "torch_mist.distributions.transforms.base": [[15, 2, 1, "", "ConditionalDistributionModule"], [15, 2, 1, "", "ConditionalTransformedDistributionModule"], [15, 2, 1, "", "DistributionModule"], [15, 2, 1, "", "TransformedDistributionModule"]], "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule": [[15, 3, 1, "", "clear_cache"], [15, 3, 1, "", "condition"]], "torch_mist.distributions.transforms.base.DistributionModule": [[15, 3, 1, "", "__repr__"]], "torch_mist.distributions.transforms.base.TransformedDistributionModule": [[15, 3, 1, "", "__repr__"], [15, 3, 1, "", "log_prob"], [15, 3, 1, "", "rsample"]], "torch_mist.distributions.transforms.linear": [[17, 2, 1, "", "ConditionalLinear"], [17, 2, 1, "", "ConditionedLinear"], [17, 2, 1, "", "Linear"], [17, 4, 1, "", "conditional_linear"], [17, 4, 1, "", "conditional_skip_linear"], [17, 4, 1, "", "linear"]], "torch_mist.distributions.transforms.linear.ConditionalLinear": [[17, 3, 1, "", "_params"], [17, 5, 1, "", "bijective"], [17, 5, 1, "", "codomain"], [17, 3, 1, "", "condition"], [17, 5, 1, "", "domain"]], "torch_mist.distributions.transforms.linear.ConditionedLinear": [[17, 3, 1, "", "_call"], [17, 3, 1, "", "_inverse"], [17, 5, 1, "id2", "bijective"], [17, 5, 1, "id1", "codomain"], [17, 5, 1, "id0", "domain"], [17, 3, 1, "", "log_abs_det_jacobian"], [17, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.linear.Linear": [[17, 3, 1, "", "_params"], [17, 5, 1, "", "bijective"], [17, 5, 1, "", "codomain"], [17, 5, 1, "", "domain"], [17, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.permute": [[18, 2, 1, "", "Permute"], [18, 4, 1, "", "permute"]], "torch_mist.distributions.transforms.permute.Permute": [[18, 3, 1, "", "_call"], [18, 3, 1, "", "_inverse"], [18, 3, 1, "", "log_abs_det_jacobian"], [18, 3, 1, "", "update_device"]], "torch_mist.distributions.transforms.split": [[19, 2, 1, "", "SplitTransform"]], "torch_mist.distributions.transforms.split.SplitTransform": [[19, 3, 1, "", "_call"], [19, 3, 1, "", "_inverse"], [19, 3, 1, "", "add_dims"], [19, 5, 1, "", "codomain"], [19, 3, 1, "", "dist"], [19, 5, 1, "", "domain"], [19, 3, 1, "", "log_abs_det_jacobian"], [19, 3, 1, "", "remove_dims"]], "torch_mist.distributions.utils": [[20, 2, 1, "", "FlowTransformedNormal"], [20, 2, 1, "", "ParametricNormal"], [20, 4, 1, "", "conditional_categorical"], [20, 4, 1, "", "conditional_mutivariate_categorical"], [20, 4, 1, "", "conditional_transformed_normal"], [20, 4, 1, "", "fetch_transform"], [20, 4, 1, "", "flow_transformed_normal"]], "torch_mist.distributions.utils.FlowTransformedNormal": [[20, 6, 1, "", "dist"], [20, 3, 1, "", "log_prob"], [20, 3, 1, "", "rsample"], [20, 3, 1, "", "sample"]], "torch_mist.distributions.utils.ParametricNormal": [[20, 3, 1, "", "log_prob"], [20, 3, 1, "", "rsample"]], "torch_mist.estimators": [[25, 2, 1, "", "AlphaTUBA"], [25, 2, 1, "", "BA"], [25, 2, 1, "", "DoE"], [25, 2, 1, "", "FLO"], [25, 2, 1, "", "GM"], [25, 2, 1, "", "HybridMutualInformationEstimator"], [25, 2, 1, "", "InfoNCE"], [25, 2, 1, "", "JS"], [25, 2, 1, "", "MINE"], [25, 2, 1, "", "MutualInformationEstimator"], [25, 2, 1, "", "NWJ"], [25, 2, 1, "", "SMILE"], [25, 2, 1, "", "TUBA"], [25, 4, 1, "", "alpha_tuba"], [21, 0, 0, "-", "base"], [22, 0, 0, "-", "discriminative"], [25, 4, 1, "", "flo"], [23, 0, 0, "-", "generative"], [24, 0, 0, "-", "hybrid"], [25, 4, 1, "", "infonce"], [25, 4, 1, "", "js"], [25, 4, 1, "", "mine"], [25, 4, 1, "", "nwj"], [25, 4, 1, "", "smile"], [25, 4, 1, "", "tuba"]], "torch_mist.estimators.BA": [[25, 3, 1, "", "compute_loss"], [25, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.DoE": [[25, 3, 1, "", "__repr__"]], "torch_mist.estimators.FLO": [[25, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.GM": [[25, 3, 1, "", "__repr__"], [25, 3, 1, "", "compute_loss"], [25, 3, 1, "", "log_prob_x"], [25, 3, 1, "", "log_prob_y"], [25, 3, 1, "", "log_prob_y_x"]], "torch_mist.estimators.HybridMutualInformationEstimator": [[25, 3, 1, "", "log_ratio"]], "torch_mist.estimators.InfoNCE": [[25, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.JS": [[25, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.MutualInformationEstimator": [[25, 3, 1, "", "forward"], [25, 5, 1, "", "lower_bound"], [25, 5, 1, "", "upper_bound"]], "torch_mist.estimators.NWJ": [[25, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.SMILE": [[25, 3, 1, "", "_compute_log_ratio"], [25, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.TUBA": [[25, 3, 1, "", "__repr__"], [25, 3, 1, "", "_compute_log_ratio"], [25, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.base": [[21, 2, 1, "", "Estimation"], [21, 2, 1, "", "LogRatioEstimator"], [21, 2, 1, "", "MutualInformationEstimator"]], "torch_mist.estimators.base.Estimation": [[21, 3, 1, "", "__add__"], [21, 3, 1, "", "__sub__"], [21, 3, 1, "", "apply"], [21, 5, 1, "", "loss"], [21, 6, 1, "", "shape"], [21, 5, 1, "", "value"]], "torch_mist.estimators.base.LogRatioEstimator": [[21, 3, 1, "", "forward"], [21, 3, 1, "", "log_ratio"]], "torch_mist.estimators.base.MutualInformationEstimator": [[21, 3, 1, "", "forward"], [21, 5, 1, "", "lower_bound"], [21, 5, 1, "", "upper_bound"]], "torch_mist.estimators.discriminative": [[22, 2, 1, "", "AlphaTUBA"], [22, 2, 1, "", "DiscriminativeMutualInformationEstimator"], [22, 2, 1, "", "FLO"], [22, 2, 1, "", "InfoNCE"], [22, 2, 1, "", "JS"], [22, 2, 1, "", "MINE"], [22, 2, 1, "", "NWJ"], [22, 2, 1, "", "SMILE"], [22, 2, 1, "", "TUBA"], [22, 4, 1, "", "alpha_tuba"], [22, 4, 1, "", "flo"], [22, 4, 1, "", "infonce"], [22, 4, 1, "", "js"], [22, 4, 1, "", "mine"], [22, 4, 1, "", "nwj"], [22, 4, 1, "", "smile"], [22, 4, 1, "", "tuba"]], "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator": [[22, 3, 1, "", "__repr__"], [22, 3, 1, "", "_compute_log_ratio"], [22, 3, 1, "", "_compute_log_ratio_grad"], [22, 3, 1, "", "log_ratio"], [22, 5, 1, "", "lower_bound"], [22, 3, 1, "", "sample_proposal"], [22, 5, 1, "", "upper_bound"]], "torch_mist.estimators.discriminative.FLO": [[22, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.discriminative.InfoNCE": [[22, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.discriminative.JS": [[22, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.discriminative.NWJ": [[22, 3, 1, "", "_compute_log_ratio"]], "torch_mist.estimators.discriminative.SMILE": [[22, 3, 1, "", "_compute_log_ratio"], [22, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.discriminative.TUBA": [[22, 3, 1, "", "__repr__"], [22, 3, 1, "", "_compute_log_ratio"], [22, 3, 1, "", "_compute_log_ratio_grad"]], "torch_mist.estimators.generative": [[23, 2, 1, "", "BA"], [23, 2, 1, "", "CLUB"], [23, 2, 1, "", "DoE"], [23, 2, 1, "", "GM"], [23, 2, 1, "", "GenerativeMutualInformationEstimator"], [23, 2, 1, "", "L1Out"], [23, 2, 1, "", "PQ"], [23, 2, 1, "", "VariationalProposalMutualInformationEstimator"]], "torch_mist.estimators.generative.BA": [[23, 3, 1, "", "compute_loss"], [23, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.generative.CLUB": [[23, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.generative.DoE": [[23, 3, 1, "", "__repr__"]], "torch_mist.estimators.generative.GM": [[23, 3, 1, "", "__repr__"], [23, 3, 1, "", "compute_loss"], [23, 3, 1, "", "log_prob_x"], [23, 3, 1, "", "log_prob_y"], [23, 3, 1, "", "log_prob_y_x"]], "torch_mist.estimators.generative.GenerativeMutualInformationEstimator": [[23, 3, 1, "", "compute_loss"], [23, 3, 1, "", "log_prob_y"], [23, 3, 1, "", "log_prob_y_x"], [23, 3, 1, "", "log_ratio"]], "torch_mist.estimators.generative.L1Out": [[23, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.generative.PQ": [[23, 3, 1, "", "__repr__"], [23, 3, 1, "", "expected_log_ratio"], [23, 3, 1, "", "log_prob_y"]], "torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator": [[23, 3, 1, "", "__repr__"], [23, 3, 1, "", "compute_loss"], [23, 3, 1, "", "log_prob_y_x"]], "torch_mist.estimators.hybrid": [[24, 2, 1, "", "HybridMutualInformationEstimator"]], "torch_mist.estimators.hybrid.HybridMutualInformationEstimator": [[24, 3, 1, "", "log_ratio"]], "torch_mist.nn": [[28, 0, 0, "-", "utils"]], "torch_mist.nn.utils": [[28, 2, 1, "", "Constant"], [28, 2, 1, "", "Identity"], [28, 2, 1, "", "JointDenseNN"], [28, 2, 1, "", "MergeOutputs"], [28, 2, 1, "", "SkipDenseNN"]], "torch_mist.nn.utils.Constant": [[28, 3, 1, "", "__repr__"], [28, 3, 1, "", "forward"]], "torch_mist.nn.utils.Identity": [[28, 3, 1, "", "forward"]], "torch_mist.nn.utils.JointDenseNN": [[28, 3, 1, "", "forward"]], "torch_mist.nn.utils.MergeOutputs": [[28, 3, 1, "", "forward"]], "torch_mist.nn.utils.SkipDenseNN": [[28, 3, 1, "", "forward"]], "torch_mist.quantization": [[29, 2, 1, "", "QuantizationFunction"]], "torch_mist.quantization.QuantizationFunction": [[29, 3, 1, "", "forward"], [29, 6, 1, "", "num_bins"]], "torch_mist.utils": [[30, 0, 0, "-", "data"], [31, 0, 0, "-", "estimate"]], "torch_mist.utils.data": [[30, 2, 1, "", "SampleDataLoader"]], "torch_mist.utils.data.SampleDataLoader": [[30, 3, 1, "", "__len__"], [30, 3, 1, "", "__next__"]], "torch_mist.utils.estimate": [[31, 4, 1, "", "estimate_mi"], [31, 4, 1, "", "estimate_mi_std"], [31, 4, 1, "", "optimize_mi_estimator"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:function", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"pytest": 0, "cach": 0, "directori": 0, "api": 1, "refer": 1, "torch_mist": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "baselin": 2, "modul": [2, 3, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31], "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31], "class": [2, 3, 4, 5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30], "critic": [3, 4, 5, 6, 7], "base": [3, 15, 21], "submodul": [4, 10, 11, 12, 16, 25, 26, 27, 32], "packag": [4, 10, 16, 25, 26], "function": [4, 7, 16, 17, 18, 20, 22, 25, 31], "joint": 5, "separ": 6, "util": [7, 20, 28, 30, 31, 32], "distribut": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "condit": [8, 9, 10], "categor": 8, "correlated_norm": 9, "subpackag": [11, 26], "parametr": [12, 13], "map": 13, "attribut": [13, 34], "product": 14, "transform": [15, 16, 17, 18, 19], "linear": 17, "permut": 18, "split": 19, "estim": [21, 22, 23, 24, 25, 31, 37], "discrimin": 22, "gener": 23, "hybrid": 24, "nn": [27, 28], "quantiz": 29, "data": 30, "changelog": 33, "v0": 33, "1": 33, "0": 33, "20": 33, "06": 33, "2023": 33, "code": [34, 35], "conduct": [34, 35], "our": 34, "pledg": 34, "standard": 34, "respons": 34, "scope": 34, "enforc": 34, "contribut": [35, 37], "type": 35, "report": 35, "bug": 35, "fix": 35, "implement": 35, "featur": 35, "write": 35, "document": 35, "submit": 35, "feedback": 35, "get": 35, "start": 35, "pull": 35, "request": 35, "guidelin": 35, "exampl": 36, "usag": [36, 37], "mist": 37, "A": 37, "pytorch": 37, "mutual": 37, "inform": 37, "toolkit": 37, "instal": 37, "licens": 37, "credit": 37}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pytest cache directory": [[0, "pytest-cache-directory"]], "API Reference": [[1, "api-reference"]], "torch_mist.baselines": [[2, "module-torch_mist.baselines"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [28, "classes"], [29, "classes"], [30, "classes"]], "torch_mist.critic.base": [[3, "module-torch_mist.critic.base"]], "torch_mist.critic": [[4, "module-torch_mist.critic"]], "Submodules": [[4, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [16, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [32, "submodules"]], "Package Contents": [[4, "package-contents"], [10, "package-contents"], [16, "package-contents"], [25, "package-contents"], [26, "package-contents"]], "Functions": [[4, "functions"], [7, "functions"], [16, "functions"], [17, "functions"], [18, "functions"], [20, "functions"], [22, "functions"], [25, "functions"], [31, "functions"]], "torch_mist.critic.joint": [[5, "module-torch_mist.critic.joint"]], "torch_mist.critic.separable": [[6, "module-torch_mist.critic.separable"]], "torch_mist.critic.utils": [[7, "module-torch_mist.critic.utils"]], "torch_mist.distributions.conditional.categorical": [[8, "module-torch_mist.distributions.conditional.categorical"]], "torch_mist.distributions.conditional.correlated_normal": [[9, "module-torch_mist.distributions.conditional.correlated_normal"]], "torch_mist.distributions.conditional": [[10, "module-torch_mist.distributions.conditional"]], "torch_mist.distributions": [[11, "module-torch_mist.distributions"]], "Subpackages": [[11, "subpackages"], [26, "subpackages"]], "torch_mist.distributions.parametrizations": [[12, "module-torch_mist.distributions.parametrizations"]], "torch_mist.distributions.parametrizations.map": [[13, "module-torch_mist.distributions.parametrizations.map"]], "Attributes": [[13, "attributes"]], "torch_mist.distributions.product": [[14, "module-torch_mist.distributions.product"]], "torch_mist.distributions.transforms.base": [[15, "module-torch_mist.distributions.transforms.base"]], "torch_mist.distributions.transforms": [[16, "module-torch_mist.distributions.transforms"]], "torch_mist.distributions.transforms.linear": [[17, "module-torch_mist.distributions.transforms.linear"]], "torch_mist.distributions.transforms.permute": [[18, "module-torch_mist.distributions.transforms.permute"]], "torch_mist.distributions.transforms.split": [[19, "module-torch_mist.distributions.transforms.split"]], "torch_mist.distributions.utils": [[20, "module-torch_mist.distributions.utils"]], "torch_mist.estimators.base": [[21, "module-torch_mist.estimators.base"]], "torch_mist.estimators.discriminative": [[22, "module-torch_mist.estimators.discriminative"]], "torch_mist.estimators.generative": [[23, "module-torch_mist.estimators.generative"]], "torch_mist.estimators.hybrid": [[24, "module-torch_mist.estimators.hybrid"]], "torch_mist.estimators": [[25, "module-torch_mist.estimators"]], "torch_mist": [[26, "module-torch_mist"]], "torch_mist.nn": [[27, "module-torch_mist.nn"]], "torch_mist.nn.utils": [[28, "module-torch_mist.nn.utils"]], "torch_mist.quantization": [[29, "module-torch_mist.quantization"]], "torch_mist.utils.data": [[30, "module-torch_mist.utils.data"]], "torch_mist.utils.estimate": [[31, "module-torch_mist.utils.estimate"]], "torch_mist.utils": [[32, "module-torch_mist.utils"]], "Changelog": [[33, "changelog"]], "v0.1.0 (20/06/2023)": [[33, "v0-1-0-20-06-2023"]], "Code of Conduct": [[34, "code-of-conduct"], [35, "code-of-conduct"]], "Our Pledge": [[34, "our-pledge"]], "Our Standards": [[34, "our-standards"]], "Our Responsibilities": [[34, "our-responsibilities"]], "Scope": [[34, "scope"]], "Enforcement": [[34, "enforcement"]], "Attribution": [[34, "attribution"]], "Contributing": [[35, "contributing"], [37, "contributing"]], "Types of Contributions": [[35, "types-of-contributions"]], "Report Bugs": [[35, "report-bugs"]], "Fix Bugs": [[35, "fix-bugs"]], "Implement Features": [[35, "implement-features"]], "Write Documentation": [[35, "write-documentation"]], "Submit Feedback": [[35, "submit-feedback"]], "Get Started!": [[35, "get-started"]], "Pull Request Guidelines": [[35, "pull-request-guidelines"]], "Example usage": [[36, "example-usage"]], "Mist - A PyTorch Mutual information Estimation toolkit": [[37, "mist-a-pytorch-mutual-information-estimation-toolkit"]], "Installation": [[37, "installation"]], "Usage": [[37, "usage"]], "License": [[37, "license"]], "Credits": [[37, "credits"]]}, "indexentries": {"alphatubabaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.AlphaTUBABaseline"]], "baseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.Baseline"]], "batchlogmeanexp (class in torch_mist.baselines)": [[2, "torch_mist.baselines.BatchLogMeanExp"]], "constantbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.ConstantBaseline"]], "exponentialmovingaverage (class in torch_mist.baselines)": [[2, "torch_mist.baselines.ExponentialMovingAverage"]], "interpolatedbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.InterpolatedBaseline"]], "learnablebaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableBaseline"]], "learnablejointbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableJointBaseline"]], "learnablejointmlpbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableJointMLPBaseline"]], "learnablemlpbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableMLPBaseline"]], "forward() (torch_mist.baselines.baseline method)": [[2, "torch_mist.baselines.Baseline.forward"]], "forward() (torch_mist.baselines.batchlogmeanexp method)": [[2, "torch_mist.baselines.BatchLogMeanExp.forward"]], "forward() (torch_mist.baselines.constantbaseline method)": [[2, "torch_mist.baselines.ConstantBaseline.forward"]], "forward() (torch_mist.baselines.exponentialmovingaverage method)": [[2, "torch_mist.baselines.ExponentialMovingAverage.forward"]], "forward() (torch_mist.baselines.interpolatedbaseline method)": [[2, "torch_mist.baselines.InterpolatedBaseline.forward"]], "forward() (torch_mist.baselines.learnablebaseline method)": [[2, "torch_mist.baselines.LearnableBaseline.forward"]], "forward() (torch_mist.baselines.learnablejointbaseline method)": [[2, "torch_mist.baselines.LearnableJointBaseline.forward"]], "module": [[2, "module-torch_mist.baselines"], [3, "module-torch_mist.critic.base"], [4, "module-torch_mist.critic"], [5, "module-torch_mist.critic.joint"], [6, "module-torch_mist.critic.separable"], [7, "module-torch_mist.critic.utils"], [8, "module-torch_mist.distributions.conditional.categorical"], [9, "module-torch_mist.distributions.conditional.correlated_normal"], [10, "module-torch_mist.distributions.conditional"], [11, "module-torch_mist.distributions"], [12, "module-torch_mist.distributions.parametrizations"], [13, "module-torch_mist.distributions.parametrizations.map"], [14, "module-torch_mist.distributions.product"], [15, "module-torch_mist.distributions.transforms.base"], [16, "module-torch_mist.distributions.transforms"], [17, "module-torch_mist.distributions.transforms.linear"], [18, "module-torch_mist.distributions.transforms.permute"], [19, "module-torch_mist.distributions.transforms.split"], [20, "module-torch_mist.distributions.utils"], [21, "module-torch_mist.estimators.base"], [22, "module-torch_mist.estimators.discriminative"], [23, "module-torch_mist.estimators.generative"], [24, "module-torch_mist.estimators.hybrid"], [25, "module-torch_mist.estimators"], [26, "module-torch_mist"], [27, "module-torch_mist.nn"], [28, "module-torch_mist.nn.utils"], [29, "module-torch_mist.quantization"], [30, "module-torch_mist.utils.data"], [31, "module-torch_mist.utils.estimate"], [32, "module-torch_mist.utils"]], "torch_mist.baselines": [[2, "module-torch_mist.baselines"]], "critic (class in torch_mist.critic.base)": [[3, "torch_mist.critic.base.Critic"]], "forward() (torch_mist.critic.base.critic method)": [[3, "torch_mist.critic.base.Critic.forward"]], "torch_mist.critic.base": [[3, "module-torch_mist.critic.base"]], "critic (class in torch_mist.critic)": [[4, "torch_mist.critic.Critic"]], "jointcritic (class in torch_mist.critic)": [[4, "torch_mist.critic.JointCritic"]], "separablecritic (class in torch_mist.critic)": [[4, "torch_mist.critic.SeparableCritic"]], "critic() (in module torch_mist.critic)": [[4, "torch_mist.critic.critic"]], "forward() (torch_mist.critic.critic method)": [[4, "torch_mist.critic.Critic.forward"]], "forward() (torch_mist.critic.jointcritic method)": [[4, "torch_mist.critic.JointCritic.forward"]], "forward() (torch_mist.critic.separablecritic method)": [[4, "torch_mist.critic.SeparableCritic.forward"]], "joint_critic() (in module torch_mist.critic)": [[4, "torch_mist.critic.joint_critic"]], "separable_critic() (in module torch_mist.critic)": [[4, "torch_mist.critic.separable_critic"]], "torch_mist.critic": [[4, "module-torch_mist.critic"]], "jointcritic (class in torch_mist.critic.joint)": [[5, "torch_mist.critic.joint.JointCritic"]], "forward() (torch_mist.critic.joint.jointcritic method)": [[5, "torch_mist.critic.joint.JointCritic.forward"]], "torch_mist.critic.joint": [[5, "module-torch_mist.critic.joint"]], "separablecritic (class in torch_mist.critic.separable)": [[6, "torch_mist.critic.separable.SeparableCritic"]], "forward() (torch_mist.critic.separable.separablecritic method)": [[6, "torch_mist.critic.separable.SeparableCritic.forward"]], "torch_mist.critic.separable": [[6, "module-torch_mist.critic.separable"]], "critic() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.critic"]], "joint_critic() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.joint_critic"]], "separable_critic() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.separable_critic"]], "torch_mist.critic.utils": [[7, "module-torch_mist.critic.utils"]], "conditionalcategorical (class in torch_mist.distributions.conditional.categorical)": [[8, "torch_mist.distributions.conditional.categorical.ConditionalCategorical"]], "condition() (torch_mist.distributions.conditional.categorical.conditionalcategorical method)": [[8, "torch_mist.distributions.conditional.categorical.ConditionalCategorical.condition"]], "torch_mist.distributions.conditional.categorical": [[8, "module-torch_mist.distributions.conditional.categorical"]], "correlatednormal (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.CorrelatedNormal"]], "cubiccorrelatednormal (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicCorrelatedNormal"]], "cubicptransform (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform"]], "randomfliptransform (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform"]], "skewedcorrelatednormal (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.SkewedCorrelatedNormal"]], "translate (class in torch_mist.distributions.conditional.correlated_normal)": [[9, "torch_mist.distributions.conditional.correlated_normal.Translate"]], "_call() (torch_mist.distributions.conditional.correlated_normal.cubicptransform method)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform._call"]], "_call() (torch_mist.distributions.conditional.correlated_normal.randomfliptransform method)": [[9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform._call"]], "_call() (torch_mist.distributions.conditional.correlated_normal.translate method)": [[9, "torch_mist.distributions.conditional.correlated_normal.Translate._call"]], "_inverse() (torch_mist.distributions.conditional.correlated_normal.cubicptransform method)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform._inverse"]], "_inverse() (torch_mist.distributions.conditional.correlated_normal.translate method)": [[9, "torch_mist.distributions.conditional.correlated_normal.Translate._inverse"]], "bijective (torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[9, "id0"], [9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform.bijective"]], "bijective (torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[9, "id3"], [9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.bijective"]], "bijective (torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[9, "id6"], [9, "torch_mist.distributions.conditional.correlated_normal.Translate.bijective"]], "codomain (torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[9, "id2"], [9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform.codomain"]], "codomain (torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[9, "id5"], [9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.codomain"]], "codomain (torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[9, "id8"], [9, "torch_mist.distributions.conditional.correlated_normal.Translate.codomain"]], "condition() (torch_mist.distributions.conditional.correlated_normal.correlatednormal method)": [[9, "torch_mist.distributions.conditional.correlated_normal.CorrelatedNormal.condition"]], "condition() (torch_mist.distributions.conditional.correlated_normal.cubiccorrelatednormal method)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicCorrelatedNormal.condition"]], "condition() (torch_mist.distributions.conditional.correlated_normal.skewedcorrelatednormal method)": [[9, "torch_mist.distributions.conditional.correlated_normal.SkewedCorrelatedNormal.condition"]], "domain (torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[9, "id1"], [9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform.domain"]], "domain (torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[9, "id4"], [9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.domain"]], "domain (torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[9, "id7"], [9, "torch_mist.distributions.conditional.correlated_normal.Translate.domain"]], "log_abs_det_jacobian() (torch_mist.distributions.conditional.correlated_normal.cubicptransform method)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform.log_abs_det_jacobian"]], "log_abs_det_jacobian() (torch_mist.distributions.conditional.correlated_normal.translate method)": [[9, "torch_mist.distributions.conditional.correlated_normal.Translate.log_abs_det_jacobian"]], "sign (torch_mist.distributions.conditional.correlated_normal.cubicptransform attribute)": [[9, "torch_mist.distributions.conditional.correlated_normal.CubicPTransform.sign"]], "sign (torch_mist.distributions.conditional.correlated_normal.randomfliptransform attribute)": [[9, "torch_mist.distributions.conditional.correlated_normal.RandomFlipTransform.sign"]], "sign (torch_mist.distributions.conditional.correlated_normal.translate attribute)": [[9, "torch_mist.distributions.conditional.correlated_normal.Translate.sign"]], "torch_mist.distributions.conditional.correlated_normal": [[9, "module-torch_mist.distributions.conditional.correlated_normal"]], "conditionalcategorical (class in torch_mist.distributions.conditional)": [[10, "torch_mist.distributions.conditional.ConditionalCategorical"]], "correlatednormal (class in torch_mist.distributions.conditional)": [[10, "torch_mist.distributions.conditional.CorrelatedNormal"]], "cubiccorrelatednormal (class in torch_mist.distributions.conditional)": [[10, "torch_mist.distributions.conditional.CubicCorrelatedNormal"]], "skewedcorrelatednormal (class in torch_mist.distributions.conditional)": [[10, "torch_mist.distributions.conditional.SkewedCorrelatedNormal"]], "condition() (torch_mist.distributions.conditional.conditionalcategorical method)": [[10, "torch_mist.distributions.conditional.ConditionalCategorical.condition"]], "condition() (torch_mist.distributions.conditional.correlatednormal method)": [[10, "torch_mist.distributions.conditional.CorrelatedNormal.condition"]], "condition() (torch_mist.distributions.conditional.cubiccorrelatednormal method)": [[10, "torch_mist.distributions.conditional.CubicCorrelatedNormal.condition"]], "condition() (torch_mist.distributions.conditional.skewedcorrelatednormal method)": [[10, "torch_mist.distributions.conditional.SkewedCorrelatedNormal.condition"]], "torch_mist.distributions.conditional": [[10, "module-torch_mist.distributions.conditional"]], "torch_mist.distributions": [[11, "module-torch_mist.distributions"]], "torch_mist.distributions.parametrizations": [[12, "module-torch_mist.distributions.parametrizations"]], "deltamap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap"]], "epsilon (in module torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.EPSILON"]], "locscalemap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.LocScaleMap"]], "logitsmap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap"]], "parametermap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap"]], "temperaturelogitsmap (class in torch_mist.distributions.parametrizations.map)": [[13, "torch_mist.distributions.parametrizations.map.TemperatureLogitsMap"]], "__call__() (torch_mist.distributions.parametrizations.map.parametermap method)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.__call__"]], "__repr__() (torch_mist.distributions.parametrizations.map.parametermap method)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.__repr__"]], "extra_repr() (torch_mist.distributions.parametrizations.map.parametermap method)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.extra_repr"]], "map_parameters() (torch_mist.distributions.parametrizations.map.deltamap method)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.locscalemap method)": [[13, "torch_mist.distributions.parametrizations.map.LocScaleMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.logitsmap method)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.parametermap method)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.temperaturelogitsmap method)": [[13, "torch_mist.distributions.parametrizations.map.TemperatureLogitsMap.map_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.deltamap attribute)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap.n_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.logitsmap attribute)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap.n_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.parametermap attribute)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.n_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.temperaturelogitsmap attribute)": [[13, "torch_mist.distributions.parametrizations.map.TemperatureLogitsMap.n_parameters"]], "supported_distributions (torch_mist.distributions.parametrizations.map.deltamap attribute)": [[13, "torch_mist.distributions.parametrizations.map.DeltaMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.locscalemap attribute)": [[13, "torch_mist.distributions.parametrizations.map.LocScaleMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.logitsmap attribute)": [[13, "torch_mist.distributions.parametrizations.map.LogitsMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.parametermap attribute)": [[13, "torch_mist.distributions.parametrizations.map.ParameterMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.temperaturelogitsmap attribute)": [[13, "torch_mist.distributions.parametrizations.map.TemperatureLogitsMap.supported_distributions"]], "torch_mist.distributions.parametrizations.map": [[13, "module-torch_mist.distributions.parametrizations.map"]], "shuffledbatchdistribution (class in torch_mist.distributions.product)": [[14, "torch_mist.distributions.product.ShuffledBatchDistribution"]], "rsample() (torch_mist.distributions.product.shuffledbatchdistribution method)": [[14, "torch_mist.distributions.product.ShuffledBatchDistribution.rsample"]], "sample() (torch_mist.distributions.product.shuffledbatchdistribution method)": [[14, "torch_mist.distributions.product.ShuffledBatchDistribution.sample"]], "torch_mist.distributions.product": [[14, "module-torch_mist.distributions.product"]], "conditionaldistributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.ConditionalDistributionModule"]], "conditionaltransformeddistributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule"]], "distributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.DistributionModule"]], "transformeddistributionmodule (class in torch_mist.distributions.transforms.base)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule"]], "__repr__() (torch_mist.distributions.transforms.base.distributionmodule method)": [[15, "torch_mist.distributions.transforms.base.DistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule.__repr__"]], "clear_cache() (torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.clear_cache"]], "condition() (torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.condition"]], "log_prob() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule.log_prob"]], "rsample() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[15, "torch_mist.distributions.transforms.base.TransformedDistributionModule.rsample"]], "torch_mist.distributions.transforms.base": [[15, "module-torch_mist.distributions.transforms.base"]], "conditionaldistributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.ConditionalDistributionModule"]], "conditionallinear (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.ConditionalLinear"]], "conditionaltransformeddistributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule"]], "distributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.DistributionModule"]], "linear (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.Linear"]], "permute (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.Permute"]], "splittransform (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.SplitTransform"]], "transformeddistributionmodule (class in torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule"]], "__repr__() (torch_mist.distributions.transforms.distributionmodule method)": [[16, "torch_mist.distributions.transforms.DistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule.__repr__"]], "_call() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute._call"]], "_call() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform._call"]], "_inverse() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute._inverse"]], "_inverse() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform._inverse"]], "_params() (torch_mist.distributions.transforms.conditionallinear method)": [[16, "torch_mist.distributions.transforms.ConditionalLinear._params"]], "_params() (torch_mist.distributions.transforms.linear method)": [[16, "torch_mist.distributions.transforms.Linear._params"]], "add_dims() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.add_dims"]], "bijective (torch_mist.distributions.transforms.conditionallinear attribute)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.bijective"]], "clear_cache() (torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.clear_cache"]], "codomain (torch_mist.distributions.transforms.conditionallinear attribute)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.codomain"]], "codomain (torch_mist.distributions.transforms.splittransform attribute)": [[16, "torch_mist.distributions.transforms.SplitTransform.codomain"]], "condition() (torch_mist.distributions.transforms.conditionallinear method)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.condition"]], "condition() (torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.condition"]], "conditional_linear() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.conditional_linear"]], "conditional_skip_linear() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.conditional_skip_linear"]], "dist() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.dist"]], "domain (torch_mist.distributions.transforms.conditionallinear attribute)": [[16, "torch_mist.distributions.transforms.ConditionalLinear.domain"]], "domain (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.domain"]], "domain (torch_mist.distributions.transforms.splittransform attribute)": [[16, "torch_mist.distributions.transforms.SplitTransform.domain"]], "linear() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.linear"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute.log_abs_det_jacobian"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.log_abs_det_jacobian"]], "log_prob() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule.log_prob"]], "permute() (in module torch_mist.distributions.transforms)": [[16, "torch_mist.distributions.transforms.permute"]], "remove_dims() (torch_mist.distributions.transforms.splittransform method)": [[16, "torch_mist.distributions.transforms.SplitTransform.remove_dims"]], "rsample() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.TransformedDistributionModule.rsample"]], "sign (torch_mist.distributions.transforms.linear attribute)": [[16, "torch_mist.distributions.transforms.Linear.sign"]], "torch_mist.distributions.transforms": [[16, "module-torch_mist.distributions.transforms"]], "update_device() (torch_mist.distributions.transforms.permute method)": [[16, "torch_mist.distributions.transforms.Permute.update_device"]], "conditionallinear (class in torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear"]], "conditionedlinear (class in torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear"]], "linear (class in torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.Linear"]], "_call() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear._call"]], "_inverse() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear._inverse"]], "_params() (torch_mist.distributions.transforms.linear.conditionallinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear._params"]], "_params() (torch_mist.distributions.transforms.linear.linear method)": [[17, "torch_mist.distributions.transforms.linear.Linear._params"]], "bijective (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "id2"], [17, "torch_mist.distributions.transforms.linear.ConditionedLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.bijective"]], "codomain (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "id1"], [17, "torch_mist.distributions.transforms.linear.ConditionedLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.codomain"]], "condition() (torch_mist.distributions.transforms.linear.conditionallinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.condition"]], "conditional_linear() (in module torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.conditional_linear"]], "conditional_skip_linear() (in module torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.conditional_skip_linear"]], "domain (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionalLinear.domain"]], "domain (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "id0"], [17, "torch_mist.distributions.transforms.linear.ConditionedLinear.domain"]], "domain (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.domain"]], "linear() (in module torch_mist.distributions.transforms.linear)": [[17, "torch_mist.distributions.transforms.linear.linear"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear.log_abs_det_jacobian"]], "sign (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[17, "torch_mist.distributions.transforms.linear.ConditionedLinear.sign"]], "sign (torch_mist.distributions.transforms.linear.linear attribute)": [[17, "torch_mist.distributions.transforms.linear.Linear.sign"]], "torch_mist.distributions.transforms.linear": [[17, "module-torch_mist.distributions.transforms.linear"]], "permute (class in torch_mist.distributions.transforms.permute)": [[18, "torch_mist.distributions.transforms.permute.Permute"]], "_call() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute._call"]], "_inverse() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute._inverse"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute.log_abs_det_jacobian"]], "permute() (in module torch_mist.distributions.transforms.permute)": [[18, "torch_mist.distributions.transforms.permute.permute"]], "torch_mist.distributions.transforms.permute": [[18, "module-torch_mist.distributions.transforms.permute"]], "update_device() (torch_mist.distributions.transforms.permute.permute method)": [[18, "torch_mist.distributions.transforms.permute.Permute.update_device"]], "splittransform (class in torch_mist.distributions.transforms.split)": [[19, "torch_mist.distributions.transforms.split.SplitTransform"]], "_call() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform._call"]], "_inverse() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform._inverse"]], "add_dims() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.add_dims"]], "codomain (torch_mist.distributions.transforms.split.splittransform attribute)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.codomain"]], "dist() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.dist"]], "domain (torch_mist.distributions.transforms.split.splittransform attribute)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.domain"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.log_abs_det_jacobian"]], "remove_dims() (torch_mist.distributions.transforms.split.splittransform method)": [[19, "torch_mist.distributions.transforms.split.SplitTransform.remove_dims"]], "torch_mist.distributions.transforms.split": [[19, "module-torch_mist.distributions.transforms.split"]], "flowtransformednormal (class in torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.FlowTransformedNormal"]], "parametricnormal (class in torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.ParametricNormal"]], "conditional_categorical() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.conditional_categorical"]], "conditional_mutivariate_categorical() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.conditional_mutivariate_categorical"]], "conditional_transformed_normal() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.conditional_transformed_normal"]], "dist (torch_mist.distributions.utils.flowtransformednormal property)": [[20, "torch_mist.distributions.utils.FlowTransformedNormal.dist"]], "fetch_transform() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.fetch_transform"]], "flow_transformed_normal() (in module torch_mist.distributions.utils)": [[20, "torch_mist.distributions.utils.flow_transformed_normal"]], "log_prob() (torch_mist.distributions.utils.flowtransformednormal method)": [[20, "torch_mist.distributions.utils.FlowTransformedNormal.log_prob"]], "log_prob() (torch_mist.distributions.utils.parametricnormal method)": [[20, "torch_mist.distributions.utils.ParametricNormal.log_prob"]], "rsample() (torch_mist.distributions.utils.flowtransformednormal method)": [[20, "torch_mist.distributions.utils.FlowTransformedNormal.rsample"]], "rsample() (torch_mist.distributions.utils.parametricnormal method)": [[20, "torch_mist.distributions.utils.ParametricNormal.rsample"]], "sample() (torch_mist.distributions.utils.flowtransformednormal method)": [[20, "torch_mist.distributions.utils.FlowTransformedNormal.sample"]], "torch_mist.distributions.utils": [[20, "module-torch_mist.distributions.utils"]], "estimation (class in torch_mist.estimators.base)": [[21, "torch_mist.estimators.base.Estimation"]], "logratioestimator (class in torch_mist.estimators.base)": [[21, "torch_mist.estimators.base.LogRatioEstimator"]], "mutualinformationestimator (class in torch_mist.estimators.base)": [[21, "torch_mist.estimators.base.MutualInformationEstimator"]], "__add__() (torch_mist.estimators.base.estimation method)": [[21, "torch_mist.estimators.base.Estimation.__add__"]], "__sub__() (torch_mist.estimators.base.estimation method)": [[21, "torch_mist.estimators.base.Estimation.__sub__"]], "apply() (torch_mist.estimators.base.estimation method)": [[21, "torch_mist.estimators.base.Estimation.apply"]], "forward() (torch_mist.estimators.base.logratioestimator method)": [[21, "torch_mist.estimators.base.LogRatioEstimator.forward"]], "forward() (torch_mist.estimators.base.mutualinformationestimator method)": [[21, "torch_mist.estimators.base.MutualInformationEstimator.forward"]], "log_ratio() (torch_mist.estimators.base.logratioestimator method)": [[21, "torch_mist.estimators.base.LogRatioEstimator.log_ratio"]], "loss (torch_mist.estimators.base.estimation attribute)": [[21, "torch_mist.estimators.base.Estimation.loss"]], "lower_bound (torch_mist.estimators.base.mutualinformationestimator attribute)": [[21, "torch_mist.estimators.base.MutualInformationEstimator.lower_bound"]], "shape (torch_mist.estimators.base.estimation property)": [[21, "torch_mist.estimators.base.Estimation.shape"]], "torch_mist.estimators.base": [[21, "module-torch_mist.estimators.base"]], "upper_bound (torch_mist.estimators.base.mutualinformationestimator attribute)": [[21, "torch_mist.estimators.base.MutualInformationEstimator.upper_bound"]], "value (torch_mist.estimators.base.estimation attribute)": [[21, "torch_mist.estimators.base.Estimation.value"]], "alphatuba (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.AlphaTUBA"]], "discriminativemutualinformationestimator (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator"]], "flo (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.FLO"]], "infonce (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.InfoNCE"]], "js (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.JS"]], "mine (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.MINE"]], "nwj (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.NWJ"]], "smile (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.SMILE"]], "tuba (class in torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.TUBA"]], "__repr__() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.__repr__"]], "__repr__() (torch_mist.estimators.discriminative.tuba method)": [[22, "torch_mist.estimators.discriminative.TUBA.__repr__"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.flo method)": [[22, "torch_mist.estimators.discriminative.FLO._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.infonce method)": [[22, "torch_mist.estimators.discriminative.InfoNCE._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.nwj method)": [[22, "torch_mist.estimators.discriminative.NWJ._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.smile method)": [[22, "torch_mist.estimators.discriminative.SMILE._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.discriminative.tuba method)": [[22, "torch_mist.estimators.discriminative.TUBA._compute_log_ratio"]], "_compute_log_ratio_grad() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (torch_mist.estimators.discriminative.js method)": [[22, "torch_mist.estimators.discriminative.JS._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (torch_mist.estimators.discriminative.smile method)": [[22, "torch_mist.estimators.discriminative.SMILE._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (torch_mist.estimators.discriminative.tuba method)": [[22, "torch_mist.estimators.discriminative.TUBA._compute_log_ratio_grad"]], "alpha_tuba() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.alpha_tuba"]], "flo() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.flo"]], "infonce() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.infonce"]], "js() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.js"]], "log_ratio() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.log_ratio"]], "lower_bound (torch_mist.estimators.discriminative.discriminativemutualinformationestimator attribute)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.lower_bound"]], "mine() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.mine"]], "nwj() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.nwj"]], "sample_proposal() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.sample_proposal"]], "smile() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.smile"]], "torch_mist.estimators.discriminative": [[22, "module-torch_mist.estimators.discriminative"]], "tuba() (in module torch_mist.estimators.discriminative)": [[22, "torch_mist.estimators.discriminative.tuba"]], "upper_bound (torch_mist.estimators.discriminative.discriminativemutualinformationestimator attribute)": [[22, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.upper_bound"]], "ba (class in torch_mist.estimators.generative)": [[23, "torch_mist.estimators.generative.BA"]], "club (class in torch_mist.estimators.generative)": [[23, "torch_mist.estimators.generative.CLUB"]], "doe (class in torch_mist.estimators.generative)": [[23, "torch_mist.estimators.generative.DoE"]], "gm (class in torch_mist.estimators.generative)": [[23, "torch_mist.estimators.generative.GM"]], "generativemutualinformationestimator (class in torch_mist.estimators.generative)": [[23, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator"]], "l1out (class in torch_mist.estimators.generative)": [[23, "torch_mist.estimators.generative.L1Out"]], "pq (class in torch_mist.estimators.generative)": [[23, "torch_mist.estimators.generative.PQ"]], "variationalproposalmutualinformationestimator (class in torch_mist.estimators.generative)": [[23, "torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator"]], "__repr__() (torch_mist.estimators.generative.doe method)": [[23, "torch_mist.estimators.generative.DoE.__repr__"]], "__repr__() (torch_mist.estimators.generative.gm method)": [[23, "torch_mist.estimators.generative.GM.__repr__"]], "__repr__() (torch_mist.estimators.generative.pq method)": [[23, "torch_mist.estimators.generative.PQ.__repr__"]], "__repr__() (torch_mist.estimators.generative.variationalproposalmutualinformationestimator method)": [[23, "torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator.__repr__"]], "compute_loss() (torch_mist.estimators.generative.ba method)": [[23, "torch_mist.estimators.generative.BA.compute_loss"]], "compute_loss() (torch_mist.estimators.generative.gm method)": [[23, "torch_mist.estimators.generative.GM.compute_loss"]], "compute_loss() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[23, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.compute_loss"]], "compute_loss() (torch_mist.estimators.generative.variationalproposalmutualinformationestimator method)": [[23, "torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator.compute_loss"]], "expected_log_ratio() (torch_mist.estimators.generative.pq method)": [[23, "torch_mist.estimators.generative.PQ.expected_log_ratio"]], "log_prob_x() (torch_mist.estimators.generative.gm method)": [[23, "torch_mist.estimators.generative.GM.log_prob_x"]], "log_prob_y() (torch_mist.estimators.generative.ba method)": [[23, "torch_mist.estimators.generative.BA.log_prob_y"]], "log_prob_y() (torch_mist.estimators.generative.club method)": [[23, "torch_mist.estimators.generative.CLUB.log_prob_y"]], "log_prob_y() (torch_mist.estimators.generative.gm method)": [[23, "torch_mist.estimators.generative.GM.log_prob_y"]], "log_prob_y() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[23, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.log_prob_y"]], "log_prob_y() (torch_mist.estimators.generative.l1out method)": [[23, "torch_mist.estimators.generative.L1Out.log_prob_y"]], "log_prob_y() (torch_mist.estimators.generative.pq method)": [[23, "torch_mist.estimators.generative.PQ.log_prob_y"]], "log_prob_y_x() (torch_mist.estimators.generative.gm method)": [[23, "torch_mist.estimators.generative.GM.log_prob_y_x"]], "log_prob_y_x() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[23, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.log_prob_y_x"]], "log_prob_y_x() (torch_mist.estimators.generative.variationalproposalmutualinformationestimator method)": [[23, "torch_mist.estimators.generative.VariationalProposalMutualInformationEstimator.log_prob_y_x"]], "log_ratio() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[23, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.log_ratio"]], "torch_mist.estimators.generative": [[23, "module-torch_mist.estimators.generative"]], "hybridmutualinformationestimator (class in torch_mist.estimators.hybrid)": [[24, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator"]], "log_ratio() (torch_mist.estimators.hybrid.hybridmutualinformationestimator method)": [[24, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator.log_ratio"]], "torch_mist.estimators.hybrid": [[24, "module-torch_mist.estimators.hybrid"]], "alphatuba (class in torch_mist.estimators)": [[25, "torch_mist.estimators.AlphaTUBA"]], "ba (class in torch_mist.estimators)": [[25, "torch_mist.estimators.BA"]], "doe (class in torch_mist.estimators)": [[25, "torch_mist.estimators.DoE"]], "flo (class in torch_mist.estimators)": [[25, "torch_mist.estimators.FLO"]], "gm (class in torch_mist.estimators)": [[25, "torch_mist.estimators.GM"]], "hybridmutualinformationestimator (class in torch_mist.estimators)": [[25, "torch_mist.estimators.HybridMutualInformationEstimator"]], "infonce (class in torch_mist.estimators)": [[25, "torch_mist.estimators.InfoNCE"]], "js (class in torch_mist.estimators)": [[25, "torch_mist.estimators.JS"]], "mine (class in torch_mist.estimators)": [[25, "torch_mist.estimators.MINE"]], "mutualinformationestimator (class in torch_mist.estimators)": [[25, "torch_mist.estimators.MutualInformationEstimator"]], "nwj (class in torch_mist.estimators)": [[25, "torch_mist.estimators.NWJ"]], "smile (class in torch_mist.estimators)": [[25, "torch_mist.estimators.SMILE"]], "tuba (class in torch_mist.estimators)": [[25, "torch_mist.estimators.TUBA"]], "__repr__() (torch_mist.estimators.doe method)": [[25, "torch_mist.estimators.DoE.__repr__"]], "__repr__() (torch_mist.estimators.gm method)": [[25, "torch_mist.estimators.GM.__repr__"]], "__repr__() (torch_mist.estimators.tuba method)": [[25, "torch_mist.estimators.TUBA.__repr__"]], "_compute_log_ratio() (torch_mist.estimators.flo method)": [[25, "torch_mist.estimators.FLO._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.infonce method)": [[25, "torch_mist.estimators.InfoNCE._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.nwj method)": [[25, "torch_mist.estimators.NWJ._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.smile method)": [[25, "torch_mist.estimators.SMILE._compute_log_ratio"]], "_compute_log_ratio() (torch_mist.estimators.tuba method)": [[25, "torch_mist.estimators.TUBA._compute_log_ratio"]], "_compute_log_ratio_grad() (torch_mist.estimators.js method)": [[25, "torch_mist.estimators.JS._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (torch_mist.estimators.smile method)": [[25, "torch_mist.estimators.SMILE._compute_log_ratio_grad"]], "_compute_log_ratio_grad() (torch_mist.estimators.tuba method)": [[25, "torch_mist.estimators.TUBA._compute_log_ratio_grad"]], "alpha_tuba() (in module torch_mist.estimators)": [[25, "torch_mist.estimators.alpha_tuba"]], "compute_loss() (torch_mist.estimators.ba method)": [[25, "torch_mist.estimators.BA.compute_loss"]], "compute_loss() (torch_mist.estimators.gm method)": [[25, "torch_mist.estimators.GM.compute_loss"]], "flo() (in module torch_mist.estimators)": [[25, "torch_mist.estimators.flo"]], "forward() (torch_mist.estimators.mutualinformationestimator method)": [[25, "torch_mist.estimators.MutualInformationEstimator.forward"]], "infonce() (in module torch_mist.estimators)": [[25, "torch_mist.estimators.infonce"]], "js() (in module torch_mist.estimators)": [[25, "torch_mist.estimators.js"]], "log_prob_x() (torch_mist.estimators.gm method)": [[25, "torch_mist.estimators.GM.log_prob_x"]], "log_prob_y() (torch_mist.estimators.ba method)": [[25, "torch_mist.estimators.BA.log_prob_y"]], "log_prob_y() (torch_mist.estimators.gm method)": [[25, "torch_mist.estimators.GM.log_prob_y"]], "log_prob_y_x() (torch_mist.estimators.gm method)": [[25, "torch_mist.estimators.GM.log_prob_y_x"]], "log_ratio() (torch_mist.estimators.hybridmutualinformationestimator method)": [[25, "torch_mist.estimators.HybridMutualInformationEstimator.log_ratio"]], "lower_bound (torch_mist.estimators.mutualinformationestimator attribute)": [[25, "torch_mist.estimators.MutualInformationEstimator.lower_bound"]], "mine() (in module torch_mist.estimators)": [[25, "torch_mist.estimators.mine"]], "nwj() (in module torch_mist.estimators)": [[25, "torch_mist.estimators.nwj"]], "smile() (in module torch_mist.estimators)": [[25, "torch_mist.estimators.smile"]], "torch_mist.estimators": [[25, "module-torch_mist.estimators"]], "tuba() (in module torch_mist.estimators)": [[25, "torch_mist.estimators.tuba"]], "upper_bound (torch_mist.estimators.mutualinformationestimator attribute)": [[25, "torch_mist.estimators.MutualInformationEstimator.upper_bound"]], "__version__ (in module torch_mist)": [[26, "torch_mist.__version__"]], "torch_mist": [[26, "module-torch_mist"]], "torch_mist.nn": [[27, "module-torch_mist.nn"]], "constant (class in torch_mist.nn.utils)": [[28, "torch_mist.nn.utils.Constant"]], "identity (class in torch_mist.nn.utils)": [[28, "torch_mist.nn.utils.Identity"]], "jointdensenn (class in torch_mist.nn.utils)": [[28, "torch_mist.nn.utils.JointDenseNN"]], "mergeoutputs (class in torch_mist.nn.utils)": [[28, "torch_mist.nn.utils.MergeOutputs"]], "skipdensenn (class in torch_mist.nn.utils)": [[28, "torch_mist.nn.utils.SkipDenseNN"]], "__repr__() (torch_mist.nn.utils.constant method)": [[28, "torch_mist.nn.utils.Constant.__repr__"]], "forward() (torch_mist.nn.utils.constant method)": [[28, "torch_mist.nn.utils.Constant.forward"]], "forward() (torch_mist.nn.utils.identity method)": [[28, "torch_mist.nn.utils.Identity.forward"]], "forward() (torch_mist.nn.utils.jointdensenn method)": [[28, "torch_mist.nn.utils.JointDenseNN.forward"]], "forward() (torch_mist.nn.utils.mergeoutputs method)": [[28, "torch_mist.nn.utils.MergeOutputs.forward"]], "forward() (torch_mist.nn.utils.skipdensenn method)": [[28, "torch_mist.nn.utils.SkipDenseNN.forward"]], "torch_mist.nn.utils": [[28, "module-torch_mist.nn.utils"]], "quantizationfunction (class in torch_mist.quantization)": [[29, "torch_mist.quantization.QuantizationFunction"]], "forward() (torch_mist.quantization.quantizationfunction method)": [[29, "torch_mist.quantization.QuantizationFunction.forward"]], "num_bins (torch_mist.quantization.quantizationfunction property)": [[29, "torch_mist.quantization.QuantizationFunction.num_bins"]], "torch_mist.quantization": [[29, "module-torch_mist.quantization"]], "sampledataloader (class in torch_mist.utils.data)": [[30, "torch_mist.utils.data.SampleDataLoader"]], "__len__() (torch_mist.utils.data.sampledataloader method)": [[30, "torch_mist.utils.data.SampleDataLoader.__len__"]], "__next__() (torch_mist.utils.data.sampledataloader method)": [[30, "torch_mist.utils.data.SampleDataLoader.__next__"]], "torch_mist.utils.data": [[30, "module-torch_mist.utils.data"]], "estimate_mi() (in module torch_mist.utils.estimate)": [[31, "torch_mist.utils.estimate.estimate_mi"]], "estimate_mi_std() (in module torch_mist.utils.estimate)": [[31, "torch_mist.utils.estimate.estimate_mi_std"]], "optimize_mi_estimator() (in module torch_mist.utils.estimate)": [[31, "torch_mist.utils.estimate.optimize_mi_estimator"]], "torch_mist.utils.estimate": [[31, "module-torch_mist.utils.estimate"]], "torch_mist.utils": [[32, "module-torch_mist.utils"]]}})