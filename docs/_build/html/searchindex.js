Search.setIndex({"docnames": [".pytest_cache/README", "autoapi/index", "autoapi/torch_mist/baselines/index", "autoapi/torch_mist/critic/base/index", "autoapi/torch_mist/critic/index", "autoapi/torch_mist/critic/joint/index", "autoapi/torch_mist/critic/separable/index", "autoapi/torch_mist/critic/utils/index", "autoapi/torch_mist/data/index", "autoapi/torch_mist/data/multimixture/index", "autoapi/torch_mist/data/multivariate/index", "autoapi/torch_mist/distributions/index", "autoapi/torch_mist/distributions/joint/index", "autoapi/torch_mist/distributions/parametrizations/index", "autoapi/torch_mist/distributions/parametrizations/map/index", "autoapi/torch_mist/distributions/product/index", "autoapi/torch_mist/distributions/transforms/base/index", "autoapi/torch_mist/distributions/transforms/index", "autoapi/torch_mist/distributions/transforms/linear/index", "autoapi/torch_mist/distributions/transforms/permute/index", "autoapi/torch_mist/distributions/transforms/split/index", "autoapi/torch_mist/distributions/utils/index", "autoapi/torch_mist/estimators/base/index", "autoapi/torch_mist/estimators/discriminative/alpha_tuba/index", "autoapi/torch_mist/estimators/discriminative/base/index", "autoapi/torch_mist/estimators/discriminative/flo/index", "autoapi/torch_mist/estimators/discriminative/index", "autoapi/torch_mist/estimators/discriminative/infonce/index", "autoapi/torch_mist/estimators/discriminative/js/index", "autoapi/torch_mist/estimators/discriminative/mine/index", "autoapi/torch_mist/estimators/discriminative/nwj/index", "autoapi/torch_mist/estimators/discriminative/smile/index", "autoapi/torch_mist/estimators/discriminative/tuba/index", "autoapi/torch_mist/estimators/generative/ba/index", "autoapi/torch_mist/estimators/generative/base/index", "autoapi/torch_mist/estimators/generative/club/index", "autoapi/torch_mist/estimators/generative/discrete/index", "autoapi/torch_mist/estimators/generative/doe/index", "autoapi/torch_mist/estimators/generative/gm/index", "autoapi/torch_mist/estimators/generative/index", "autoapi/torch_mist/estimators/generative/l1out/index", "autoapi/torch_mist/estimators/generative/pq/index", "autoapi/torch_mist/estimators/hybrid/index", "autoapi/torch_mist/estimators/index", "autoapi/torch_mist/estimators/utils/index", "autoapi/torch_mist/index", "autoapi/torch_mist/nn/index", "autoapi/torch_mist/nn/utils/index", "autoapi/torch_mist/quantization/functions/index", "autoapi/torch_mist/quantization/index", "autoapi/torch_mist/quantization/vqvae/index", "autoapi/torch_mist/train/index", "autoapi/torch_mist/train/mi_estimator/index", "autoapi/torch_mist/train/vqvae/index", "autoapi/torch_mist/utils/batch_utils/index", "autoapi/torch_mist/utils/caching/index", "autoapi/torch_mist/utils/data/dataset/index", "autoapi/torch_mist/utils/data/index", "autoapi/torch_mist/utils/data/loader/index", "autoapi/torch_mist/utils/data/sampler/index", "autoapi/torch_mist/utils/estimation/index", "autoapi/torch_mist/utils/index", "changelog", "conduct", "contributing", "example", "index"], "filenames": [".pytest_cache/README.md", "autoapi/index.rst", "autoapi/torch_mist/baselines/index.rst", "autoapi/torch_mist/critic/base/index.rst", "autoapi/torch_mist/critic/index.rst", "autoapi/torch_mist/critic/joint/index.rst", "autoapi/torch_mist/critic/separable/index.rst", "autoapi/torch_mist/critic/utils/index.rst", "autoapi/torch_mist/data/index.rst", "autoapi/torch_mist/data/multimixture/index.rst", "autoapi/torch_mist/data/multivariate/index.rst", "autoapi/torch_mist/distributions/index.rst", "autoapi/torch_mist/distributions/joint/index.rst", "autoapi/torch_mist/distributions/parametrizations/index.rst", "autoapi/torch_mist/distributions/parametrizations/map/index.rst", "autoapi/torch_mist/distributions/product/index.rst", "autoapi/torch_mist/distributions/transforms/base/index.rst", "autoapi/torch_mist/distributions/transforms/index.rst", "autoapi/torch_mist/distributions/transforms/linear/index.rst", "autoapi/torch_mist/distributions/transforms/permute/index.rst", "autoapi/torch_mist/distributions/transforms/split/index.rst", "autoapi/torch_mist/distributions/utils/index.rst", "autoapi/torch_mist/estimators/base/index.rst", "autoapi/torch_mist/estimators/discriminative/alpha_tuba/index.rst", "autoapi/torch_mist/estimators/discriminative/base/index.rst", "autoapi/torch_mist/estimators/discriminative/flo/index.rst", "autoapi/torch_mist/estimators/discriminative/index.rst", "autoapi/torch_mist/estimators/discriminative/infonce/index.rst", "autoapi/torch_mist/estimators/discriminative/js/index.rst", "autoapi/torch_mist/estimators/discriminative/mine/index.rst", "autoapi/torch_mist/estimators/discriminative/nwj/index.rst", "autoapi/torch_mist/estimators/discriminative/smile/index.rst", "autoapi/torch_mist/estimators/discriminative/tuba/index.rst", "autoapi/torch_mist/estimators/generative/ba/index.rst", "autoapi/torch_mist/estimators/generative/base/index.rst", "autoapi/torch_mist/estimators/generative/club/index.rst", "autoapi/torch_mist/estimators/generative/discrete/index.rst", "autoapi/torch_mist/estimators/generative/doe/index.rst", "autoapi/torch_mist/estimators/generative/gm/index.rst", "autoapi/torch_mist/estimators/generative/index.rst", "autoapi/torch_mist/estimators/generative/l1out/index.rst", "autoapi/torch_mist/estimators/generative/pq/index.rst", "autoapi/torch_mist/estimators/hybrid/index.rst", "autoapi/torch_mist/estimators/index.rst", "autoapi/torch_mist/estimators/utils/index.rst", "autoapi/torch_mist/index.rst", "autoapi/torch_mist/nn/index.rst", "autoapi/torch_mist/nn/utils/index.rst", "autoapi/torch_mist/quantization/functions/index.rst", "autoapi/torch_mist/quantization/index.rst", "autoapi/torch_mist/quantization/vqvae/index.rst", "autoapi/torch_mist/train/index.rst", "autoapi/torch_mist/train/mi_estimator/index.rst", "autoapi/torch_mist/train/vqvae/index.rst", "autoapi/torch_mist/utils/batch_utils/index.rst", "autoapi/torch_mist/utils/caching/index.rst", "autoapi/torch_mist/utils/data/dataset/index.rst", "autoapi/torch_mist/utils/data/index.rst", "autoapi/torch_mist/utils/data/loader/index.rst", "autoapi/torch_mist/utils/data/sampler/index.rst", "autoapi/torch_mist/utils/estimation/index.rst", "autoapi/torch_mist/utils/index.rst", "changelog.md", "conduct.md", "contributing.md", "example.ipynb", "index.md"], "titles": ["pytest cache directory", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.baselines</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.joint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.separable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.critic.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.data.multimixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.data.multivariate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.joint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.parametrizations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.parametrizations.map</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.product</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.transforms.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.distributions.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.alpha_tuba</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.flo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.infonce</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.js</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.mine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.nwj</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.smile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.discriminative.tuba</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.ba</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.club</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.discrete</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.doe</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.gm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.l1out</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.generative.pq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.hybrid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.estimators.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.nn.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.quantization.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.quantization.vqvae</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.train</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.train.mi_estimator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.train.vqvae</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.batch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.caching</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.data.dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.data.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.data.sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils.estimation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">torch_mist.utils</span></code>", "Changelog", "Code of Conduct", "Contributing", "Simple example", "Mist - A PyTorch Mutual information Estimation toolkit"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 9, 10, 12, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 63, 64, 65, 66], "contain": [0, 1, 2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "data": [0, 1, 45, 61, 66], "from": [0, 14, 17, 18, 19, 20, 22, 43, 57, 58, 63, 65, 66], "": [0, 17, 19, 57, 58, 63, 64, 66], "plugin": 0, "which": [0, 17, 18, 22, 43, 57, 58, 63, 66], "provid": [0, 12, 16, 17, 21, 41, 57, 58, 59, 66], "lf": 0, "ff": [0, 17, 19], "option": [0, 2, 4, 6, 7, 14, 21, 24, 26, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 65, 66], "well": 0, "fixtur": 0, "do": [0, 47, 63], "commit": [0, 63, 64], "version": [0, 63, 64, 65], "control": 0, "see": [0, 57, 58, 65], "doc": [0, 64, 65], "more": [0, 17, 19, 57, 58], "inform": [0, 63, 65], "page": [1, 57, 58], "auto": [1, 65], "gener": [1, 16, 17, 21, 24, 42, 43, 45, 57, 58, 66], "document": [1, 57, 58, 65, 66], "1": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 63, 65, 66], "torch_mist": [1, 62, 64, 65, 66], "critic": [1, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 63, 65, 66], "base": [1, 2, 4, 5, 6, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 65, 66], "joint": [1, 4, 9, 10, 11, 23, 25, 26, 28, 29, 30, 31, 32, 38, 39, 43, 45, 57, 58, 66], "separ": [1, 4, 26, 27, 43, 45, 63, 66], "util": [1, 4, 11, 43, 45, 46, 66], "multimixtur": [1, 8, 45], "multivari": [1, 8, 45], "distribut": [1, 9, 10, 24, 26, 33, 34, 35, 37, 38, 39, 40, 41, 43, 45, 47, 49, 50, 57, 58, 65, 66], "parametr": [1, 11, 45, 66], "map": [1, 11, 13, 45, 57, 58, 65, 66], "transform": [1, 11, 12, 21, 45, 47], "linear": [1, 11, 17, 21, 37, 38, 39, 43, 45, 65, 66], "permut": [1, 11, 17, 45], "split": [1, 11, 17, 45, 66], "product": [1, 11, 45, 66], "estim": [1, 3, 4, 5, 6, 45, 51, 52, 57, 58, 61], "discrimin": [1, 42, 43, 45, 66], "alpha_tuba": [1, 26, 43, 45], "flo": [1, 26, 43, 45, 66], "infonc": [1, 26, 43, 45, 66], "j": [1, 26, 43, 45, 65, 66], "mine": [1, 26, 43, 45, 66], "nwj": [1, 26, 43, 45, 66], "smile": [1, 26, 43, 45, 66], "tuba": [1, 23, 26, 27, 28, 29, 30, 31, 43, 45, 66], "ba": [1, 39, 43, 45, 66], "club": [1, 39, 43, 45, 66], "discret": [1, 39, 43, 45, 66], "doe": [1, 38, 39, 43, 45, 66], "gm": [1, 39, 43, 45, 66], "l1out": [1, 35, 39, 43, 45, 66], "pq": [1, 39, 43, 45, 66], "hybrid": [1, 43, 45], "nn": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 53, 65, 66], "quantiz": [1, 36, 39, 41, 43, 45, 66], "function": [1, 3, 5, 6, 9, 10, 12, 16, 22, 24, 34, 42, 47, 64, 66], "vqvae": [1, 45, 49, 51], "train": [1, 2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50], "mi_estim": [1, 45, 51, 65], "dataset": [1, 45, 57, 58, 59, 61, 65, 66], "loader": [1, 45, 57, 61], "sampler": [1, 45, 57, 58, 61], "batch_util": [1, 45, 61], "cach": [1, 17, 18, 45, 61, 65], "baselin": [1, 23, 25, 26, 32, 43, 45, 65, 66], "creat": [1, 12, 16, 17, 19, 21, 41, 63, 64, 65, 66], "sphinx": 1, "autoapi": 1, "arg": [2, 3, 4, 12, 22, 43, 47, 48, 49, 57, 58], "kwarg": [2, 3, 4, 12, 22, 43, 44, 45, 47, 48, 49, 57, 58, 60, 61], "torch": [2, 3, 4, 5, 6, 9, 10, 12, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 65, 66], "all": [2, 3, 4, 5, 6, 9, 10, 12, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 56, 57, 58, 59, 63, 64], "neural": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 66], "network": [2, 3, 4, 5, 6, 9, 10, 12, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 65, 66], "your": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 64], "model": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 53, 66], "should": [2, 3, 4, 5, 6, 9, 10, 12, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 64], "also": [2, 3, 4, 5, 6, 9, 10, 12, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 65], "subclass": [2, 3, 4, 5, 6, 9, 10, 12, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 56, 57, 59], "can": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 64, 65, 66], "other": [2, 3, 4, 5, 6, 9, 10, 12, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 63, 65, 66], "allow": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 66], "nest": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "them": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58], "tree": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "structur": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "you": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 64, 65, 66], "assign": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "submodul": [2, 3, 5, 6, 9, 10, 12, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 47, 48, 50], "regular": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "attribut": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 57, 58, 59], "import": [2, 3, 4, 5, 6, 9, 10, 12, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 65, 66], "f": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 65, 66], "def": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "__init__": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 56, 57, 65], "self": [2, 3, 4, 5, 6, 9, 10, 12, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 65], "super": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "conv1": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "conv2d": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "20": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "5": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 65, 66], "conv2": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "forward": [2, 3, 4, 5, 6, 9, 10, 12, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "x": [2, 3, 4, 5, 6, 9, 10, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 65, 66], "relu": [2, 3, 4, 5, 6, 7, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 65, 66], "return": [2, 3, 4, 5, 6, 9, 10, 12, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 59, 65, 66], "wai": [2, 3, 4, 5, 6, 9, 10, 12, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 59, 63, 65], "regist": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "have": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 63, 64, 66], "paramet": [2, 3, 4, 5, 6, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 65, 66], "convert": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "too": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "when": [2, 3, 4, 5, 6, 9, 10, 12, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 63, 64, 66], "call": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 65], "etc": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "As": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 65], "per": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58], "exampl": [2, 3, 4, 5, 6, 9, 10, 12, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 63, 66], "abov": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 65, 66], "an": [2, 3, 4, 5, 6, 9, 10, 12, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 59, 63, 65, 66], "parent": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "must": [2, 3, 4, 5, 6, 9, 10, 12, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 56, 57, 58], "made": [2, 3, 4, 5, 6, 9, 10, 12, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "befor": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 64], "child": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "variabl": [2, 3, 4, 5, 6, 9, 10, 12, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 66], "bool": [2, 3, 4, 5, 6, 9, 10, 12, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 57, 58, 60, 61], "boolean": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "repres": [2, 3, 4, 5, 6, 9, 10, 12, 14, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 63], "whether": [2, 3, 4, 5, 6, 9, 10, 12, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 66], "i": [2, 3, 4, 5, 6, 9, 10, 12, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 57, 58, 59, 63, 64, 65, 66], "evalu": [2, 3, 4, 5, 6, 9, 10, 12, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50], "mode": [2, 3, 4, 5, 6, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 65], "abstract": [2, 12, 14, 16, 17, 18, 20, 21, 22, 24, 26, 34, 39, 40, 43], "f_": [2, 24, 26, 27, 31, 32, 43, 66], "tensor": [2, 3, 4, 5, 6, 12, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 65, 66], "y": [2, 3, 4, 5, 6, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 54, 60, 61, 65, 66], "none": [2, 4, 6, 7, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 65], "constantbaselin": [2, 65], "valu": [2, 3, 4, 5, 6, 12, 16, 17, 18, 19, 21, 47, 57, 58, 65, 66], "float": [2, 4, 6, 7, 9, 10, 14, 17, 18, 21, 23, 26, 29, 31, 33, 36, 39, 41, 43, 45, 48, 49, 50, 51, 52, 60, 61], "0": [2, 4, 6, 7, 9, 10, 14, 17, 18, 19, 21, 23, 26, 29, 31, 36, 39, 41, 43, 45, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 65, 66], "exponentialmovingaverag": 2, "gamma": [2, 26, 29, 43, 49, 50], "9": [2, 10, 26, 29, 43, 65, 66], "batchlogmeanexp": 2, "dim": [2, 12, 17, 19, 47], "str": [2, 4, 7, 12, 14, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 43, 45, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 61], "learnablebaselin": 2, "net": [2, 17, 18, 21, 47, 48, 49], "learnablejointbaselin": [2, 25, 26, 43], "interpolatedbaselin": 2, "baseline_1": 2, "baseline_2": 2, "alpha": [2, 23, 26, 43, 65, 66], "alphatubabaselin": 2, "x_dim": [2, 4, 7, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 43, 49, 50, 65, 66], "int": [2, 4, 7, 9, 10, 12, 14, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 66], "hidden_dim": [2, 4, 7, 17, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 43, 47, 48, 49, 50, 65, 66], "list": [2, 4, 7, 12, 14, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 43, 47, 48, 49, 50, 57, 58], "baseline_nn": 2, "nonlinear": [2, 4, 7, 47], "callabl": [2, 55, 57, 58], "true": [2, 4, 7, 17, 18, 23, 26, 42, 43, 44, 45, 51, 52, 57, 58, 60, 61, 65, 66], "joint_baseline_nn": 2, "y_dim": [2, 4, 7, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 43, 49, 50, 65, 66], "ani": [2, 4, 7, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 48, 49, 51, 52, 53, 57, 58, 59, 60, 61, 63, 64, 65, 66], "comput": [3, 4, 5, 6, 17, 18, 20, 22, 43, 65], "pair": [3, 4, 5, 6, 65, 66], "param": [3, 4, 5, 6, 18, 22, 43], "The": [3, 4, 5, 6, 14, 17, 18, 47, 57, 58, 59, 63, 64, 65, 66], "ratio": [3, 4, 5, 6, 22, 43, 66], "given": [3, 4, 5, 6, 17, 18, 20, 57, 58, 64, 66], "modul": [4, 17, 26, 39, 43, 49, 51, 65], "jointcrit": [4, 5, 65, 66], "joint_net": [4, 5, 65, 66], "separablecrit": [4, 6, 26, 27, 43], "f_x": [4, 6], "f_y": [4, 6], "temperatur": [4, 6, 7, 21, 36, 39, 41, 43], "critic_nn": [4, 7], "critic_typ": [4, 7, 23, 25, 26, 27, 28, 29, 30, 31, 32, 43, 66], "critic_param": [4, 7, 23, 25, 26, 27, 28, 29, 30, 31, 32, 43], "dict": [4, 7, 12, 14, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 65], "joint_crit": [4, 7], "separable_crit": [4, 7], "projection_head": [4, 7], "symmetr": [4, 7], "output_dim": [4, 7], "128": [4, 7, 65, 66], "multivariatecorrelatednormalmixtur": 9, "rho": [9, 10, 65], "95": 9, "sigma": [9, 10], "epsilon": [9, 14, 17, 18], "15": 9, "delta": [9, 14, 45, 51, 52, 60, 61], "n_dim": [9, 10, 21, 65], "devic": [9, 10, 45, 51, 52, 57, 58, 60, 61, 65, 66], "cpu": [9, 10, 45, 51, 52, 60, 61, 65, 66], "jointdistribut": [9, 10, 12, 38, 39, 43, 57, 58], "jointmultivariatenorm": 10, "joint_dist": [12, 57, 58], "label": [12, 65], "squeez": 12, "fals": [12, 16, 17, 18, 21, 45, 49, 50, 51, 52, 57, 58, 60, 61, 66], "log_prob": [12, 16, 17, 21], "sampl": [12, 16, 17, 19, 21, 22, 24, 35, 39, 43, 54, 56, 57, 58, 65, 66], "sample_shap": [12, 16, 17, 21, 24], "size": [12, 16, 17, 18, 21, 24, 47, 57, 58, 63, 66], "rsampl": [12, 16, 17, 21], "conditionedratiodistribut": 12, "log_margin": 12, "condit": [12, 16, 17, 18, 21, 41, 47, 66], "probabl": [12, 16, 17, 21, 24], "log": [12, 16, 17, 18, 19, 20, 21, 22, 43, 65, 66], "densiti": [12, 16, 17, 21], "mass": [12, 16, 17, 21], "conditionalratiodistribut": 12, "margin": [12, 66], "union": [12, 14, 16, 17, 24, 26, 33, 39, 43, 45, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 65], "conditionaldistributionmodul": [12, 16, 17, 21], "helper": [12, 16, 17, 19, 21, 41], "standard": [12, 16, 17, 21, 41], "abc": [12, 16, 17, 21, 41], "us": [12, 16, 17, 18, 19, 20, 21, 41, 47, 57, 58, 63, 64, 65, 66], "inherit": [12, 16, 17, 18, 20, 21, 41], "type": [12, 14, 16, 17, 18, 19, 21, 22, 41, 43, 45, 51, 52, 57, 58, 60, 61, 65, 66], "1e": [14, 17, 18], "06": [14, 17, 18], "parametermap": 14, "dictionari": [14, 66], "supported_distribut": 14, "n_paramet": 14, "map_paramet": 14, "parameter_list": 14, "method": [14, 17, 18, 20, 55, 57, 58, 59], "respons": 14, "defin": [14, 17, 19, 57, 58, 63, 66], "interest": [14, 63, 66], "name": [14, 64, 65], "__call__": 14, "deltamap": 14, "one": [14, 17, 18, 57, 58], "same": [14, 66], "locat": 14, "locscalemap": 14, "scale": [14, 17, 18, 21], "scale_offset": 14, "logitsmap": 14, "distributionmodul": [16, 17], "validate_arg": [16, 17], "__repr__": [16, 17, 21, 24, 26, 32, 34, 36, 37, 38, 39, 41, 43, 47, 48, 49], "repr": [16, 17, 21, 24, 26, 32, 34, 36, 37, 38, 39, 41, 43, 47, 48, 49], "pyro": [16, 17, 18, 19, 20, 24, 26, 33, 34, 35, 37, 39, 40, 41, 43, 47, 49, 50], "conditionaldistribut": [16, 17, 24, 26, 33, 34, 35, 37, 39, 40, 41, 43, 49, 50], "conditionaltransformeddistributionmodul": [16, 17], "base_dist": [16, 17, 19], "conditionaltransform": [16, 17, 18], "conditionaltransformeddistribut": [16, 17], "context": [16, 17, 18, 19, 21, 41], "clear_cach": [16, 17], "transformeddistributionmodul": [16, 17, 21], "shape": [16, 17, 19, 21, 22, 24, 43, 47, 66], "reparameter": [16, 17, 21], "batch": [16, 17, 21, 24, 57, 58, 66], "ar": [16, 17, 18, 20, 21, 24, 57, 58, 63, 64, 66], "input_dim": [17, 18, 19, 20, 21, 47, 48, 49], "loc": [17, 18, 21], "initial_scal": [17, 18], "conditionedlinear": [17, 18], "transformmodul": [17, 18, 19, 20], "invert": [17, 18, 19], "det": [17, 18, 20], "jacobian": [17, 18, 19, 20], "thei": [17, 18, 20, 63, 64, 66], "primarili": [17, 18], "transformeddistribut": [17, 18, 19], "whose": [17, 18], "invers": [17, 18, 20], "either": [17, 18, 66], "expens": [17, 18], "numer": [17, 18, 57, 58], "unstabl": [17, 18], "note": [17, 18, 19, 47, 57, 58, 64, 65, 66], "care": [17, 18, 66], "taken": [17, 18], "memoiz": [17, 18], "sinc": [17, 18, 19], "autograd": [17, 18], "graph": [17, 18], "mai": [17, 18, 63, 66], "revers": [17, 18], "For": [17, 18, 65], "while": [17, 18], "follow": [17, 18, 63, 66], "work": [17, 18, 19, 64], "without": [17, 18, 63], "t": [17, 18, 55, 57, 59, 66], "log_abs_det_jacobian": [17, 18, 19, 20], "backward": [17, 18, 65], "receiv": [17, 18], "gradient": [17, 18, 65], "howev": [17, 18, 19, 57, 58], "error": [17, 18], "due": [17, 18], "depend": [17, 18, 57, 58, 65, 66], "z": [17, 18, 47], "inv": [17, 18], "grad": [17, 18], "sum": [17, 18, 19, 65], "becaus": [17, 18, 57, 58, 65], "deriv": [17, 18], "implement": [17, 18, 47, 57, 58, 66], "both": [17, 18, 57, 58, 63, 66], "_call": [17, 18, 19, 20], "_invers": [17, 18, 19, 20], "set": [17, 18, 57, 58, 63, 64, 65, 66], "biject": [17, 18, 19], "cache_s": [17, 18, 19], "If": [17, 18, 57, 58, 64], "zero": [17, 18, 19], "done": [17, 18, 64], "latest": [17, 18], "singl": [17, 18, 57, 58, 66], "onli": [17, 18, 56, 57, 58, 65], "support": [17, 18, 57, 58, 64, 66], "domain": [17, 18, 20], "constraint": [17, 18], "valid": [17, 18, 65, 66], "input": [17, 18, 19, 20, 47, 57, 58, 66], "codomain": [17, 18, 20], "output": [17, 18, 19, 20, 47, 66], "A": [17, 18, 19], "iff": [17, 18], "everi": [17, 18, 57, 58, 59, 64], "least": [17, 18], "maintain": [17, 18, 57, 58, 63], "weaker": [17, 18], "pseudoinvers": [17, 18], "properti": [17, 18, 36, 39, 43, 48, 49, 50, 57, 59], "sign": [17, 18], "univari": [17, 18], "monoton": [17, 18], "increas": [17, 18, 19], "decreas": [17, 18], "_param": [17, 18], "conditionallinear": [17, 18], "skip_connect": [17, 18], "conditionaltransformmodul": [17, 18], "learnabl": [17, 18, 20, 21, 66], "normal": [17, 18, 19, 20, 65, 66], "flow": [17, 18, 20, 47, 66], "rather": [17, 18, 20], "than": [17, 18, 20, 57, 58, 66], "so": [17, 18, 19, 20, 47, 65], "conditional_linear": [17, 18, 21, 33, 35, 37, 39, 40, 43], "context_dim": [17, 18, 21, 47], "conditional_skip_linear": [17, 18], "learn_loc": [17, 18], "splittransform": [17, 20], "out_dim": [17, 20], "dist": [17, 19, 20], "add_dim": [17, 20], "remove_dim": [17, 20], "dy": [17, 18, 20], "dx": [17, 18, 20], "reorder": [17, 19], "dimens": [17, 19, 47, 66], "multipli": [17, 19], "matrix": [17, 19], "between": [17, 19, 66], "affineautoregress": [17, 19], "flexibl": [17, 19], "result": [17, 19, 57, 58, 66], "stabil": [17, 19], "learn": [17, 19, 65, 66], "whilst": [17, 19], "being": [17, 19], "autoregress": [17, 19, 47], "absolut": [17, 19], "determin": [17, 19, 63], "easili": [17, 19], "calcul": [17, 19, 57, 59], "two": [17, 19, 47, 57, 58, 66], "layer": [17, 19, 47, 65], "equival": [17, 19], "insid": [17, 19], "those": [17, 19], "iaf": [17, 19], "usag": [17, 19, 47], "autoregressivenn": [17, 19], "10": [17, 19, 45, 47, 50, 51, 52, 60, 61, 65, 66], "ones": [17, 19, 57, 58], "iaf1": [17, 19], "40": [17, 19], "randperm": [17, 19], "dtype": [17, 19], "long": [17, 19], "iaf2": [17, 19], "flow_dist": [17, 19], "longtensor": [17, 19, 48, 49], "order": [17, 19, 57, 58], "appli": [17, 19, 47, 63], "neg": [17, 19, 57, 58, 66], "event": [17, 19, 63], "ab": [17, 19], "update_devic": [17, 19], "invok": [17, 19], "prototyp": [17, 19], "previou": [17, 19, 66], "elementwis": [17, 19], "e": [17, 19, 47, 57, 58, 63], "dy_0": [17, 19], "dx_0": [17, 19], "dy_": [17, 19], "n": [17, 19, 22, 43, 66], "dx_": [17, 19], "express": [17, 19, 63], "turn": [17, 19], "out": [17, 19, 66], "alwai": [17, 19, 57, 58, 64], "vector": [17, 19], "object": [17, 19, 57, 58, 65, 66], "consist": [17, 19], "tupl": [17, 19, 45, 54, 60, 61, 65], "correspond": [17, 19, 65, 66], "integ": [17, 19], "indic": [17, 19, 57, 58, 59], "default": [17, 19, 47, 57, 58, 66], "random": [17, 19, 57, 58], "fetch_transform": 21, "transform_nam": [21, 33, 35, 39, 40, 43], "conditionalcategoricalmodul": 21, "normalmodul": 21, "categoricalmodul": 21, "logit": [21, 36, 39, 43], "conditionalstandardnormalmodul": 21, "conditional_transformed_norm": 21, "n_transform": [21, 33, 35, 39, 40, 43], "transform_param": 21, "transformed_norm": 21, "conditional_categor": 21, "n_class": 21, "mutualinformationestim": [22, 24, 26, 34, 39, 42, 43, 45, 51, 52, 60, 61, 66], "log_ratio": [22, 24, 25, 26, 34, 36, 39, 40, 41, 43], "expected_log_ratio": [22, 33, 39, 40, 42, 43], "unnormalized_log_ratio": [22, 24, 26, 42, 43], "loss": [22, 24, 26, 28, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 48, 49, 50, 65], "d": [22, 43], "p": [22, 43, 66], "expect": [22, 43, 57, 59, 63], "weight": [22, 43, 66], "alphatuba": [23, 26, 43, 66], "neg_sampl": [23, 24, 25, 26, 28, 29, 30, 31, 32, 43, 65, 66], "01": [23, 26, 43], "learnable_baselin": [23, 26, 43], "baseline_param": [23, 25, 26, 32, 43], "empiricaldistribut": 24, "add_sampl": 24, "updat": [24, 64, 65, 66], "discriminativemutualinformationestim": [24, 25, 26, 32, 42, 43], "propos": [24, 26, 43, 64, 66], "critic_on_posit": [24, 26, 43], "critic_on_neg": [24, 26, 43], "log_norm": [24, 26, 43], "compute_log_norm": [24, 26, 27, 31, 32, 43], "grad_baselin": [26, 32, 43], "log_normalization_loss": [26, 32, 43], "compute_log_normalization_loss": [26, 32, 43], "tau": [26, 31, 43, 66], "q_y_given_x": [33, 34, 35, 37, 39, 40, 43, 66], "entropy_i": [33, 39, 43], "generativemutualinformationestim": [33, 34, 36, 37, 39, 40, 41, 42, 43], "approx_log_p_y_given_x": [34, 39, 43], "approx_log_p_i": [34, 35, 37, 39, 40, 43], "discretemutualinformationestim": [36, 39, 43], "q_x": [36, 38, 39, 41, 43], "quantizationfunct": [36, 39, 41, 43, 48, 49, 50], "q_y": [36, 37, 38, 39, 43, 66], "quantize_x": [36, 39, 41, 43], "quantize_i": [36, 39, 43], "approx_log_p_qxqi": [36, 39, 43], "approx_log_p_qx": [36, 39, 41, 43], "approx_log_p_qi": [36, 39, 43], "log_p_qx_given_qi": [36, 39, 43], "approx_log_p_qy_given_qx": [36, 39, 43], "conditional_transform_nam": [37, 39, 43], "n_conditional_transform": [37, 39, 43], "marginal_transform_nam": [37, 38, 39, 43], "n_marginal_transform": [37, 38, 39, 43], "q_xy": [38, 39, 43, 66], "approx_log_p_x": [38, 39, 43], "approx_log_p_xi": [38, 39, 43], "approx_log_p_x_given_i": [38, 39, 43], "joint_transform_nam": [38, 39, 43], "affine_autoregress": [38, 39, 43], "n_joint_transform": [38, 39, 43], "q_qx_given_i": [39, 41, 43], "approx_log_p_qx_given_i": [39, 41, 43], "samebucketconditionaldistribut": 41, "q": [41, 66], "hybridmutualinformationestim": [42, 43], "generative_estim": [42, 43], "discriminative_estim": [42, 43], "train_generative_estim": [42, 43], "train_discriminative_estim": [42, 43], "instantiate_estim": 44, "estimator_nam": [44, 45, 60, 61, 65, 66], "verbos": [44, 45, 51, 52, 60, 61, 66], "__version__": [45, 65], "estimate_mi": [45, 60, 61, 65, 66], "train_load": [45, 51, 52, 60, 61, 65, 66], "valid_load": [45, 51, 52, 60, 61, 66], "test_load": [45, 60, 61], "valid_percentag": [45, 51, 52, 60, 61, 66], "2": [45, 48, 49, 50, 51, 52, 57, 58, 60, 61, 65, 66], "max_epoch": [45, 48, 49, 51, 52, 53, 60, 61, 65, 66], "optimizer_class": [45, 48, 49, 51, 52, 53, 60, 61, 65], "optim": [45, 48, 49, 51, 52, 53, 60, 61, 65, 66], "adam": [45, 48, 49, 51, 52, 53, 60, 61, 65], "optimizer_param": [45, 48, 49, 51, 52, 53, 60, 61, 65], "return_log": [45, 51, 52, 60, 61, 65, 66], "lr_anneal": [45, 51, 52, 60, 61], "warmup_percentag": [45, 51, 52, 60, 61], "train_batch_s": [45, 60, 61, 65, 66], "evaluation_batch_s": [45, 60, 61, 65, 66], "num_work": [45, 48, 49, 51, 52, 53, 57, 58, 60, 61, 66], "8": [45, 48, 49, 51, 52, 53, 60, 61, 66], "early_stop": [45, 51, 52, 60, 61], "patienc": [45, 51, 52, 60, 61], "3": [45, 51, 52, 60, 61, 65, 66], "001": [45, 51, 52, 60, 61], "return_estim": [45, 60, 61, 66], "panda": [45, 51, 52, 60, 61, 65], "datafram": [45, 51, 52, 60, 61, 65], "jointdensenn": 47, "param_dim": 47, "densenn": [47, 65], "simpl": [47, 66], "dens": 47, "feedforward": 47, "g": [47, 57, 58], "some": [47, 66], "conditionalplanarflow": 47, "uncondit": 47, "affinecoupl": 47, "requir": [47, 57, 59, 64, 66], "rand": 47, "100": 47, "50": 47, "b": [47, 64], "c": [47, 65], "dimension": 47, "hidden": [47, 66], "unit": 47, "p_n": 47, "final": 47, "unbound": 47, "real": 47, "number": [47, 57, 58, 65, 66], "constant": [47, 65, 66], "ident": [47, 63], "skipdensenn": 47, "mergeoutput": 47, "n_bin": [48, 49, 50], "learnablequant": [48, 49], "vectorquant": [48, 49], "codebook_lookup": [48, 49], "learnablevectorquant": [48, 49, 50], "quantization_dim": [48, 49, 50], "fixedquant": [48, 49], "threshold": [48, 49], "vector_quant": [48, 49], "vqvae_quant": [48, 49], "numpi": [48, 49, 51, 53, 57, 58, 59, 65, 66], "arrai": [48, 49, 51, 53, 66], "dataload": [48, 49, 51, 53, 57, 58, 59, 60, 61, 65, 66], "iter": [48, 49, 51, 53, 57, 58, 59, 65], "decoder_transform_param": [48, 49, 50], "beta": [48, 49, 50], "batch_siz": [48, 49, 51, 52, 53, 57, 58, 59, 60, 61, 66], "encod": [49, 50], "decod": [49, 50], "25": [49, 50], "99": [49, 50], "cross_mod": [49, 50], "initial_pati": 50, "train_mi_estim": [51, 52, 66], "train_vqva": [51, 53], "unfold_sampl": 54, "unfold": 54, "ellipsi": 55, "reset_cache_after_cal": 55, "reset_cache_before_cal": 55, "sampledataset": [56, 57, 66], "sequenc": [56, 57], "oper": [56, 57, 64], "read": [56, 57], "concret": [56, 57], "overrid": [56, 57], "__new__": [56, 57], "__getitem__": [56, 57], "__len__": [56, 57, 58, 59], "item": [56, 57, 65], "distributiondataload": [57, 58], "max_sampl": [57, 58], "100000": [57, 58, 65], "split_dim": [57, 58], "collect": [57, 58], "__next__": [57, 58], "__iter__": [57, 58, 59], "sameattributedataload": [57, 58], "ndarrai": [57, 58, 59], "combin": [57, 58, 66], "over": [57, 58, 59, 65], "style": [57, 58], "multi": [57, 58], "process": [57, 58, 66], "load": [57, 58, 66], "custom": [57, 58, 66], "automat": [57, 58], "collat": [57, 58], "memori": [57, 58], "pin": [57, 58], "detail": [57, 58, 63, 64, 66], "how": [57, 58, 64, 66], "mani": [57, 58], "shuffl": [57, 58, 66], "reshuffl": [57, 58], "epoch": [57, 58, 65, 66], "strategi": [57, 58], "draw": [57, 58], "specifi": [57, 58, 65, 66], "batch_sampl": [57, 58], "like": [57, 58], "time": [57, 58, 65], "mutual": [57, 58, 65], "exclus": [57, 58], "drop_last": [57, 58], "subprocess": [57, 58], "mean": [57, 58, 65], "main": [57, 58], "collate_fn": [57, 58], "merg": [57, 58], "form": [57, 58], "mini": [57, 58], "pin_memori": [57, 58], "copi": [57, 58, 64], "cuda": [57, 58, 65], "element": [57, 58, 59, 66], "below": [57, 58], "drop": [57, 58], "last": [57, 58, 65], "incomplet": [57, 58], "divis": [57, 58], "smaller": [57, 58], "timeout": [57, 58], "posit": [57, 58, 63], "worker": [57, 58], "non": [57, 58], "worker_init_fn": [57, 58], "each": [57, 58, 65, 66], "id": [57, 58], "after": [57, 58], "seed": [57, 58], "rng": [57, 58], "randomsampl": [57, 58], "index": [57, 58], "multiprocess": [57, 58], "base_se": [57, 58], "prefetch_factor": [57, 58], "keyword": [57, 58], "advanc": [57, 58, 63, 66], "total": [57, 58], "prefetch": [57, 58], "across": [57, 58], "otherwis": [57, 58, 63], "persistent_work": [57, 58], "shutdown": [57, 58], "ha": [57, 58, 59], "been": [57, 58], "consum": [57, 58], "onc": [57, 58], "instanc": [57, 58, 63, 66], "aliv": [57, 58], "pin_memory_devic": [57, 58], "spawn": [57, 58], "start": [57, 58], "cannot": [57, 58, 65], "unpickl": [57, 58], "lambda": [57, 58], "best": [57, 58, 63], "practic": [57, 58], "relat": [57, 58], "pytorch": [57, 58, 65], "len": [57, 58, 65, 66], "heurist": [57, 58], "length": [57, 58, 59], "iterabledataset": [57, 58], "instead": [57, 58], "proper": [57, 58], "round": [57, 58], "regardless": [57, 58, 63], "configur": [57, 58], "guess": [57, 58], "make": [57, 58, 63, 64, 66], "trust": [57, 58], "user": [57, 58], "code": [57, 58, 65, 66], "correctli": [57, 58], "handl": [57, 58, 65], "avoid": [57, 58, 65], "duplic": [57, 58], "shard": [57, 58], "multipl": [57, 58], "still": [57, 58], "inaccur": [57, 58], "complet": [57, 58], "broken": [57, 58], "worth": [57, 58], "unfortun": [57, 58], "detect": [57, 58], "case": [57, 58], "_": [57, 58], "interact": [57, 58], "reproduc": [57, 58, 64], "question": [57, 58], "sample_same_attribut": [57, 58], "sameattributesampl": [57, 59], "n_sampl": [57, 59], "min_batch_s": [57, 59], "isn": [57, 59], "strictli": [57, 59], "involv": [57, 59], "_compute_len": [57, 59], "compare_attribut": [57, 59], "make_batch": [57, 59], "mask": [57, 59], "evaluate_mi": [60, 61, 65, 66], "first": [62, 65, 66], "releas": [62, 64, 66], "In": [63, 65], "foster": 63, "open": [63, 64, 65], "welcom": [63, 64], "environ": 63, "we": [63, 65, 66], "contributor": 63, "particip": 63, "project": [63, 64, 65, 66], "commun": 63, "harass": 63, "free": [63, 64], "experi": 63, "everyon": 63, "ag": 63, "bodi": 63, "disabl": 63, "ethnic": 63, "gender": 63, "level": 63, "nation": 63, "person": 63, "appear": 63, "race": 63, "religion": 63, "sexual": 63, "orient": 63, "behavior": 63, "contribut": 63, "includ": [63, 64, 65, 66], "inclus": 63, "languag": 63, "Being": 63, "respect": [63, 66], "differ": 63, "viewpoint": 63, "gracefulli": 63, "accept": 63, "construct": 63, "focus": 63, "what": 63, "show": 63, "empathi": 63, "toward": 63, "member": 63, "unaccept": 63, "imageri": 63, "unwelcom": 63, "attent": 63, "troll": 63, "insult": 63, "derogatori": 63, "comment": 63, "polit": 63, "attack": 63, "public": 63, "privat": 63, "publish": 63, "physic": 63, "electron": 63, "address": 63, "explicit": 63, "permiss": 63, "could": 63, "reason": 63, "consid": [63, 66], "inappropri": 63, "profession": 63, "clarifi": 63, "take": [63, 66], "appropri": [63, 64], "fair": 63, "correct": 63, "action": 63, "right": 63, "remov": 63, "edit": 63, "reject": 63, "wiki": 63, "issu": [63, 64], "align": 63, "ban": 63, "temporarili": 63, "perman": 63, "deem": 63, "threaten": 63, "offens": 63, "harm": 63, "within": 63, "space": 63, "individu": 63, "its": [63, 64, 66], "offici": [63, 64], "mail": 63, "post": [63, 64], "via": [63, 66], "social": 63, "media": 63, "account": 63, "act": 63, "appoint": 63, "onlin": 63, "offlin": 63, "represent": [63, 66], "further": 63, "abus": 63, "report": [63, 66], "contact": 63, "team": 63, "review": 63, "investig": 63, "complaint": 63, "respond": 63, "circumst": 63, "oblig": 63, "confidenti": 63, "regard": 63, "incid": 63, "specif": 63, "polici": 63, "who": 63, "good": 63, "faith": 63, "face": 63, "temporari": 63, "repercuss": 63, "leadership": 63, "adapt": 63, "coven": 63, "homepag": 63, "4": [63, 65, 66], "greatli": 64, "appreci": 64, "littl": 64, "bit": 64, "help": 64, "credit": 64, "pleas": [64, 66], "system": [64, 65, 66], "about": 64, "local": 64, "setup": 64, "might": 64, "troubleshoot": 64, "step": [64, 65], "look": 64, "through": [64, 66], "github": 64, "anyth": 64, "tag": 64, "want": [64, 65], "whoever": 64, "enhanc": 64, "never": 64, "enough": 64, "feel": 64, "part": 64, "docstr": 64, "even": 64, "web": 64, "blog": 64, "articl": 64, "explain": 64, "would": 64, "keep": 64, "scope": 64, "narrow": 64, "possibl": [64, 66], "easier": 64, "rememb": 64, "volunt": 64, "driven": 64, "readi": 64, "here": [64, 66], "up": 64, "develop": 64, "download": 64, "instal": 64, "poetri": 64, "git": 64, "similar": 64, "branch": 64, "chang": 64, "checkout": 64, "bugfix": 64, "re": 64, "check": [64, 66], "conform": 64, "format": [64, 65], "pass": [64, 65, 66], "test": [64, 65], "meet": 64, "addit": [64, 66], "add": 64, "current": 64, "python": 64, "By": [64, 66], "agre": [64, 66], "abid": [64, 66], "term": [64, 66], "To": 65, "print": [65, 66], "oserror": 65, "traceback": 65, "most": [65, 66], "recent": 65, "file": 65, "pypoetri": 65, "virtualenv": 65, "mist": 65, "77tfslfy": 65, "py3": 65, "lib": 65, "python3": 65, "site": 65, "packag": [65, 66], "py": [65, 66], "168": 65, "_load_global_dep": 65, "167": 65, "try": 65, "ctype": 65, "cdll": 65, "lib_path": 65, "rtld_global": 65, "169": 65, "except": 65, "err": 65, "170": 65, "happen": 65, "wheel": 65, "pypi": 65, "dep": 65, "171": 65, "purelib": 65, "nvidia": 65, "cu11": 65, "anaconda3": 65, "env": 65, "382": 65, "use_errno": 65, "use_last_error": 65, "winmod": 65, "381": 65, "_handl": 65, "_dlopen": 65, "_name": 65, "383": 65, "els": 65, "libcurand": 65, "share": 65, "No": 65, "directori": 65, "dure": 65, "anoth": 65, "occur": 65, "valueerror": 65, "cell": 65, "line": 65, "phd": 65, "src": 65, "importlib": 65, "metadata": 65, "pd": 65, "np": [65, 66], "6": [65, 66], "228": 65, "217": 65, "218": 65, "easi": 65, "prevent": [65, 66], "219": 65, "symbol": 65, "libtorch": 65, "clobber": 65, "225": 65, "226": 65, "global": 65, "227": 65, "use_global_dep": 65, "229": 65, "_c": 65, "noqa": 65, "f403": 65, "231": 65, "appeas": 65, "checker": 65, "ordinarili": 65, "bind": 65, "insert": 65, "232": 65, "initi": 65, "189": 65, "187": 65, "rais": 65, "188": 65, "lib_fold": 65, "lib_nam": 65, "cuda_lib": 65, "_preload_cuda_dep": 65, "190": 65, "154": 65, "152": 65, "break": 65, "153": 65, "found": 65, "path": 65, "sy": 65, "155": 65, "libcubla": 65, "home": 65, "marco": [65, 66], "python39": 65, "zip": 65, "dynload": 65, "bivari": 65, "multivariatenorm": 65, "cov": 65, "p_xy": 65, "unsqueez": 65, "repeat": 65, "p_x": 65, "p_y": 65, "true_mi": 65, "entropi": 65, "nat": [65, 66], "8303654193878174": 65, "matplotlib": 65, "pyplot": 65, "plt": 65, "reshap": 65, "scatter": 65, "marker": 65, "05": 65, "titl": 65, "xlabel": 65, "ylabel": 65, "train_log": [65, 66], "256": 65, "32": [65, 66], "16": [65, 66], "instanti": [65, 66], "ratio_estim": 65, "modulelist": 65, "in_featur": 65, "out_featur": 65, "bia": 65, "inplac": 65, "improv": [65, 66], "stop": [65, 66], "seaborn": 65, "sn": 65, "set_styl": 65, "whitegrid": 65, "axhlin": 65, "l": 65, "color": 65, "k": 65, "lineplot": 65, "hue": 65, "xlim": 65, "7": [65, 66], "8286637599815798": 65, "deep": [65, 66], "infomax": 65, "scalar": [65, 66], "sequenti": [65, 66], "64": [65, 66], "mont": 65, "carlo": 65, "Then": [65, 66], "jensen": 65, "shannon": 65, "now": 65, "tqdm": 65, "adamw": 65, "rate": 65, "5e": 65, "opt": 65, "lr": 65, "n_epoch": 65, "empti": 65, "progress": 65, "rang": 65, "trainload": 65, "And": [65, 66], "mi": 65, "reset": 65, "zero_grad": 65, "backpropag": 65, "append": 65, "plot": 65, "ax": 65, "subplot": 65, "figsiz": 65, "set_titl": 65, "red": 65, "line2d": 65, "0x7f572d52f220": 65, "testload": 65, "std": 65, "3f": 65, "835": 65, "125": 65, "830": 65, "librari": [65, 66], "explicitli": 65, "loop": 65, "optimize_mi_estim": 65, "mi_valu": 65, "mi_std": 65, "119": 65, "TO": 66, "BE": 66, "soon": 66, "pip": 66, "basic": 66, "continu": 66, "modern": 66, "architectur": 66, "observ": 66, "directli": 66, "fit": 66, "estimated_mi": 66, "maximum": 66, "flag": 66, "procedur": 66, "altern": 66, "manual": 66, "perform": 66, "entireti": 66, "descript": 66, "simplifi": 66, "class": 66, "wrapper": 66, "concaten": 66, "constructor": 66, "summar": 66, "tabl": 66, "hyperparamet": 66, "phi": 66, "m": 66, "gamma_": 66, "ema": 66, "b_": 66, "xi": 66, "q_": 66, "theta": 66, "psi": 66, "11": 66, "head": 66, "h_": 66, "pari": 66, "joint_baselin": 66, "variat": 66, "approxim": 66, "usual": 66, "finit": 66, "exponenti": 66, "move": 66, "averag": 66, "decai": 66, "interv": 66, "clip": 66, "12": 66, "come": 66, "accur": 66, "row": 66, "eiter": 66, "batch_x": 66, "batch_i": 66, "cross": 66, "earli": 66, "random_split": 66, "replac": 66, "disk": 66, "train_siz": 66, "valid_s": 66, "train_set": 66, "valid_set": 66, "recommend": 66, "overfit": 66, "larger": 66, "nguyen": 66, "xuanlong": 66, "martin": 66, "wainwright": 66, "michael": 66, "jordan": 66, "diverg": 66, "likelihood": 66, "convex": 66, "risk": 66, "minim": 66, "ieee": 66, "transact": 66, "theori": 66, "56": 66, "2010": 66, "5847": 66, "5861": 66, "belghazi": 66, "moham": 66, "ishmael": 66, "et": 66, "al": 66, "intern": 66, "confer": 66, "machin": 66, "pmlr": 66, "2018": 66, "oord": 66, "aaron": 66, "van": 66, "den": 66, "yazh": 66, "li": 66, "oriol": 66, "vinyal": 66, "contrast": 66, "predict": 66, "arxiv": 66, "preprint": 66, "1807": 66, "03748": 66, "pool": 66, "ben": 66, "On": 66, "bound": 66, "2019": 66, "hjelm": 66, "r": 66, "devon": 66, "maxim": 66, "1808": 66, "06670": 66, "song": 66, "jiam": 66, "stefano": 66, "ermon": 66, "understand": 66, "limit": 66, "1910": 66, "06222": 66, "guo": 66, "qing": 66, "tight": 66, "fenchel": 66, "legendr": 66, "35": 66, "2022": 66, "28319": 66, "28334": 66, "barber": 66, "david": 66, "felix": 66, "agakov": 66, "im": 66, "algorithm": 66, "approach": 66, "320": 66, "2004": 66, "201": 66, "mcallest": 66, "karl": 66, "strato": 66, "formal": 66, "measur": 66, "artifici": 66, "intellig": 66, "statist": 66, "2020": 66, "cheng": 66, "pengyu": 66, "upper": 66, "federici": 66, "ruhe": 66, "patrick": 66, "forr\u00e9": 66, "effect": 66, "2306": 66, "00608": 66, "2023": 66, "brekelman": 66, "rob": 66, "anneal": 66, "energi": 66, "2303": 66, "06992": 66, "guidelin": 66, "conduct": 66, "wa": 66, "It": 66, "under": 66, "mit": 66, "cookiecutt": 66, "pkg": 66, "templat": 66}, "objects": {"": [[45, 0, 0, "-", "torch_mist"]], "torch_mist": [[45, 1, 1, "", "__version__"], [2, 0, 0, "-", "baselines"], [4, 0, 0, "-", "critic"], [8, 0, 0, "-", "data"], [11, 0, 0, "-", "distributions"], [45, 4, 1, "", "estimate_mi"], [43, 0, 0, "-", "estimators"], [46, 0, 0, "-", "nn"], [49, 0, 0, "-", "quantization"], [51, 0, 0, "-", "train"], [61, 0, 0, "-", "utils"]], "torch_mist.baselines": [[2, 2, 1, "", "AlphaTUBABaseline"], [2, 2, 1, "", "Baseline"], [2, 2, 1, "", "BatchLogMeanExp"], [2, 2, 1, "", "ConstantBaseline"], [2, 2, 1, "", "ExponentialMovingAverage"], [2, 2, 1, "", "InterpolatedBaseline"], [2, 2, 1, "", "LearnableBaseline"], [2, 2, 1, "", "LearnableJointBaseline"], [2, 4, 1, "", "baseline_nn"], [2, 4, 1, "", "joint_baseline_nn"]], "torch_mist.baselines.Baseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.BatchLogMeanExp": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.ConstantBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.ExponentialMovingAverage": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.InterpolatedBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.LearnableBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.baselines.LearnableJointBaseline": [[2, 3, 1, "", "forward"]], "torch_mist.critic": [[4, 2, 1, "", "Critic"], [4, 2, 1, "", "JointCritic"], [4, 2, 1, "", "SeparableCritic"], [3, 0, 0, "-", "base"], [4, 4, 1, "", "critic_nn"], [5, 0, 0, "-", "joint"], [4, 4, 1, "", "joint_critic"], [6, 0, 0, "-", "separable"], [4, 4, 1, "", "separable_critic"], [7, 0, 0, "-", "utils"]], "torch_mist.critic.Critic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.JointCritic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.SeparableCritic": [[4, 3, 1, "", "forward"]], "torch_mist.critic.base": [[3, 2, 1, "", "Critic"]], "torch_mist.critic.base.Critic": [[3, 3, 1, "", "forward"]], "torch_mist.critic.joint": [[5, 2, 1, "", "JointCritic"]], "torch_mist.critic.joint.JointCritic": [[5, 3, 1, "", "forward"]], "torch_mist.critic.separable": [[6, 2, 1, "", "SeparableCritic"]], "torch_mist.critic.separable.SeparableCritic": [[6, 3, 1, "", "forward"]], "torch_mist.critic.utils": [[7, 4, 1, "", "critic_nn"], [7, 4, 1, "", "joint_critic"], [7, 4, 1, "", "separable_critic"]], "torch_mist.data": [[9, 0, 0, "-", "multimixture"], [10, 0, 0, "-", "multivariate"]], "torch_mist.data.multimixture": [[9, 2, 1, "", "MultivariateCorrelatedNormalMixture"]], "torch_mist.data.multivariate": [[10, 2, 1, "", "JointMultivariateNormal"]], "torch_mist.distributions": [[12, 0, 0, "-", "joint"], [13, 0, 0, "-", "parametrizations"], [15, 0, 0, "-", "product"], [17, 0, 0, "-", "transforms"], [21, 0, 0, "-", "utils"]], "torch_mist.distributions.joint": [[12, 2, 1, "", "ConditionalRatioDistribution"], [12, 2, 1, "", "ConditionedRatioDistribution"], [12, 2, 1, "", "JointDistribution"]], "torch_mist.distributions.joint.ConditionalRatioDistribution": [[12, 3, 1, "", "condition"]], "torch_mist.distributions.joint.ConditionedRatioDistribution": [[12, 3, 1, "", "log_prob"]], "torch_mist.distributions.joint.JointDistribution": [[12, 3, 1, "", "log_prob"], [12, 3, 1, "", "rsample"], [12, 3, 1, "", "sample"]], "torch_mist.distributions.parametrizations": [[14, 0, 0, "-", "map"]], "torch_mist.distributions.parametrizations.map": [[14, 2, 1, "", "DeltaMap"], [14, 1, 1, "", "EPSILON"], [14, 2, 1, "", "LocScaleMap"], [14, 2, 1, "", "LogitsMap"], [14, 2, 1, "", "ParameterMap"]], "torch_mist.distributions.parametrizations.map.DeltaMap": [[14, 3, 1, "", "map_parameters"], [14, 5, 1, "", "n_parameters"], [14, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.LocScaleMap": [[14, 3, 1, "", "map_parameters"], [14, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.LogitsMap": [[14, 3, 1, "", "map_parameters"], [14, 5, 1, "", "n_parameters"], [14, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.parametrizations.map.ParameterMap": [[14, 3, 1, "", "__call__"], [14, 3, 1, "", "map_parameters"], [14, 5, 1, "", "n_parameters"], [14, 5, 1, "", "supported_distributions"]], "torch_mist.distributions.transforms": [[17, 2, 1, "", "ConditionalDistributionModule"], [17, 2, 1, "", "ConditionalLinear"], [17, 2, 1, "", "ConditionalTransformedDistributionModule"], [17, 2, 1, "", "DistributionModule"], [17, 2, 1, "", "Linear"], [17, 2, 1, "", "Permute"], [17, 2, 1, "", "SplitTransform"], [17, 2, 1, "", "TransformedDistributionModule"], [16, 0, 0, "-", "base"], [17, 4, 1, "", "conditional_linear"], [17, 4, 1, "", "conditional_skip_linear"], [18, 0, 0, "-", "linear"], [19, 0, 0, "-", "permute"], [20, 0, 0, "-", "split"]], "torch_mist.distributions.transforms.ConditionalLinear": [[17, 3, 1, "", "_params"], [17, 5, 1, "", "bijective"], [17, 5, 1, "", "codomain"], [17, 3, 1, "", "condition"], [17, 5, 1, "", "domain"]], "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule": [[17, 3, 1, "", "__repr__"], [17, 3, 1, "", "clear_cache"], [17, 3, 1, "", "condition"]], "torch_mist.distributions.transforms.DistributionModule": [[17, 3, 1, "", "__repr__"]], "torch_mist.distributions.transforms.Linear": [[17, 3, 1, "", "_params"], [17, 5, 1, "", "bijective"], [17, 5, 1, "", "codomain"], [17, 5, 1, "", "domain"], [17, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.Permute": [[17, 3, 1, "", "_call"], [17, 3, 1, "", "_inverse"], [17, 3, 1, "", "log_abs_det_jacobian"], [17, 3, 1, "", "update_device"]], "torch_mist.distributions.transforms.SplitTransform": [[17, 3, 1, "", "_call"], [17, 3, 1, "", "_inverse"], [17, 3, 1, "", "add_dims"], [17, 5, 1, "", "codomain"], [17, 3, 1, "", "dist"], [17, 5, 1, "", "domain"], [17, 3, 1, "", "log_abs_det_jacobian"], [17, 3, 1, "", "remove_dims"]], "torch_mist.distributions.transforms.TransformedDistributionModule": [[17, 3, 1, "", "__repr__"], [17, 3, 1, "", "log_prob"], [17, 3, 1, "", "rsample"]], "torch_mist.distributions.transforms.base": [[16, 2, 1, "", "ConditionalDistributionModule"], [16, 2, 1, "", "ConditionalTransformedDistributionModule"], [16, 2, 1, "", "DistributionModule"], [16, 2, 1, "", "TransformedDistributionModule"]], "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule": [[16, 3, 1, "", "__repr__"], [16, 3, 1, "", "clear_cache"], [16, 3, 1, "", "condition"]], "torch_mist.distributions.transforms.base.DistributionModule": [[16, 3, 1, "", "__repr__"]], "torch_mist.distributions.transforms.base.TransformedDistributionModule": [[16, 3, 1, "", "__repr__"], [16, 3, 1, "", "log_prob"], [16, 3, 1, "", "rsample"]], "torch_mist.distributions.transforms.linear": [[18, 2, 1, "", "ConditionalLinear"], [18, 2, 1, "", "ConditionedLinear"], [18, 2, 1, "", "Linear"], [18, 4, 1, "", "conditional_linear"], [18, 4, 1, "", "conditional_skip_linear"], [18, 4, 1, "", "linear"]], "torch_mist.distributions.transforms.linear.ConditionalLinear": [[18, 3, 1, "", "_params"], [18, 5, 1, "", "bijective"], [18, 5, 1, "", "codomain"], [18, 3, 1, "", "condition"], [18, 5, 1, "", "domain"]], "torch_mist.distributions.transforms.linear.ConditionedLinear": [[18, 3, 1, "", "_call"], [18, 3, 1, "", "_inverse"], [18, 5, 1, "id2", "bijective"], [18, 5, 1, "id1", "codomain"], [18, 5, 1, "id0", "domain"], [18, 3, 1, "", "log_abs_det_jacobian"], [18, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.linear.Linear": [[18, 3, 1, "", "_params"], [18, 5, 1, "", "bijective"], [18, 5, 1, "", "codomain"], [18, 5, 1, "", "domain"], [18, 5, 1, "", "sign"]], "torch_mist.distributions.transforms.permute": [[19, 2, 1, "", "Permute"], [19, 4, 1, "", "permute"]], "torch_mist.distributions.transforms.permute.Permute": [[19, 3, 1, "", "_call"], [19, 3, 1, "", "_inverse"], [19, 3, 1, "", "log_abs_det_jacobian"], [19, 3, 1, "", "update_device"]], "torch_mist.distributions.transforms.split": [[20, 2, 1, "", "SplitTransform"]], "torch_mist.distributions.transforms.split.SplitTransform": [[20, 3, 1, "", "_call"], [20, 3, 1, "", "_inverse"], [20, 3, 1, "", "add_dims"], [20, 5, 1, "", "codomain"], [20, 3, 1, "", "dist"], [20, 5, 1, "", "domain"], [20, 3, 1, "", "log_abs_det_jacobian"], [20, 3, 1, "", "remove_dims"]], "torch_mist.distributions.utils": [[21, 2, 1, "", "CategoricalModule"], [21, 2, 1, "", "ConditionalCategoricalModule"], [21, 2, 1, "", "ConditionalStandardNormalModule"], [21, 2, 1, "", "NormalModule"], [21, 4, 1, "", "conditional_categorical"], [21, 4, 1, "", "conditional_transformed_normal"], [21, 4, 1, "", "fetch_transform"], [21, 4, 1, "", "transformed_normal"]], "torch_mist.distributions.utils.CategoricalModule": [[21, 3, 1, "", "__repr__"], [21, 3, 1, "", "log_prob"], [21, 3, 1, "", "rsample"]], "torch_mist.distributions.utils.ConditionalCategoricalModule": [[21, 3, 1, "", "condition"]], "torch_mist.distributions.utils.ConditionalStandardNormalModule": [[21, 3, 1, "", "condition"]], "torch_mist.distributions.utils.NormalModule": [[21, 3, 1, "", "__repr__"], [21, 3, 1, "", "log_prob"], [21, 3, 1, "", "rsample"]], "torch_mist.estimators": [[43, 2, 1, "", "AlphaTUBA"], [43, 2, 1, "", "BA"], [43, 2, 1, "", "CLUB"], [43, 2, 1, "", "DiscreteMutualInformationEstimator"], [43, 2, 1, "", "DiscriminativeMutualInformationEstimator"], [43, 2, 1, "", "DoE"], [43, 2, 1, "", "FLO"], [43, 2, 1, "", "GM"], [43, 2, 1, "", "GenerativeMutualInformationEstimator"], [43, 2, 1, "", "HybridMutualInformationEstimator"], [43, 2, 1, "", "InfoNCE"], [43, 2, 1, "", "JS"], [43, 2, 1, "", "L1Out"], [43, 2, 1, "", "MINE"], [43, 2, 1, "", "MutualInformationEstimator"], [43, 2, 1, "", "NWJ"], [43, 2, 1, "", "PQ"], [43, 2, 1, "", "SMILE"], [43, 2, 1, "", "TUBA"], [43, 4, 1, "", "alpha_tuba"], [43, 4, 1, "", "ba"], [22, 0, 0, "-", "base"], [43, 4, 1, "", "club"], [43, 4, 1, "", "discrete"], [26, 0, 0, "-", "discriminative"], [43, 4, 1, "", "doe"], [43, 4, 1, "", "flo"], [39, 0, 0, "-", "generative"], [43, 4, 1, "", "gm"], [42, 0, 0, "-", "hybrid"], [43, 4, 1, "", "infonce"], [43, 4, 1, "", "js"], [43, 4, 1, "", "l1out"], [43, 4, 1, "", "mine"], [43, 4, 1, "", "nwj"], [43, 4, 1, "", "pq"], [43, 4, 1, "", "smile"], [43, 4, 1, "", "tuba"], [44, 0, 0, "-", "utils"]], "torch_mist.estimators.BA": [[43, 3, 1, "", "expected_log_ratio"]], "torch_mist.estimators.CLUB": [[43, 3, 1, "", "approx_log_p_y"]], "torch_mist.estimators.DiscreteMutualInformationEstimator": [[43, 3, 1, "", "__repr__"], [43, 3, 1, "", "approx_log_p_qx"], [43, 3, 1, "", "approx_log_p_qxqy"], [43, 3, 1, "", "approx_log_p_qy"], [43, 3, 1, "", "approx_log_p_qy_given_qx"], [43, 3, 1, "", "log_p_qx_given_qy"], [43, 3, 1, "", "log_ratio"], [43, 6, 1, "", "logits"], [43, 3, 1, "", "loss"], [43, 3, 1, "", "quantize_x"], [43, 3, 1, "", "quantize_y"]], "torch_mist.estimators.DiscriminativeMutualInformationEstimator": [[43, 3, 1, "", "__repr__"], [43, 3, 1, "", "compute_log_normalization"], [43, 3, 1, "", "critic_on_negatives"], [43, 3, 1, "", "critic_on_positives"], [43, 3, 1, "", "log_normalization"], [43, 3, 1, "", "log_ratio"], [43, 3, 1, "", "loss"], [43, 3, 1, "", "unnormalized_log_ratio"]], "torch_mist.estimators.DoE": [[43, 3, 1, "", "__repr__"], [43, 3, 1, "", "approx_log_p_y"], [43, 3, 1, "", "loss"]], "torch_mist.estimators.FLO": [[43, 3, 1, "", "log_ratio"]], "torch_mist.estimators.GM": [[43, 3, 1, "", "__repr__"], [43, 3, 1, "", "approx_log_p_x"], [43, 3, 1, "", "approx_log_p_x_given_y"], [43, 3, 1, "", "approx_log_p_xy"], [43, 3, 1, "", "loss"]], "torch_mist.estimators.GenerativeMutualInformationEstimator": [[43, 3, 1, "", "__repr__"], [43, 3, 1, "", "approx_log_p_y"], [43, 3, 1, "", "approx_log_p_y_given_x"], [43, 3, 1, "", "log_ratio"], [43, 3, 1, "", "loss"], [43, 3, 1, "", "q_Y_given_x"]], "torch_mist.estimators.HybridMutualInformationEstimator": [[43, 3, 1, "", "expected_log_ratio"], [43, 3, 1, "", "loss"], [43, 3, 1, "", "unnormalized_log_ratio"]], "torch_mist.estimators.InfoNCE": [[43, 3, 1, "", "compute_log_normalization"]], "torch_mist.estimators.JS": [[43, 3, 1, "", "loss"]], "torch_mist.estimators.L1Out": [[43, 3, 1, "", "approx_log_p_y"], [43, 3, 1, "", "expected_log_ratio"], [43, 3, 1, "", "log_ratio"]], "torch_mist.estimators.MutualInformationEstimator": [[43, 3, 1, "", "expected_log_ratio"], [43, 3, 1, "", "forward"], [43, 3, 1, "", "log_ratio"], [43, 3, 1, "", "loss"], [43, 3, 1, "", "unnormalized_log_ratio"]], "torch_mist.estimators.PQ": [[43, 3, 1, "", "__repr__"], [43, 3, 1, "", "approx_log_p_qx"], [43, 3, 1, "", "approx_log_p_qx_given_y"], [43, 3, 1, "", "log_ratio"], [43, 3, 1, "", "loss"], [43, 3, 1, "", "q_QX_given_y"], [43, 3, 1, "", "quantize_x"]], "torch_mist.estimators.SMILE": [[43, 3, 1, "", "compute_log_normalization"], [43, 3, 1, "", "loss"]], "torch_mist.estimators.TUBA": [[43, 3, 1, "", "__repr__"], [43, 3, 1, "", "compute_log_normalization"], [43, 3, 1, "", "compute_log_normalization_loss"], [43, 3, 1, "", "log_normalization_loss"], [43, 3, 1, "", "loss"]], "torch_mist.estimators.base": [[22, 2, 1, "", "MutualInformationEstimator"]], "torch_mist.estimators.base.MutualInformationEstimator": [[22, 3, 1, "", "expected_log_ratio"], [22, 3, 1, "", "forward"], [22, 3, 1, "", "log_ratio"], [22, 3, 1, "", "loss"], [22, 3, 1, "", "unnormalized_log_ratio"]], "torch_mist.estimators.discriminative": [[26, 2, 1, "", "AlphaTUBA"], [26, 2, 1, "", "DiscriminativeMutualInformationEstimator"], [26, 2, 1, "", "FLO"], [26, 2, 1, "", "InfoNCE"], [26, 2, 1, "", "JS"], [26, 2, 1, "", "MINE"], [26, 2, 1, "", "NWJ"], [26, 2, 1, "", "SMILE"], [26, 2, 1, "", "TUBA"], [26, 4, 1, "", "alpha_tuba"], [23, 0, 0, "-", "alpha_tuba"], [24, 0, 0, "-", "base"], [26, 4, 1, "", "flo"], [25, 0, 0, "-", "flo"], [27, 0, 0, "-", "infonce"], [28, 0, 0, "-", "js"], [29, 0, 0, "-", "mine"], [30, 0, 0, "-", "nwj"], [31, 0, 0, "-", "smile"], [32, 0, 0, "-", "tuba"]], "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator": [[26, 3, 1, "", "__repr__"], [26, 3, 1, "", "compute_log_normalization"], [26, 3, 1, "", "critic_on_negatives"], [26, 3, 1, "", "critic_on_positives"], [26, 3, 1, "", "log_normalization"], [26, 3, 1, "", "log_ratio"], [26, 3, 1, "", "loss"], [26, 3, 1, "", "unnormalized_log_ratio"]], "torch_mist.estimators.discriminative.FLO": [[26, 3, 1, "", "log_ratio"]], "torch_mist.estimators.discriminative.InfoNCE": [[26, 3, 1, "", "compute_log_normalization"]], "torch_mist.estimators.discriminative.JS": [[26, 3, 1, "", "loss"]], "torch_mist.estimators.discriminative.SMILE": [[26, 3, 1, "", "compute_log_normalization"], [26, 3, 1, "", "loss"]], "torch_mist.estimators.discriminative.TUBA": [[26, 3, 1, "", "__repr__"], [26, 3, 1, "", "compute_log_normalization"], [26, 3, 1, "", "compute_log_normalization_loss"], [26, 3, 1, "", "log_normalization_loss"], [26, 3, 1, "", "loss"]], "torch_mist.estimators.discriminative.alpha_tuba": [[23, 2, 1, "", "AlphaTUBA"], [23, 4, 1, "", "alpha_tuba"]], "torch_mist.estimators.discriminative.base": [[24, 2, 1, "", "DiscriminativeMutualInformationEstimator"], [24, 2, 1, "", "EmpiricalDistribution"]], "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator": [[24, 3, 1, "", "__repr__"], [24, 3, 1, "", "compute_log_normalization"], [24, 3, 1, "", "critic_on_negatives"], [24, 3, 1, "", "critic_on_positives"], [24, 3, 1, "", "log_normalization"], [24, 3, 1, "", "log_ratio"], [24, 3, 1, "", "loss"], [24, 3, 1, "", "unnormalized_log_ratio"]], "torch_mist.estimators.discriminative.base.EmpiricalDistribution": [[24, 3, 1, "", "add_samples"], [24, 3, 1, "", "sample"], [24, 3, 1, "", "update"]], "torch_mist.estimators.discriminative.flo": [[25, 2, 1, "", "FLO"], [25, 4, 1, "", "flo"]], "torch_mist.estimators.discriminative.flo.FLO": [[25, 3, 1, "", "log_ratio"]], "torch_mist.estimators.discriminative.infonce": [[27, 2, 1, "", "InfoNCE"], [27, 4, 1, "", "infonce"]], "torch_mist.estimators.discriminative.infonce.InfoNCE": [[27, 3, 1, "", "compute_log_normalization"]], "torch_mist.estimators.discriminative.js": [[28, 2, 1, "", "JS"], [28, 4, 1, "", "js"]], "torch_mist.estimators.discriminative.js.JS": [[28, 3, 1, "", "loss"]], "torch_mist.estimators.discriminative.mine": [[29, 2, 1, "", "MINE"], [29, 4, 1, "", "mine"]], "torch_mist.estimators.discriminative.nwj": [[30, 2, 1, "", "NWJ"], [30, 4, 1, "", "nwj"]], "torch_mist.estimators.discriminative.smile": [[31, 2, 1, "", "SMILE"], [31, 4, 1, "", "smile"]], "torch_mist.estimators.discriminative.smile.SMILE": [[31, 3, 1, "", "compute_log_normalization"], [31, 3, 1, "", "loss"]], "torch_mist.estimators.discriminative.tuba": [[32, 2, 1, "", "TUBA"], [32, 4, 1, "", "tuba"]], "torch_mist.estimators.discriminative.tuba.TUBA": [[32, 3, 1, "", "__repr__"], [32, 3, 1, "", "compute_log_normalization"], [32, 3, 1, "", "compute_log_normalization_loss"], [32, 3, 1, "", "log_normalization_loss"], [32, 3, 1, "", "loss"]], "torch_mist.estimators.generative": [[39, 2, 1, "", "BA"], [39, 2, 1, "", "CLUB"], [39, 2, 1, "", "DiscreteMutualInformationEstimator"], [39, 2, 1, "", "DoE"], [39, 2, 1, "", "GM"], [39, 2, 1, "", "GenerativeMutualInformationEstimator"], [39, 2, 1, "", "L1Out"], [39, 2, 1, "", "PQ"], [39, 4, 1, "", "ba"], [33, 0, 0, "-", "ba"], [34, 0, 0, "-", "base"], [39, 4, 1, "", "club"], [35, 0, 0, "-", "club"], [39, 4, 1, "", "discrete"], [36, 0, 0, "-", "discrete"], [39, 4, 1, "", "doe"], [37, 0, 0, "-", "doe"], [39, 4, 1, "", "gm"], [38, 0, 0, "-", "gm"], [40, 0, 0, "-", "l1out"], [41, 0, 0, "-", "pq"]], "torch_mist.estimators.generative.BA": [[39, 3, 1, "", "expected_log_ratio"]], "torch_mist.estimators.generative.CLUB": [[39, 3, 1, "", "approx_log_p_y"]], "torch_mist.estimators.generative.DiscreteMutualInformationEstimator": [[39, 3, 1, "", "__repr__"], [39, 3, 1, "", "approx_log_p_qx"], [39, 3, 1, "", "approx_log_p_qxqy"], [39, 3, 1, "", "approx_log_p_qy"], [39, 3, 1, "", "approx_log_p_qy_given_qx"], [39, 3, 1, "", "log_p_qx_given_qy"], [39, 3, 1, "", "log_ratio"], [39, 6, 1, "", "logits"], [39, 3, 1, "", "loss"], [39, 3, 1, "", "quantize_x"], [39, 3, 1, "", "quantize_y"]], "torch_mist.estimators.generative.DoE": [[39, 3, 1, "", "__repr__"], [39, 3, 1, "", "approx_log_p_y"], [39, 3, 1, "", "loss"]], "torch_mist.estimators.generative.GM": [[39, 3, 1, "", "__repr__"], [39, 3, 1, "", "approx_log_p_x"], [39, 3, 1, "", "approx_log_p_x_given_y"], [39, 3, 1, "", "approx_log_p_xy"], [39, 3, 1, "", "loss"]], "torch_mist.estimators.generative.GenerativeMutualInformationEstimator": [[39, 3, 1, "", "__repr__"], [39, 3, 1, "", "approx_log_p_y"], [39, 3, 1, "", "approx_log_p_y_given_x"], [39, 3, 1, "", "log_ratio"], [39, 3, 1, "", "loss"], [39, 3, 1, "", "q_Y_given_x"]], "torch_mist.estimators.generative.L1Out": [[39, 3, 1, "", "approx_log_p_y"], [39, 3, 1, "", "expected_log_ratio"], [39, 3, 1, "", "log_ratio"]], "torch_mist.estimators.generative.PQ": [[39, 3, 1, "", "__repr__"], [39, 3, 1, "", "approx_log_p_qx"], [39, 3, 1, "", "approx_log_p_qx_given_y"], [39, 3, 1, "", "log_ratio"], [39, 3, 1, "", "loss"], [39, 3, 1, "", "q_QX_given_y"], [39, 3, 1, "", "quantize_x"]], "torch_mist.estimators.generative.ba": [[33, 2, 1, "", "BA"], [33, 4, 1, "", "ba"]], "torch_mist.estimators.generative.ba.BA": [[33, 3, 1, "", "expected_log_ratio"]], "torch_mist.estimators.generative.base": [[34, 2, 1, "", "GenerativeMutualInformationEstimator"]], "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator": [[34, 3, 1, "", "__repr__"], [34, 3, 1, "", "approx_log_p_y"], [34, 3, 1, "", "approx_log_p_y_given_x"], [34, 3, 1, "", "log_ratio"], [34, 3, 1, "", "loss"], [34, 3, 1, "", "q_Y_given_x"]], "torch_mist.estimators.generative.club": [[35, 2, 1, "", "CLUB"], [35, 4, 1, "", "club"]], "torch_mist.estimators.generative.club.CLUB": [[35, 3, 1, "", "approx_log_p_y"]], "torch_mist.estimators.generative.discrete": [[36, 2, 1, "", "DiscreteMutualInformationEstimator"], [36, 4, 1, "", "discrete"]], "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator": [[36, 3, 1, "", "__repr__"], [36, 3, 1, "", "approx_log_p_qx"], [36, 3, 1, "", "approx_log_p_qxqy"], [36, 3, 1, "", "approx_log_p_qy"], [36, 3, 1, "", "approx_log_p_qy_given_qx"], [36, 3, 1, "", "log_p_qx_given_qy"], [36, 3, 1, "", "log_ratio"], [36, 6, 1, "", "logits"], [36, 3, 1, "", "loss"], [36, 3, 1, "", "quantize_x"], [36, 3, 1, "", "quantize_y"]], "torch_mist.estimators.generative.doe": [[37, 2, 1, "", "DoE"], [37, 4, 1, "", "doe"]], "torch_mist.estimators.generative.doe.DoE": [[37, 3, 1, "", "__repr__"], [37, 3, 1, "", "approx_log_p_y"], [37, 3, 1, "", "loss"]], "torch_mist.estimators.generative.gm": [[38, 2, 1, "", "GM"], [38, 4, 1, "", "gm"]], "torch_mist.estimators.generative.gm.GM": [[38, 3, 1, "", "__repr__"], [38, 3, 1, "", "approx_log_p_x"], [38, 3, 1, "", "approx_log_p_x_given_y"], [38, 3, 1, "", "approx_log_p_xy"], [38, 3, 1, "", "loss"]], "torch_mist.estimators.generative.l1out": [[40, 2, 1, "", "L1Out"], [40, 4, 1, "", "l1out"]], "torch_mist.estimators.generative.l1out.L1Out": [[40, 3, 1, "", "approx_log_p_y"], [40, 3, 1, "", "expected_log_ratio"], [40, 3, 1, "", "log_ratio"]], "torch_mist.estimators.generative.pq": [[41, 2, 1, "", "PQ"], [41, 2, 1, "", "SameBucketConditionalDistribution"], [41, 4, 1, "", "pq"]], "torch_mist.estimators.generative.pq.PQ": [[41, 3, 1, "", "__repr__"], [41, 3, 1, "", "approx_log_p_qx"], [41, 3, 1, "", "approx_log_p_qx_given_y"], [41, 3, 1, "", "log_ratio"], [41, 3, 1, "", "loss"], [41, 3, 1, "", "q_QX_given_y"], [41, 3, 1, "", "quantize_x"]], "torch_mist.estimators.generative.pq.SameBucketConditionalDistribution": [[41, 3, 1, "", "condition"]], "torch_mist.estimators.hybrid": [[42, 2, 1, "", "HybridMutualInformationEstimator"]], "torch_mist.estimators.hybrid.HybridMutualInformationEstimator": [[42, 3, 1, "", "expected_log_ratio"], [42, 3, 1, "", "loss"], [42, 3, 1, "", "unnormalized_log_ratio"]], "torch_mist.estimators.utils": [[44, 4, 1, "", "instantiate_estimator"]], "torch_mist.nn": [[47, 0, 0, "-", "utils"]], "torch_mist.nn.utils": [[47, 2, 1, "", "Constant"], [47, 2, 1, "", "Identity"], [47, 2, 1, "", "JointDenseNN"], [47, 2, 1, "", "MergeOutputs"], [47, 2, 1, "", "SkipDenseNN"]], "torch_mist.nn.utils.Constant": [[47, 3, 1, "", "__repr__"], [47, 3, 1, "", "forward"]], "torch_mist.nn.utils.Identity": [[47, 3, 1, "", "forward"]], "torch_mist.nn.utils.JointDenseNN": [[47, 3, 1, "", "forward"]], "torch_mist.nn.utils.MergeOutputs": [[47, 3, 1, "", "forward"]], "torch_mist.nn.utils.SkipDenseNN": [[47, 3, 1, "", "forward"]], "torch_mist.quantization": [[49, 2, 1, "", "FixedQuantization"], [49, 2, 1, "", "LearnableQuantization"], [49, 2, 1, "", "LearnableVectorQuantization"], [49, 2, 1, "", "QuantizationFunction"], [49, 2, 1, "", "VQVAE"], [49, 2, 1, "", "VectorQuantization"], [48, 0, 0, "-", "functions"], [49, 4, 1, "", "vector_quantization"], [50, 0, 0, "-", "vqvae"], [49, 4, 1, "", "vqvae_quantization"]], "torch_mist.quantization.FixedQuantization": [[49, 3, 1, "", "forward"], [49, 6, 1, "", "n_bins"]], "torch_mist.quantization.LearnableQuantization": [[49, 3, 1, "", "loss"]], "torch_mist.quantization.LearnableVectorQuantization": [[49, 3, 1, "", "__repr__"], [49, 3, 1, "", "forward"]], "torch_mist.quantization.QuantizationFunction": [[49, 3, 1, "", "forward"], [49, 6, 1, "", "n_bins"]], "torch_mist.quantization.VQVAE": [[49, 3, 1, "", "loss"], [49, 6, 1, "", "quantization"]], "torch_mist.quantization.VectorQuantization": [[49, 3, 1, "", "codebook_lookup"], [49, 3, 1, "", "forward"], [49, 6, 1, "", "n_bins"]], "torch_mist.quantization.functions": [[48, 2, 1, "", "FixedQuantization"], [48, 2, 1, "", "LearnableQuantization"], [48, 2, 1, "", "LearnableVectorQuantization"], [48, 2, 1, "", "QuantizationFunction"], [48, 2, 1, "", "VectorQuantization"], [48, 4, 1, "", "vector_quantization"], [48, 4, 1, "", "vqvae_quantization"]], "torch_mist.quantization.functions.FixedQuantization": [[48, 3, 1, "", "forward"], [48, 6, 1, "", "n_bins"]], "torch_mist.quantization.functions.LearnableQuantization": [[48, 3, 1, "", "loss"]], "torch_mist.quantization.functions.LearnableVectorQuantization": [[48, 3, 1, "", "__repr__"], [48, 3, 1, "", "forward"]], "torch_mist.quantization.functions.QuantizationFunction": [[48, 3, 1, "", "forward"], [48, 6, 1, "", "n_bins"]], "torch_mist.quantization.functions.VectorQuantization": [[48, 3, 1, "", "codebook_lookup"], [48, 3, 1, "", "forward"], [48, 6, 1, "", "n_bins"]], "torch_mist.quantization.vqvae": [[50, 1, 1, "", "INITIAL_PATIENCE"], [50, 2, 1, "", "VQVAE"], [50, 4, 1, "", "vqvae"]], "torch_mist.quantization.vqvae.VQVAE": [[50, 3, 1, "", "loss"], [50, 6, 1, "", "quantization"]], "torch_mist.train": [[52, 0, 0, "-", "mi_estimator"], [51, 4, 1, "", "train_mi_estimator"], [51, 4, 1, "", "train_vqvae"], [53, 0, 0, "-", "vqvae"]], "torch_mist.train.mi_estimator": [[52, 4, 1, "", "train_mi_estimator"]], "torch_mist.train.vqvae": [[53, 4, 1, "", "train_vqvae"]], "torch_mist.utils": [[54, 0, 0, "-", "batch_utils"], [55, 0, 0, "-", "caching"], [57, 0, 0, "-", "data"], [61, 4, 1, "", "estimate_mi"], [60, 0, 0, "-", "estimation"], [61, 4, 1, "", "evaluate_mi"]], "torch_mist.utils.batch_utils": [[54, 4, 1, "", "unfold_samples"]], "torch_mist.utils.caching": [[55, 1, 1, "", "T"], [55, 4, 1, "", "cached"], [55, 4, 1, "", "reset_cache_after_call"], [55, 4, 1, "", "reset_cache_before_call"]], "torch_mist.utils.data": [[57, 2, 1, "", "DistributionDataLoader"], [57, 2, 1, "", "SameAttributeDataLoader"], [57, 2, 1, "", "SameAttributeSampler"], [57, 2, 1, "", "SampleDataset"], [56, 0, 0, "-", "dataset"], [58, 0, 0, "-", "loader"], [57, 4, 1, "", "sample_same_attributes"], [59, 0, 0, "-", "sampler"]], "torch_mist.utils.data.DistributionDataLoader": [[57, 3, 1, "", "__iter__"], [57, 3, 1, "", "__len__"], [57, 3, 1, "", "__next__"]], "torch_mist.utils.data.SameAttributeSampler": [[57, 3, 1, "", "__iter__"], [57, 3, 1, "", "__len__"], [57, 3, 1, "", "_compute_len"], [57, 6, 1, "", "attributes"], [57, 3, 1, "", "compare_attributes"], [57, 3, 1, "", "make_batch"]], "torch_mist.utils.data.SampleDataset": [[57, 3, 1, "", "__getitem__"], [57, 3, 1, "", "__len__"]], "torch_mist.utils.data.dataset": [[56, 2, 1, "", "SampleDataset"]], "torch_mist.utils.data.dataset.SampleDataset": [[56, 3, 1, "", "__getitem__"], [56, 3, 1, "", "__len__"]], "torch_mist.utils.data.loader": [[58, 2, 1, "", "DistributionDataLoader"], [58, 2, 1, "", "SameAttributeDataLoader"], [58, 4, 1, "", "sample_same_attributes"]], "torch_mist.utils.data.loader.DistributionDataLoader": [[58, 3, 1, "", "__iter__"], [58, 3, 1, "", "__len__"], [58, 3, 1, "", "__next__"]], "torch_mist.utils.data.sampler": [[59, 2, 1, "", "SameAttributeSampler"]], "torch_mist.utils.data.sampler.SameAttributeSampler": [[59, 3, 1, "", "__iter__"], [59, 3, 1, "", "__len__"], [59, 3, 1, "", "_compute_len"], [59, 6, 1, "", "attributes"], [59, 3, 1, "", "compare_attributes"], [59, 3, 1, "", "make_batch"]], "torch_mist.utils.estimation": [[60, 4, 1, "", "estimate_mi"], [60, 4, 1, "", "evaluate_mi"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:function", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"pytest": 0, "cach": [0, 55], "directori": 0, "api": 1, "refer": [1, 66], "torch_mist": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "baselin": 2, "modul": [2, 3, 5, 6, 7, 9, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60], "content": [2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "class": [2, 3, 4, 5, 6, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 56, 57, 58, 59], "function": [2, 4, 7, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61], "critic": [3, 4, 5, 6, 7], "base": [3, 16, 22, 24, 34], "submodul": [4, 8, 11, 13, 17, 26, 39, 43, 45, 46, 49, 51, 57, 61], "packag": [4, 17, 26, 39, 43, 45, 49, 51, 57, 61], "joint": [5, 12], "separ": 6, "util": [7, 21, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 65], "data": [8, 9, 10, 56, 57, 58, 59, 65], "multimixtur": 9, "multivari": 10, "distribut": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "subpackag": [11, 43, 45, 61], "parametr": [13, 14], "map": 14, "attribut": [14, 45, 50, 55, 63], "product": 15, "transform": [16, 17, 18, 19, 20], "linear": 18, "permut": 19, "split": 20, "estim": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 60, 65, 66], "discrimin": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "alpha_tuba": 23, "flo": 25, "infonc": 27, "j": 28, "mine": 29, "nwj": 30, "smile": 31, "tuba": 32, "gener": [33, 34, 35, 36, 37, 38, 39, 40, 41], "ba": 33, "club": 35, "discret": 36, "doe": 37, "gm": 38, "l1out": 40, "pq": 41, "hybrid": [42, 66], "nn": [46, 47], "quantiz": [48, 49, 50], "vqvae": [50, 53], "train": [51, 52, 53, 65, 66], "mi_estim": 52, "batch_util": 54, "dataset": 56, "loader": 58, "sampler": 59, "changelog": 62, "v0": 62, "1": 62, "0": 62, "20": 62, "06": 62, "2023": 62, "code": [63, 64], "conduct": [63, 64], "our": 63, "pledg": 63, "standard": 63, "respons": 63, "scope": 63, "enforc": 63, "contribut": [64, 66], "type": 64, "report": 64, "bug": 64, "fix": 64, "implement": 64, "featur": 64, "write": 64, "document": 64, "submit": 64, "feedback": 64, "get": 64, "start": 64, "pull": 64, "request": 64, "guidelin": 64, "simpl": 65, "exampl": 65, "defin": 65, "definit": 65, "visual": 65, "evalu": [65, 66], "shortcut": 65, "mist": 66, "A": 66, "pytorch": 66, "mutual": 66, "inform": 66, "toolkit": 66, "instal": 66, "usag": 66, "licens": 66, "credit": 66}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pytest cache directory": [[0, "pytest-cache-directory"]], "API Reference": [[1, "api-reference"]], "torch_mist.baselines": [[2, "module-torch_mist.baselines"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [12, "module-contents"], [14, "module-contents"], [16, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [44, "module-contents"], [47, "module-contents"], [48, "module-contents"], [50, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [9, "classes"], [10, "classes"], [12, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"]], "Functions": [[2, "functions"], [4, "functions"], [7, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [21, "functions"], [23, "functions"], [25, "functions"], [26, "functions"], [27, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [33, "functions"], [35, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [39, "functions"], [40, "functions"], [41, "functions"], [43, "functions"], [44, "functions"], [45, "functions"], [48, "functions"], [49, "functions"], [50, "functions"], [51, "functions"], [52, "functions"], [53, "functions"], [54, "functions"], [55, "functions"], [57, "functions"], [58, "functions"], [60, "functions"], [61, "functions"]], "torch_mist.critic.base": [[3, "module-torch_mist.critic.base"]], "torch_mist.critic": [[4, "module-torch_mist.critic"]], "Submodules": [[4, "submodules"], [8, "submodules"], [11, "submodules"], [13, "submodules"], [17, "submodules"], [26, "submodules"], [39, "submodules"], [43, "submodules"], [45, "submodules"], [46, "submodules"], [49, "submodules"], [51, "submodules"], [57, "submodules"], [61, "submodules"]], "Package Contents": [[4, "package-contents"], [17, "package-contents"], [26, "package-contents"], [39, "package-contents"], [43, "package-contents"], [45, "package-contents"], [49, "package-contents"], [51, "package-contents"], [57, "package-contents"], [61, "package-contents"]], "torch_mist.critic.joint": [[5, "module-torch_mist.critic.joint"]], "torch_mist.critic.separable": [[6, "module-torch_mist.critic.separable"]], "torch_mist.critic.utils": [[7, "module-torch_mist.critic.utils"]], "torch_mist.data": [[8, "module-torch_mist.data"]], "torch_mist.data.multimixture": [[9, "module-torch_mist.data.multimixture"]], "torch_mist.data.multivariate": [[10, "module-torch_mist.data.multivariate"]], "torch_mist.distributions": [[11, "module-torch_mist.distributions"]], "Subpackages": [[11, "subpackages"], [43, "subpackages"], [45, "subpackages"], [61, "subpackages"]], "torch_mist.distributions.joint": [[12, "module-torch_mist.distributions.joint"]], "torch_mist.distributions.parametrizations": [[13, "module-torch_mist.distributions.parametrizations"]], "torch_mist.distributions.parametrizations.map": [[14, "module-torch_mist.distributions.parametrizations.map"]], "Attributes": [[14, "attributes"], [45, "attributes"], [50, "attributes"], [55, "attributes"]], "torch_mist.distributions.product": [[15, "module-torch_mist.distributions.product"]], "torch_mist.distributions.transforms.base": [[16, "module-torch_mist.distributions.transforms.base"]], "torch_mist.distributions.transforms": [[17, "module-torch_mist.distributions.transforms"]], "torch_mist.distributions.transforms.linear": [[18, "module-torch_mist.distributions.transforms.linear"]], "torch_mist.distributions.transforms.permute": [[19, "module-torch_mist.distributions.transforms.permute"]], "torch_mist.distributions.transforms.split": [[20, "module-torch_mist.distributions.transforms.split"]], "torch_mist.distributions.utils": [[21, "module-torch_mist.distributions.utils"]], "torch_mist.estimators.base": [[22, "module-torch_mist.estimators.base"]], "torch_mist.estimators.discriminative.alpha_tuba": [[23, "module-torch_mist.estimators.discriminative.alpha_tuba"]], "torch_mist.estimators.discriminative.base": [[24, "module-torch_mist.estimators.discriminative.base"]], "torch_mist.estimators.discriminative.flo": [[25, "module-torch_mist.estimators.discriminative.flo"]], "torch_mist.estimators.discriminative": [[26, "module-torch_mist.estimators.discriminative"]], "torch_mist.estimators.discriminative.infonce": [[27, "module-torch_mist.estimators.discriminative.infonce"]], "torch_mist.estimators.discriminative.js": [[28, "module-torch_mist.estimators.discriminative.js"]], "torch_mist.estimators.discriminative.mine": [[29, "module-torch_mist.estimators.discriminative.mine"]], "torch_mist.estimators.discriminative.nwj": [[30, "module-torch_mist.estimators.discriminative.nwj"]], "torch_mist.estimators.discriminative.smile": [[31, "module-torch_mist.estimators.discriminative.smile"]], "torch_mist.estimators.discriminative.tuba": [[32, "module-torch_mist.estimators.discriminative.tuba"]], "torch_mist.estimators.generative.ba": [[33, "module-torch_mist.estimators.generative.ba"]], "torch_mist.estimators.generative.base": [[34, "module-torch_mist.estimators.generative.base"]], "torch_mist.estimators.generative.club": [[35, "module-torch_mist.estimators.generative.club"]], "torch_mist.estimators.generative.discrete": [[36, "module-torch_mist.estimators.generative.discrete"]], "torch_mist.estimators.generative.doe": [[37, "module-torch_mist.estimators.generative.doe"]], "torch_mist.estimators.generative.gm": [[38, "module-torch_mist.estimators.generative.gm"]], "torch_mist.estimators.generative": [[39, "module-torch_mist.estimators.generative"]], "torch_mist.estimators.generative.l1out": [[40, "module-torch_mist.estimators.generative.l1out"]], "torch_mist.estimators.generative.pq": [[41, "module-torch_mist.estimators.generative.pq"]], "torch_mist.estimators.hybrid": [[42, "module-torch_mist.estimators.hybrid"]], "torch_mist.estimators": [[43, "module-torch_mist.estimators"]], "torch_mist.estimators.utils": [[44, "module-torch_mist.estimators.utils"]], "torch_mist": [[45, "module-torch_mist"]], "torch_mist.nn": [[46, "module-torch_mist.nn"]], "torch_mist.nn.utils": [[47, "module-torch_mist.nn.utils"]], "torch_mist.quantization.functions": [[48, "module-torch_mist.quantization.functions"]], "torch_mist.quantization": [[49, "module-torch_mist.quantization"]], "torch_mist.quantization.vqvae": [[50, "module-torch_mist.quantization.vqvae"]], "torch_mist.train": [[51, "module-torch_mist.train"]], "torch_mist.train.mi_estimator": [[52, "module-torch_mist.train.mi_estimator"]], "torch_mist.train.vqvae": [[53, "module-torch_mist.train.vqvae"]], "torch_mist.utils.batch_utils": [[54, "module-torch_mist.utils.batch_utils"]], "torch_mist.utils.caching": [[55, "module-torch_mist.utils.caching"]], "torch_mist.utils.data.dataset": [[56, "module-torch_mist.utils.data.dataset"]], "torch_mist.utils.data": [[57, "module-torch_mist.utils.data"]], "torch_mist.utils.data.loader": [[58, "module-torch_mist.utils.data.loader"]], "torch_mist.utils.data.sampler": [[59, "module-torch_mist.utils.data.sampler"]], "torch_mist.utils.estimation": [[60, "module-torch_mist.utils.estimation"]], "torch_mist.utils": [[61, "module-torch_mist.utils"]], "Changelog": [[62, "changelog"]], "v0.1.0 (20/06/2023)": [[62, "v0-1-0-20-06-2023"]], "Code of Conduct": [[63, "code-of-conduct"], [64, "code-of-conduct"]], "Our Pledge": [[63, "our-pledge"]], "Our Standards": [[63, "our-standards"]], "Our Responsibilities": [[63, "our-responsibilities"]], "Scope": [[63, "scope"]], "Enforcement": [[63, "enforcement"]], "Attribution": [[63, "attribution"]], "Contributing": [[64, "contributing"], [66, "contributing"]], "Types of Contributions": [[64, "types-of-contributions"]], "Report Bugs": [[64, "report-bugs"]], "Fix Bugs": [[64, "fix-bugs"]], "Implement Features": [[64, "implement-features"]], "Write Documentation": [[64, "write-documentation"]], "Submit Feedback": [[64, "submit-feedback"]], "Get Started!": [[64, "get-started"]], "Pull Request Guidelines": [[64, "pull-request-guidelines"]], "Simple example": [[65, "simple-example"]], "Data": [[65, "data"]], "Defining and training the estimator": [[65, "defining-and-training-the-estimator"]], "Estimator definition": [[65, "estimator-definition"]], "Training": [[65, "training"]], "Visualization": [[65, "visualization"]], "Evaluation": [[65, "evaluation"]], "Utilities and shortcuts": [[65, "utilities-and-shortcuts"]], "Mist - A PyTorch Mutual information Estimation toolkit": [[66, "mist-a-pytorch-mutual-information-estimation-toolkit"]], "Installation": [[66, "installation"]], "Usage": [[66, "usage"]], "Estimators": [[66, "estimators"]], "Hybrid estimators": [[66, "hybrid-estimators"]], "Training and Evaluation": [[66, "training-and-evaluation"]], "References": [[66, "references"]], "License": [[66, "license"]], "Credits": [[66, "credits"]]}, "indexentries": {"alphatubabaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.AlphaTUBABaseline"]], "baseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.Baseline"]], "batchlogmeanexp (class in torch_mist.baselines)": [[2, "torch_mist.baselines.BatchLogMeanExp"]], "constantbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.ConstantBaseline"]], "exponentialmovingaverage (class in torch_mist.baselines)": [[2, "torch_mist.baselines.ExponentialMovingAverage"]], "interpolatedbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.InterpolatedBaseline"]], "learnablebaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableBaseline"]], "learnablejointbaseline (class in torch_mist.baselines)": [[2, "torch_mist.baselines.LearnableJointBaseline"]], "baseline_nn() (in module torch_mist.baselines)": [[2, "torch_mist.baselines.baseline_nn"]], "forward() (torch_mist.baselines.baseline method)": [[2, "torch_mist.baselines.Baseline.forward"]], "forward() (torch_mist.baselines.batchlogmeanexp method)": [[2, "torch_mist.baselines.BatchLogMeanExp.forward"]], "forward() (torch_mist.baselines.constantbaseline method)": [[2, "torch_mist.baselines.ConstantBaseline.forward"]], "forward() (torch_mist.baselines.exponentialmovingaverage method)": [[2, "torch_mist.baselines.ExponentialMovingAverage.forward"]], "forward() (torch_mist.baselines.interpolatedbaseline method)": [[2, "torch_mist.baselines.InterpolatedBaseline.forward"]], "forward() (torch_mist.baselines.learnablebaseline method)": [[2, "torch_mist.baselines.LearnableBaseline.forward"]], "forward() (torch_mist.baselines.learnablejointbaseline method)": [[2, "torch_mist.baselines.LearnableJointBaseline.forward"]], "joint_baseline_nn() (in module torch_mist.baselines)": [[2, "torch_mist.baselines.joint_baseline_nn"]], "module": [[2, "module-torch_mist.baselines"], [3, "module-torch_mist.critic.base"], [4, "module-torch_mist.critic"], [5, "module-torch_mist.critic.joint"], [6, "module-torch_mist.critic.separable"], [7, "module-torch_mist.critic.utils"], [8, "module-torch_mist.data"], [9, "module-torch_mist.data.multimixture"], [10, "module-torch_mist.data.multivariate"], [11, "module-torch_mist.distributions"], [12, "module-torch_mist.distributions.joint"], [13, "module-torch_mist.distributions.parametrizations"], [14, "module-torch_mist.distributions.parametrizations.map"], [15, "module-torch_mist.distributions.product"], [16, "module-torch_mist.distributions.transforms.base"], [17, "module-torch_mist.distributions.transforms"], [18, "module-torch_mist.distributions.transforms.linear"], [19, "module-torch_mist.distributions.transforms.permute"], [20, "module-torch_mist.distributions.transforms.split"], [21, "module-torch_mist.distributions.utils"], [22, "module-torch_mist.estimators.base"], [23, "module-torch_mist.estimators.discriminative.alpha_tuba"], [24, "module-torch_mist.estimators.discriminative.base"], [25, "module-torch_mist.estimators.discriminative.flo"], [26, "module-torch_mist.estimators.discriminative"], [27, "module-torch_mist.estimators.discriminative.infonce"], [28, "module-torch_mist.estimators.discriminative.js"], [29, "module-torch_mist.estimators.discriminative.mine"], [30, "module-torch_mist.estimators.discriminative.nwj"], [31, "module-torch_mist.estimators.discriminative.smile"], [32, "module-torch_mist.estimators.discriminative.tuba"], [33, "module-torch_mist.estimators.generative.ba"], [34, "module-torch_mist.estimators.generative.base"], [35, "module-torch_mist.estimators.generative.club"], [36, "module-torch_mist.estimators.generative.discrete"], [37, "module-torch_mist.estimators.generative.doe"], [38, "module-torch_mist.estimators.generative.gm"], [39, "module-torch_mist.estimators.generative"], [40, "module-torch_mist.estimators.generative.l1out"], [41, "module-torch_mist.estimators.generative.pq"], [42, "module-torch_mist.estimators.hybrid"], [43, "module-torch_mist.estimators"], [44, "module-torch_mist.estimators.utils"], [45, "module-torch_mist"], [46, "module-torch_mist.nn"], [47, "module-torch_mist.nn.utils"], [48, "module-torch_mist.quantization.functions"], [49, "module-torch_mist.quantization"], [50, "module-torch_mist.quantization.vqvae"], [51, "module-torch_mist.train"], [52, "module-torch_mist.train.mi_estimator"], [53, "module-torch_mist.train.vqvae"], [54, "module-torch_mist.utils.batch_utils"], [55, "module-torch_mist.utils.caching"], [56, "module-torch_mist.utils.data.dataset"], [57, "module-torch_mist.utils.data"], [58, "module-torch_mist.utils.data.loader"], [59, "module-torch_mist.utils.data.sampler"], [60, "module-torch_mist.utils.estimation"], [61, "module-torch_mist.utils"]], "torch_mist.baselines": [[2, "module-torch_mist.baselines"]], "critic (class in torch_mist.critic.base)": [[3, "torch_mist.critic.base.Critic"]], "forward() (torch_mist.critic.base.critic method)": [[3, "torch_mist.critic.base.Critic.forward"]], "torch_mist.critic.base": [[3, "module-torch_mist.critic.base"]], "critic (class in torch_mist.critic)": [[4, "torch_mist.critic.Critic"]], "jointcritic (class in torch_mist.critic)": [[4, "torch_mist.critic.JointCritic"]], "separablecritic (class in torch_mist.critic)": [[4, "torch_mist.critic.SeparableCritic"]], "critic_nn() (in module torch_mist.critic)": [[4, "torch_mist.critic.critic_nn"]], "forward() (torch_mist.critic.critic method)": [[4, "torch_mist.critic.Critic.forward"]], "forward() (torch_mist.critic.jointcritic method)": [[4, "torch_mist.critic.JointCritic.forward"]], "forward() (torch_mist.critic.separablecritic method)": [[4, "torch_mist.critic.SeparableCritic.forward"]], "joint_critic() (in module torch_mist.critic)": [[4, "torch_mist.critic.joint_critic"]], "separable_critic() (in module torch_mist.critic)": [[4, "torch_mist.critic.separable_critic"]], "torch_mist.critic": [[4, "module-torch_mist.critic"]], "jointcritic (class in torch_mist.critic.joint)": [[5, "torch_mist.critic.joint.JointCritic"]], "forward() (torch_mist.critic.joint.jointcritic method)": [[5, "torch_mist.critic.joint.JointCritic.forward"]], "torch_mist.critic.joint": [[5, "module-torch_mist.critic.joint"]], "separablecritic (class in torch_mist.critic.separable)": [[6, "torch_mist.critic.separable.SeparableCritic"]], "forward() (torch_mist.critic.separable.separablecritic method)": [[6, "torch_mist.critic.separable.SeparableCritic.forward"]], "torch_mist.critic.separable": [[6, "module-torch_mist.critic.separable"]], "critic_nn() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.critic_nn"]], "joint_critic() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.joint_critic"]], "separable_critic() (in module torch_mist.critic.utils)": [[7, "torch_mist.critic.utils.separable_critic"]], "torch_mist.critic.utils": [[7, "module-torch_mist.critic.utils"]], "torch_mist.data": [[8, "module-torch_mist.data"]], "multivariatecorrelatednormalmixture (class in torch_mist.data.multimixture)": [[9, "torch_mist.data.multimixture.MultivariateCorrelatedNormalMixture"]], "torch_mist.data.multimixture": [[9, "module-torch_mist.data.multimixture"]], "jointmultivariatenormal (class in torch_mist.data.multivariate)": [[10, "torch_mist.data.multivariate.JointMultivariateNormal"]], "torch_mist.data.multivariate": [[10, "module-torch_mist.data.multivariate"]], "torch_mist.distributions": [[11, "module-torch_mist.distributions"]], "conditionalratiodistribution (class in torch_mist.distributions.joint)": [[12, "torch_mist.distributions.joint.ConditionalRatioDistribution"]], "conditionedratiodistribution (class in torch_mist.distributions.joint)": [[12, "torch_mist.distributions.joint.ConditionedRatioDistribution"]], "jointdistribution (class in torch_mist.distributions.joint)": [[12, "torch_mist.distributions.joint.JointDistribution"]], "condition() (torch_mist.distributions.joint.conditionalratiodistribution method)": [[12, "torch_mist.distributions.joint.ConditionalRatioDistribution.condition"]], "log_prob() (torch_mist.distributions.joint.conditionedratiodistribution method)": [[12, "torch_mist.distributions.joint.ConditionedRatioDistribution.log_prob"]], "log_prob() (torch_mist.distributions.joint.jointdistribution method)": [[12, "torch_mist.distributions.joint.JointDistribution.log_prob"]], "rsample() (torch_mist.distributions.joint.jointdistribution method)": [[12, "torch_mist.distributions.joint.JointDistribution.rsample"]], "sample() (torch_mist.distributions.joint.jointdistribution method)": [[12, "torch_mist.distributions.joint.JointDistribution.sample"]], "torch_mist.distributions.joint": [[12, "module-torch_mist.distributions.joint"]], "torch_mist.distributions.parametrizations": [[13, "module-torch_mist.distributions.parametrizations"]], "deltamap (class in torch_mist.distributions.parametrizations.map)": [[14, "torch_mist.distributions.parametrizations.map.DeltaMap"]], "epsilon (in module torch_mist.distributions.parametrizations.map)": [[14, "torch_mist.distributions.parametrizations.map.EPSILON"]], "locscalemap (class in torch_mist.distributions.parametrizations.map)": [[14, "torch_mist.distributions.parametrizations.map.LocScaleMap"]], "logitsmap (class in torch_mist.distributions.parametrizations.map)": [[14, "torch_mist.distributions.parametrizations.map.LogitsMap"]], "parametermap (class in torch_mist.distributions.parametrizations.map)": [[14, "torch_mist.distributions.parametrizations.map.ParameterMap"]], "__call__() (torch_mist.distributions.parametrizations.map.parametermap method)": [[14, "torch_mist.distributions.parametrizations.map.ParameterMap.__call__"]], "map_parameters() (torch_mist.distributions.parametrizations.map.deltamap method)": [[14, "torch_mist.distributions.parametrizations.map.DeltaMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.locscalemap method)": [[14, "torch_mist.distributions.parametrizations.map.LocScaleMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.logitsmap method)": [[14, "torch_mist.distributions.parametrizations.map.LogitsMap.map_parameters"]], "map_parameters() (torch_mist.distributions.parametrizations.map.parametermap method)": [[14, "torch_mist.distributions.parametrizations.map.ParameterMap.map_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.deltamap attribute)": [[14, "torch_mist.distributions.parametrizations.map.DeltaMap.n_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.logitsmap attribute)": [[14, "torch_mist.distributions.parametrizations.map.LogitsMap.n_parameters"]], "n_parameters (torch_mist.distributions.parametrizations.map.parametermap attribute)": [[14, "torch_mist.distributions.parametrizations.map.ParameterMap.n_parameters"]], "supported_distributions (torch_mist.distributions.parametrizations.map.deltamap attribute)": [[14, "torch_mist.distributions.parametrizations.map.DeltaMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.locscalemap attribute)": [[14, "torch_mist.distributions.parametrizations.map.LocScaleMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.logitsmap attribute)": [[14, "torch_mist.distributions.parametrizations.map.LogitsMap.supported_distributions"]], "supported_distributions (torch_mist.distributions.parametrizations.map.parametermap attribute)": [[14, "torch_mist.distributions.parametrizations.map.ParameterMap.supported_distributions"]], "torch_mist.distributions.parametrizations.map": [[14, "module-torch_mist.distributions.parametrizations.map"]], "torch_mist.distributions.product": [[15, "module-torch_mist.distributions.product"]], "conditionaldistributionmodule (class in torch_mist.distributions.transforms.base)": [[16, "torch_mist.distributions.transforms.base.ConditionalDistributionModule"]], "conditionaltransformeddistributionmodule (class in torch_mist.distributions.transforms.base)": [[16, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule"]], "distributionmodule (class in torch_mist.distributions.transforms.base)": [[16, "torch_mist.distributions.transforms.base.DistributionModule"]], "transformeddistributionmodule (class in torch_mist.distributions.transforms.base)": [[16, "torch_mist.distributions.transforms.base.TransformedDistributionModule"]], "__repr__() (torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.base.distributionmodule method)": [[16, "torch_mist.distributions.transforms.base.DistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.base.TransformedDistributionModule.__repr__"]], "clear_cache() (torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.clear_cache"]], "condition() (torch_mist.distributions.transforms.base.conditionaltransformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.base.ConditionalTransformedDistributionModule.condition"]], "log_prob() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.base.TransformedDistributionModule.log_prob"]], "rsample() (torch_mist.distributions.transforms.base.transformeddistributionmodule method)": [[16, "torch_mist.distributions.transforms.base.TransformedDistributionModule.rsample"]], "torch_mist.distributions.transforms.base": [[16, "module-torch_mist.distributions.transforms.base"]], "conditionaldistributionmodule (class in torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.ConditionalDistributionModule"]], "conditionallinear (class in torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.ConditionalLinear"]], "conditionaltransformeddistributionmodule (class in torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule"]], "distributionmodule (class in torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.DistributionModule"]], "linear (class in torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.Linear"]], "permute (class in torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.Permute"]], "splittransform (class in torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.SplitTransform"]], "transformeddistributionmodule (class in torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.TransformedDistributionModule"]], "__repr__() (torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[17, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.distributionmodule method)": [[17, "torch_mist.distributions.transforms.DistributionModule.__repr__"]], "__repr__() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[17, "torch_mist.distributions.transforms.TransformedDistributionModule.__repr__"]], "_call() (torch_mist.distributions.transforms.permute method)": [[17, "torch_mist.distributions.transforms.Permute._call"]], "_call() (torch_mist.distributions.transforms.splittransform method)": [[17, "torch_mist.distributions.transforms.SplitTransform._call"]], "_inverse() (torch_mist.distributions.transforms.permute method)": [[17, "torch_mist.distributions.transforms.Permute._inverse"]], "_inverse() (torch_mist.distributions.transforms.splittransform method)": [[17, "torch_mist.distributions.transforms.SplitTransform._inverse"]], "_params() (torch_mist.distributions.transforms.conditionallinear method)": [[17, "torch_mist.distributions.transforms.ConditionalLinear._params"]], "_params() (torch_mist.distributions.transforms.linear method)": [[17, "torch_mist.distributions.transforms.Linear._params"]], "add_dims() (torch_mist.distributions.transforms.splittransform method)": [[17, "torch_mist.distributions.transforms.SplitTransform.add_dims"]], "bijective (torch_mist.distributions.transforms.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.ConditionalLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear attribute)": [[17, "torch_mist.distributions.transforms.Linear.bijective"]], "clear_cache() (torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[17, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.clear_cache"]], "codomain (torch_mist.distributions.transforms.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.ConditionalLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear attribute)": [[17, "torch_mist.distributions.transforms.Linear.codomain"]], "codomain (torch_mist.distributions.transforms.splittransform attribute)": [[17, "torch_mist.distributions.transforms.SplitTransform.codomain"]], "condition() (torch_mist.distributions.transforms.conditionallinear method)": [[17, "torch_mist.distributions.transforms.ConditionalLinear.condition"]], "condition() (torch_mist.distributions.transforms.conditionaltransformeddistributionmodule method)": [[17, "torch_mist.distributions.transforms.ConditionalTransformedDistributionModule.condition"]], "conditional_linear() (in module torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.conditional_linear"]], "conditional_skip_linear() (in module torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.conditional_skip_linear"]], "dist() (torch_mist.distributions.transforms.splittransform method)": [[17, "torch_mist.distributions.transforms.SplitTransform.dist"]], "domain (torch_mist.distributions.transforms.conditionallinear attribute)": [[17, "torch_mist.distributions.transforms.ConditionalLinear.domain"]], "domain (torch_mist.distributions.transforms.linear attribute)": [[17, "torch_mist.distributions.transforms.Linear.domain"]], "domain (torch_mist.distributions.transforms.splittransform attribute)": [[17, "torch_mist.distributions.transforms.SplitTransform.domain"]], "linear() (in module torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.linear"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.permute method)": [[17, "torch_mist.distributions.transforms.Permute.log_abs_det_jacobian"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.splittransform method)": [[17, "torch_mist.distributions.transforms.SplitTransform.log_abs_det_jacobian"]], "log_prob() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[17, "torch_mist.distributions.transforms.TransformedDistributionModule.log_prob"]], "permute() (in module torch_mist.distributions.transforms)": [[17, "torch_mist.distributions.transforms.permute"]], "remove_dims() (torch_mist.distributions.transforms.splittransform method)": [[17, "torch_mist.distributions.transforms.SplitTransform.remove_dims"]], "rsample() (torch_mist.distributions.transforms.transformeddistributionmodule method)": [[17, "torch_mist.distributions.transforms.TransformedDistributionModule.rsample"]], "sign (torch_mist.distributions.transforms.linear attribute)": [[17, "torch_mist.distributions.transforms.Linear.sign"]], "torch_mist.distributions.transforms": [[17, "module-torch_mist.distributions.transforms"]], "update_device() (torch_mist.distributions.transforms.permute method)": [[17, "torch_mist.distributions.transforms.Permute.update_device"]], "conditionallinear (class in torch_mist.distributions.transforms.linear)": [[18, "torch_mist.distributions.transforms.linear.ConditionalLinear"]], "conditionedlinear (class in torch_mist.distributions.transforms.linear)": [[18, "torch_mist.distributions.transforms.linear.ConditionedLinear"]], "linear (class in torch_mist.distributions.transforms.linear)": [[18, "torch_mist.distributions.transforms.linear.Linear"]], "_call() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[18, "torch_mist.distributions.transforms.linear.ConditionedLinear._call"]], "_inverse() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[18, "torch_mist.distributions.transforms.linear.ConditionedLinear._inverse"]], "_params() (torch_mist.distributions.transforms.linear.conditionallinear method)": [[18, "torch_mist.distributions.transforms.linear.ConditionalLinear._params"]], "_params() (torch_mist.distributions.transforms.linear.linear method)": [[18, "torch_mist.distributions.transforms.linear.Linear._params"]], "bijective (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[18, "torch_mist.distributions.transforms.linear.ConditionalLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[18, "id2"], [18, "torch_mist.distributions.transforms.linear.ConditionedLinear.bijective"]], "bijective (torch_mist.distributions.transforms.linear.linear attribute)": [[18, "torch_mist.distributions.transforms.linear.Linear.bijective"]], "codomain (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[18, "torch_mist.distributions.transforms.linear.ConditionalLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[18, "id1"], [18, "torch_mist.distributions.transforms.linear.ConditionedLinear.codomain"]], "codomain (torch_mist.distributions.transforms.linear.linear attribute)": [[18, "torch_mist.distributions.transforms.linear.Linear.codomain"]], "condition() (torch_mist.distributions.transforms.linear.conditionallinear method)": [[18, "torch_mist.distributions.transforms.linear.ConditionalLinear.condition"]], "conditional_linear() (in module torch_mist.distributions.transforms.linear)": [[18, "torch_mist.distributions.transforms.linear.conditional_linear"]], "conditional_skip_linear() (in module torch_mist.distributions.transforms.linear)": [[18, "torch_mist.distributions.transforms.linear.conditional_skip_linear"]], "domain (torch_mist.distributions.transforms.linear.conditionallinear attribute)": [[18, "torch_mist.distributions.transforms.linear.ConditionalLinear.domain"]], "domain (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[18, "id0"], [18, "torch_mist.distributions.transforms.linear.ConditionedLinear.domain"]], "domain (torch_mist.distributions.transforms.linear.linear attribute)": [[18, "torch_mist.distributions.transforms.linear.Linear.domain"]], "linear() (in module torch_mist.distributions.transforms.linear)": [[18, "torch_mist.distributions.transforms.linear.linear"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.linear.conditionedlinear method)": [[18, "torch_mist.distributions.transforms.linear.ConditionedLinear.log_abs_det_jacobian"]], "sign (torch_mist.distributions.transforms.linear.conditionedlinear attribute)": [[18, "torch_mist.distributions.transforms.linear.ConditionedLinear.sign"]], "sign (torch_mist.distributions.transforms.linear.linear attribute)": [[18, "torch_mist.distributions.transforms.linear.Linear.sign"]], "torch_mist.distributions.transforms.linear": [[18, "module-torch_mist.distributions.transforms.linear"]], "permute (class in torch_mist.distributions.transforms.permute)": [[19, "torch_mist.distributions.transforms.permute.Permute"]], "_call() (torch_mist.distributions.transforms.permute.permute method)": [[19, "torch_mist.distributions.transforms.permute.Permute._call"]], "_inverse() (torch_mist.distributions.transforms.permute.permute method)": [[19, "torch_mist.distributions.transforms.permute.Permute._inverse"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.permute.permute method)": [[19, "torch_mist.distributions.transforms.permute.Permute.log_abs_det_jacobian"]], "permute() (in module torch_mist.distributions.transforms.permute)": [[19, "torch_mist.distributions.transforms.permute.permute"]], "torch_mist.distributions.transforms.permute": [[19, "module-torch_mist.distributions.transforms.permute"]], "update_device() (torch_mist.distributions.transforms.permute.permute method)": [[19, "torch_mist.distributions.transforms.permute.Permute.update_device"]], "splittransform (class in torch_mist.distributions.transforms.split)": [[20, "torch_mist.distributions.transforms.split.SplitTransform"]], "_call() (torch_mist.distributions.transforms.split.splittransform method)": [[20, "torch_mist.distributions.transforms.split.SplitTransform._call"]], "_inverse() (torch_mist.distributions.transforms.split.splittransform method)": [[20, "torch_mist.distributions.transforms.split.SplitTransform._inverse"]], "add_dims() (torch_mist.distributions.transforms.split.splittransform method)": [[20, "torch_mist.distributions.transforms.split.SplitTransform.add_dims"]], "codomain (torch_mist.distributions.transforms.split.splittransform attribute)": [[20, "torch_mist.distributions.transforms.split.SplitTransform.codomain"]], "dist() (torch_mist.distributions.transforms.split.splittransform method)": [[20, "torch_mist.distributions.transforms.split.SplitTransform.dist"]], "domain (torch_mist.distributions.transforms.split.splittransform attribute)": [[20, "torch_mist.distributions.transforms.split.SplitTransform.domain"]], "log_abs_det_jacobian() (torch_mist.distributions.transforms.split.splittransform method)": [[20, "torch_mist.distributions.transforms.split.SplitTransform.log_abs_det_jacobian"]], "remove_dims() (torch_mist.distributions.transforms.split.splittransform method)": [[20, "torch_mist.distributions.transforms.split.SplitTransform.remove_dims"]], "torch_mist.distributions.transforms.split": [[20, "module-torch_mist.distributions.transforms.split"]], "categoricalmodule (class in torch_mist.distributions.utils)": [[21, "torch_mist.distributions.utils.CategoricalModule"]], "conditionalcategoricalmodule (class in torch_mist.distributions.utils)": [[21, "torch_mist.distributions.utils.ConditionalCategoricalModule"]], "conditionalstandardnormalmodule (class in torch_mist.distributions.utils)": [[21, "torch_mist.distributions.utils.ConditionalStandardNormalModule"]], "normalmodule (class in torch_mist.distributions.utils)": [[21, "torch_mist.distributions.utils.NormalModule"]], "__repr__() (torch_mist.distributions.utils.categoricalmodule method)": [[21, "torch_mist.distributions.utils.CategoricalModule.__repr__"]], "__repr__() (torch_mist.distributions.utils.normalmodule method)": [[21, "torch_mist.distributions.utils.NormalModule.__repr__"]], "condition() (torch_mist.distributions.utils.conditionalcategoricalmodule method)": [[21, "torch_mist.distributions.utils.ConditionalCategoricalModule.condition"]], "condition() (torch_mist.distributions.utils.conditionalstandardnormalmodule method)": [[21, "torch_mist.distributions.utils.ConditionalStandardNormalModule.condition"]], "conditional_categorical() (in module torch_mist.distributions.utils)": [[21, "torch_mist.distributions.utils.conditional_categorical"]], "conditional_transformed_normal() (in module torch_mist.distributions.utils)": [[21, "torch_mist.distributions.utils.conditional_transformed_normal"]], "fetch_transform() (in module torch_mist.distributions.utils)": [[21, "torch_mist.distributions.utils.fetch_transform"]], "log_prob() (torch_mist.distributions.utils.categoricalmodule method)": [[21, "torch_mist.distributions.utils.CategoricalModule.log_prob"]], "log_prob() (torch_mist.distributions.utils.normalmodule method)": [[21, "torch_mist.distributions.utils.NormalModule.log_prob"]], "rsample() (torch_mist.distributions.utils.categoricalmodule method)": [[21, "torch_mist.distributions.utils.CategoricalModule.rsample"]], "rsample() (torch_mist.distributions.utils.normalmodule method)": [[21, "torch_mist.distributions.utils.NormalModule.rsample"]], "torch_mist.distributions.utils": [[21, "module-torch_mist.distributions.utils"]], "transformed_normal() (in module torch_mist.distributions.utils)": [[21, "torch_mist.distributions.utils.transformed_normal"]], "mutualinformationestimator (class in torch_mist.estimators.base)": [[22, "torch_mist.estimators.base.MutualInformationEstimator"]], "expected_log_ratio() (torch_mist.estimators.base.mutualinformationestimator method)": [[22, "torch_mist.estimators.base.MutualInformationEstimator.expected_log_ratio"]], "forward() (torch_mist.estimators.base.mutualinformationestimator method)": [[22, "torch_mist.estimators.base.MutualInformationEstimator.forward"]], "log_ratio() (torch_mist.estimators.base.mutualinformationestimator method)": [[22, "torch_mist.estimators.base.MutualInformationEstimator.log_ratio"]], "loss() (torch_mist.estimators.base.mutualinformationestimator method)": [[22, "torch_mist.estimators.base.MutualInformationEstimator.loss"]], "torch_mist.estimators.base": [[22, "module-torch_mist.estimators.base"]], "unnormalized_log_ratio() (torch_mist.estimators.base.mutualinformationestimator method)": [[22, "torch_mist.estimators.base.MutualInformationEstimator.unnormalized_log_ratio"]], "alphatuba (class in torch_mist.estimators.discriminative.alpha_tuba)": [[23, "torch_mist.estimators.discriminative.alpha_tuba.AlphaTUBA"]], "alpha_tuba() (in module torch_mist.estimators.discriminative.alpha_tuba)": [[23, "torch_mist.estimators.discriminative.alpha_tuba.alpha_tuba"]], "torch_mist.estimators.discriminative.alpha_tuba": [[23, "module-torch_mist.estimators.discriminative.alpha_tuba"]], "discriminativemutualinformationestimator (class in torch_mist.estimators.discriminative.base)": [[24, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator"]], "empiricaldistribution (class in torch_mist.estimators.discriminative.base)": [[24, "torch_mist.estimators.discriminative.base.EmpiricalDistribution"]], "__repr__() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[24, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.__repr__"]], "add_samples() (torch_mist.estimators.discriminative.base.empiricaldistribution method)": [[24, "torch_mist.estimators.discriminative.base.EmpiricalDistribution.add_samples"]], "compute_log_normalization() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[24, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.compute_log_normalization"]], "critic_on_negatives() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[24, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.critic_on_negatives"]], "critic_on_positives() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[24, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.critic_on_positives"]], "log_normalization() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[24, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.log_normalization"]], "log_ratio() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[24, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.log_ratio"]], "loss() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[24, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.loss"]], "sample() (torch_mist.estimators.discriminative.base.empiricaldistribution method)": [[24, "torch_mist.estimators.discriminative.base.EmpiricalDistribution.sample"]], "torch_mist.estimators.discriminative.base": [[24, "module-torch_mist.estimators.discriminative.base"]], "unnormalized_log_ratio() (torch_mist.estimators.discriminative.base.discriminativemutualinformationestimator method)": [[24, "torch_mist.estimators.discriminative.base.DiscriminativeMutualInformationEstimator.unnormalized_log_ratio"]], "update() (torch_mist.estimators.discriminative.base.empiricaldistribution method)": [[24, "torch_mist.estimators.discriminative.base.EmpiricalDistribution.update"]], "flo (class in torch_mist.estimators.discriminative.flo)": [[25, "torch_mist.estimators.discriminative.flo.FLO"]], "flo() (in module torch_mist.estimators.discriminative.flo)": [[25, "torch_mist.estimators.discriminative.flo.flo"]], "log_ratio() (torch_mist.estimators.discriminative.flo.flo method)": [[25, "torch_mist.estimators.discriminative.flo.FLO.log_ratio"]], "torch_mist.estimators.discriminative.flo": [[25, "module-torch_mist.estimators.discriminative.flo"]], "alphatuba (class in torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.AlphaTUBA"]], "discriminativemutualinformationestimator (class in torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator"]], "flo (class in torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.FLO"]], "infonce (class in torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.InfoNCE"]], "js (class in torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.JS"]], "mine (class in torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.MINE"]], "nwj (class in torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.NWJ"]], "smile (class in torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.SMILE"]], "tuba (class in torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.TUBA"]], "__repr__() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[26, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.__repr__"]], "__repr__() (torch_mist.estimators.discriminative.tuba method)": [[26, "torch_mist.estimators.discriminative.TUBA.__repr__"]], "alpha_tuba() (in module torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.alpha_tuba"]], "compute_log_normalization() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[26, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.compute_log_normalization"]], "compute_log_normalization() (torch_mist.estimators.discriminative.infonce method)": [[26, "torch_mist.estimators.discriminative.InfoNCE.compute_log_normalization"]], "compute_log_normalization() (torch_mist.estimators.discriminative.smile method)": [[26, "torch_mist.estimators.discriminative.SMILE.compute_log_normalization"]], "compute_log_normalization() (torch_mist.estimators.discriminative.tuba method)": [[26, "torch_mist.estimators.discriminative.TUBA.compute_log_normalization"]], "compute_log_normalization_loss() (torch_mist.estimators.discriminative.tuba method)": [[26, "torch_mist.estimators.discriminative.TUBA.compute_log_normalization_loss"]], "critic_on_negatives() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[26, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.critic_on_negatives"]], "critic_on_positives() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[26, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.critic_on_positives"]], "flo() (in module torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.flo"]], "infonce() (in module torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.infonce"]], "js() (in module torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.js"]], "log_normalization() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[26, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.log_normalization"]], "log_normalization_loss() (torch_mist.estimators.discriminative.tuba method)": [[26, "torch_mist.estimators.discriminative.TUBA.log_normalization_loss"]], "log_ratio() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[26, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.discriminative.flo method)": [[26, "torch_mist.estimators.discriminative.FLO.log_ratio"]], "loss() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[26, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.discriminative.js method)": [[26, "torch_mist.estimators.discriminative.JS.loss"]], "loss() (torch_mist.estimators.discriminative.smile method)": [[26, "torch_mist.estimators.discriminative.SMILE.loss"]], "loss() (torch_mist.estimators.discriminative.tuba method)": [[26, "torch_mist.estimators.discriminative.TUBA.loss"]], "mine() (in module torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.mine"]], "nwj() (in module torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.nwj"]], "smile() (in module torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.smile"]], "torch_mist.estimators.discriminative": [[26, "module-torch_mist.estimators.discriminative"]], "tuba() (in module torch_mist.estimators.discriminative)": [[26, "torch_mist.estimators.discriminative.tuba"]], "unnormalized_log_ratio() (torch_mist.estimators.discriminative.discriminativemutualinformationestimator method)": [[26, "torch_mist.estimators.discriminative.DiscriminativeMutualInformationEstimator.unnormalized_log_ratio"]], "infonce (class in torch_mist.estimators.discriminative.infonce)": [[27, "torch_mist.estimators.discriminative.infonce.InfoNCE"]], "compute_log_normalization() (torch_mist.estimators.discriminative.infonce.infonce method)": [[27, "torch_mist.estimators.discriminative.infonce.InfoNCE.compute_log_normalization"]], "infonce() (in module torch_mist.estimators.discriminative.infonce)": [[27, "torch_mist.estimators.discriminative.infonce.infonce"]], "torch_mist.estimators.discriminative.infonce": [[27, "module-torch_mist.estimators.discriminative.infonce"]], "js (class in torch_mist.estimators.discriminative.js)": [[28, "torch_mist.estimators.discriminative.js.JS"]], "js() (in module torch_mist.estimators.discriminative.js)": [[28, "torch_mist.estimators.discriminative.js.js"]], "loss() (torch_mist.estimators.discriminative.js.js method)": [[28, "torch_mist.estimators.discriminative.js.JS.loss"]], "torch_mist.estimators.discriminative.js": [[28, "module-torch_mist.estimators.discriminative.js"]], "mine (class in torch_mist.estimators.discriminative.mine)": [[29, "torch_mist.estimators.discriminative.mine.MINE"]], "mine() (in module torch_mist.estimators.discriminative.mine)": [[29, "torch_mist.estimators.discriminative.mine.mine"]], "torch_mist.estimators.discriminative.mine": [[29, "module-torch_mist.estimators.discriminative.mine"]], "nwj (class in torch_mist.estimators.discriminative.nwj)": [[30, "torch_mist.estimators.discriminative.nwj.NWJ"]], "nwj() (in module torch_mist.estimators.discriminative.nwj)": [[30, "torch_mist.estimators.discriminative.nwj.nwj"]], "torch_mist.estimators.discriminative.nwj": [[30, "module-torch_mist.estimators.discriminative.nwj"]], "smile (class in torch_mist.estimators.discriminative.smile)": [[31, "torch_mist.estimators.discriminative.smile.SMILE"]], "compute_log_normalization() (torch_mist.estimators.discriminative.smile.smile method)": [[31, "torch_mist.estimators.discriminative.smile.SMILE.compute_log_normalization"]], "loss() (torch_mist.estimators.discriminative.smile.smile method)": [[31, "torch_mist.estimators.discriminative.smile.SMILE.loss"]], "smile() (in module torch_mist.estimators.discriminative.smile)": [[31, "torch_mist.estimators.discriminative.smile.smile"]], "torch_mist.estimators.discriminative.smile": [[31, "module-torch_mist.estimators.discriminative.smile"]], "tuba (class in torch_mist.estimators.discriminative.tuba)": [[32, "torch_mist.estimators.discriminative.tuba.TUBA"]], "__repr__() (torch_mist.estimators.discriminative.tuba.tuba method)": [[32, "torch_mist.estimators.discriminative.tuba.TUBA.__repr__"]], "compute_log_normalization() (torch_mist.estimators.discriminative.tuba.tuba method)": [[32, "torch_mist.estimators.discriminative.tuba.TUBA.compute_log_normalization"]], "compute_log_normalization_loss() (torch_mist.estimators.discriminative.tuba.tuba method)": [[32, "torch_mist.estimators.discriminative.tuba.TUBA.compute_log_normalization_loss"]], "log_normalization_loss() (torch_mist.estimators.discriminative.tuba.tuba method)": [[32, "torch_mist.estimators.discriminative.tuba.TUBA.log_normalization_loss"]], "loss() (torch_mist.estimators.discriminative.tuba.tuba method)": [[32, "torch_mist.estimators.discriminative.tuba.TUBA.loss"]], "torch_mist.estimators.discriminative.tuba": [[32, "module-torch_mist.estimators.discriminative.tuba"]], "tuba() (in module torch_mist.estimators.discriminative.tuba)": [[32, "torch_mist.estimators.discriminative.tuba.tuba"]], "ba (class in torch_mist.estimators.generative.ba)": [[33, "torch_mist.estimators.generative.ba.BA"]], "ba() (in module torch_mist.estimators.generative.ba)": [[33, "torch_mist.estimators.generative.ba.ba"]], "expected_log_ratio() (torch_mist.estimators.generative.ba.ba method)": [[33, "torch_mist.estimators.generative.ba.BA.expected_log_ratio"]], "torch_mist.estimators.generative.ba": [[33, "module-torch_mist.estimators.generative.ba"]], "generativemutualinformationestimator (class in torch_mist.estimators.generative.base)": [[34, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator"]], "__repr__() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[34, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.__repr__"]], "approx_log_p_y() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[34, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.approx_log_p_y"]], "approx_log_p_y_given_x() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[34, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.approx_log_p_y_given_x"]], "log_ratio() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[34, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.log_ratio"]], "loss() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[34, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.loss"]], "q_y_given_x() (torch_mist.estimators.generative.base.generativemutualinformationestimator method)": [[34, "torch_mist.estimators.generative.base.GenerativeMutualInformationEstimator.q_Y_given_x"]], "torch_mist.estimators.generative.base": [[34, "module-torch_mist.estimators.generative.base"]], "club (class in torch_mist.estimators.generative.club)": [[35, "torch_mist.estimators.generative.club.CLUB"]], "approx_log_p_y() (torch_mist.estimators.generative.club.club method)": [[35, "torch_mist.estimators.generative.club.CLUB.approx_log_p_y"]], "club() (in module torch_mist.estimators.generative.club)": [[35, "torch_mist.estimators.generative.club.club"]], "torch_mist.estimators.generative.club": [[35, "module-torch_mist.estimators.generative.club"]], "discretemutualinformationestimator (class in torch_mist.estimators.generative.discrete)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator"]], "__repr__() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.__repr__"]], "approx_log_p_qx() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.approx_log_p_qx"]], "approx_log_p_qxqy() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.approx_log_p_qxqy"]], "approx_log_p_qy() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.approx_log_p_qy"]], "approx_log_p_qy_given_qx() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.approx_log_p_qy_given_qx"]], "discrete() (in module torch_mist.estimators.generative.discrete)": [[36, "torch_mist.estimators.generative.discrete.discrete"]], "log_p_qx_given_qy() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.log_p_qx_given_qy"]], "log_ratio() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.log_ratio"]], "logits (torch_mist.estimators.generative.discrete.discretemutualinformationestimator property)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.logits"]], "loss() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.loss"]], "quantize_x() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.quantize_x"]], "quantize_y() (torch_mist.estimators.generative.discrete.discretemutualinformationestimator method)": [[36, "torch_mist.estimators.generative.discrete.DiscreteMutualInformationEstimator.quantize_y"]], "torch_mist.estimators.generative.discrete": [[36, "module-torch_mist.estimators.generative.discrete"]], "doe (class in torch_mist.estimators.generative.doe)": [[37, "torch_mist.estimators.generative.doe.DoE"]], "__repr__() (torch_mist.estimators.generative.doe.doe method)": [[37, "torch_mist.estimators.generative.doe.DoE.__repr__"]], "approx_log_p_y() (torch_mist.estimators.generative.doe.doe method)": [[37, "torch_mist.estimators.generative.doe.DoE.approx_log_p_y"]], "doe() (in module torch_mist.estimators.generative.doe)": [[37, "torch_mist.estimators.generative.doe.doe"]], "loss() (torch_mist.estimators.generative.doe.doe method)": [[37, "torch_mist.estimators.generative.doe.DoE.loss"]], "torch_mist.estimators.generative.doe": [[37, "module-torch_mist.estimators.generative.doe"]], "gm (class in torch_mist.estimators.generative.gm)": [[38, "torch_mist.estimators.generative.gm.GM"]], "__repr__() (torch_mist.estimators.generative.gm.gm method)": [[38, "torch_mist.estimators.generative.gm.GM.__repr__"]], "approx_log_p_x() (torch_mist.estimators.generative.gm.gm method)": [[38, "torch_mist.estimators.generative.gm.GM.approx_log_p_x"]], "approx_log_p_x_given_y() (torch_mist.estimators.generative.gm.gm method)": [[38, "torch_mist.estimators.generative.gm.GM.approx_log_p_x_given_y"]], "approx_log_p_xy() (torch_mist.estimators.generative.gm.gm method)": [[38, "torch_mist.estimators.generative.gm.GM.approx_log_p_xy"]], "gm() (in module torch_mist.estimators.generative.gm)": [[38, "torch_mist.estimators.generative.gm.gm"]], "loss() (torch_mist.estimators.generative.gm.gm method)": [[38, "torch_mist.estimators.generative.gm.GM.loss"]], "torch_mist.estimators.generative.gm": [[38, "module-torch_mist.estimators.generative.gm"]], "ba (class in torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.BA"]], "club (class in torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.CLUB"]], "discretemutualinformationestimator (class in torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator"]], "doe (class in torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.DoE"]], "gm (class in torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.GM"]], "generativemutualinformationestimator (class in torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator"]], "l1out (class in torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.L1Out"]], "pq (class in torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.PQ"]], "__repr__() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.__repr__"]], "__repr__() (torch_mist.estimators.generative.doe method)": [[39, "torch_mist.estimators.generative.DoE.__repr__"]], "__repr__() (torch_mist.estimators.generative.gm method)": [[39, "torch_mist.estimators.generative.GM.__repr__"]], "__repr__() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.__repr__"]], "__repr__() (torch_mist.estimators.generative.pq method)": [[39, "torch_mist.estimators.generative.PQ.__repr__"]], "approx_log_p_qx() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.approx_log_p_qx"]], "approx_log_p_qx() (torch_mist.estimators.generative.pq method)": [[39, "torch_mist.estimators.generative.PQ.approx_log_p_qx"]], "approx_log_p_qx_given_y() (torch_mist.estimators.generative.pq method)": [[39, "torch_mist.estimators.generative.PQ.approx_log_p_qx_given_y"]], "approx_log_p_qxqy() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.approx_log_p_qxqy"]], "approx_log_p_qy() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.approx_log_p_qy"]], "approx_log_p_qy_given_qx() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.approx_log_p_qy_given_qx"]], "approx_log_p_x() (torch_mist.estimators.generative.gm method)": [[39, "torch_mist.estimators.generative.GM.approx_log_p_x"]], "approx_log_p_x_given_y() (torch_mist.estimators.generative.gm method)": [[39, "torch_mist.estimators.generative.GM.approx_log_p_x_given_y"]], "approx_log_p_xy() (torch_mist.estimators.generative.gm method)": [[39, "torch_mist.estimators.generative.GM.approx_log_p_xy"]], "approx_log_p_y() (torch_mist.estimators.generative.club method)": [[39, "torch_mist.estimators.generative.CLUB.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.generative.doe method)": [[39, "torch_mist.estimators.generative.DoE.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.generative.l1out method)": [[39, "torch_mist.estimators.generative.L1Out.approx_log_p_y"]], "approx_log_p_y_given_x() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.approx_log_p_y_given_x"]], "ba() (in module torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.ba"]], "club() (in module torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.club"]], "discrete() (in module torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.discrete"]], "doe() (in module torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.doe"]], "expected_log_ratio() (torch_mist.estimators.generative.ba method)": [[39, "torch_mist.estimators.generative.BA.expected_log_ratio"]], "expected_log_ratio() (torch_mist.estimators.generative.l1out method)": [[39, "torch_mist.estimators.generative.L1Out.expected_log_ratio"]], "gm() (in module torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.gm"]], "l1out() (in module torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.l1out"]], "log_p_qx_given_qy() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.log_p_qx_given_qy"]], "log_ratio() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.generative.l1out method)": [[39, "torch_mist.estimators.generative.L1Out.log_ratio"]], "log_ratio() (torch_mist.estimators.generative.pq method)": [[39, "torch_mist.estimators.generative.PQ.log_ratio"]], "logits (torch_mist.estimators.generative.discretemutualinformationestimator property)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.logits"]], "loss() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.generative.doe method)": [[39, "torch_mist.estimators.generative.DoE.loss"]], "loss() (torch_mist.estimators.generative.gm method)": [[39, "torch_mist.estimators.generative.GM.loss"]], "loss() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.generative.pq method)": [[39, "torch_mist.estimators.generative.PQ.loss"]], "pq() (in module torch_mist.estimators.generative)": [[39, "torch_mist.estimators.generative.pq"]], "q_qx_given_y() (torch_mist.estimators.generative.pq method)": [[39, "torch_mist.estimators.generative.PQ.q_QX_given_y"]], "q_y_given_x() (torch_mist.estimators.generative.generativemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.GenerativeMutualInformationEstimator.q_Y_given_x"]], "quantize_x() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.quantize_x"]], "quantize_x() (torch_mist.estimators.generative.pq method)": [[39, "torch_mist.estimators.generative.PQ.quantize_x"]], "quantize_y() (torch_mist.estimators.generative.discretemutualinformationestimator method)": [[39, "torch_mist.estimators.generative.DiscreteMutualInformationEstimator.quantize_y"]], "torch_mist.estimators.generative": [[39, "module-torch_mist.estimators.generative"]], "l1out (class in torch_mist.estimators.generative.l1out)": [[40, "torch_mist.estimators.generative.l1out.L1Out"]], "approx_log_p_y() (torch_mist.estimators.generative.l1out.l1out method)": [[40, "torch_mist.estimators.generative.l1out.L1Out.approx_log_p_y"]], "expected_log_ratio() (torch_mist.estimators.generative.l1out.l1out method)": [[40, "torch_mist.estimators.generative.l1out.L1Out.expected_log_ratio"]], "l1out() (in module torch_mist.estimators.generative.l1out)": [[40, "torch_mist.estimators.generative.l1out.l1out"]], "log_ratio() (torch_mist.estimators.generative.l1out.l1out method)": [[40, "torch_mist.estimators.generative.l1out.L1Out.log_ratio"]], "torch_mist.estimators.generative.l1out": [[40, "module-torch_mist.estimators.generative.l1out"]], "pq (class in torch_mist.estimators.generative.pq)": [[41, "torch_mist.estimators.generative.pq.PQ"]], "samebucketconditionaldistribution (class in torch_mist.estimators.generative.pq)": [[41, "torch_mist.estimators.generative.pq.SameBucketConditionalDistribution"]], "__repr__() (torch_mist.estimators.generative.pq.pq method)": [[41, "torch_mist.estimators.generative.pq.PQ.__repr__"]], "approx_log_p_qx() (torch_mist.estimators.generative.pq.pq method)": [[41, "torch_mist.estimators.generative.pq.PQ.approx_log_p_qx"]], "approx_log_p_qx_given_y() (torch_mist.estimators.generative.pq.pq method)": [[41, "torch_mist.estimators.generative.pq.PQ.approx_log_p_qx_given_y"]], "condition() (torch_mist.estimators.generative.pq.samebucketconditionaldistribution method)": [[41, "torch_mist.estimators.generative.pq.SameBucketConditionalDistribution.condition"]], "log_ratio() (torch_mist.estimators.generative.pq.pq method)": [[41, "torch_mist.estimators.generative.pq.PQ.log_ratio"]], "loss() (torch_mist.estimators.generative.pq.pq method)": [[41, "torch_mist.estimators.generative.pq.PQ.loss"]], "pq() (in module torch_mist.estimators.generative.pq)": [[41, "torch_mist.estimators.generative.pq.pq"]], "q_qx_given_y() (torch_mist.estimators.generative.pq.pq method)": [[41, "torch_mist.estimators.generative.pq.PQ.q_QX_given_y"]], "quantize_x() (torch_mist.estimators.generative.pq.pq method)": [[41, "torch_mist.estimators.generative.pq.PQ.quantize_x"]], "torch_mist.estimators.generative.pq": [[41, "module-torch_mist.estimators.generative.pq"]], "hybridmutualinformationestimator (class in torch_mist.estimators.hybrid)": [[42, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator"]], "expected_log_ratio() (torch_mist.estimators.hybrid.hybridmutualinformationestimator method)": [[42, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator.expected_log_ratio"]], "loss() (torch_mist.estimators.hybrid.hybridmutualinformationestimator method)": [[42, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator.loss"]], "torch_mist.estimators.hybrid": [[42, "module-torch_mist.estimators.hybrid"]], "unnormalized_log_ratio() (torch_mist.estimators.hybrid.hybridmutualinformationestimator method)": [[42, "torch_mist.estimators.hybrid.HybridMutualInformationEstimator.unnormalized_log_ratio"]], "alphatuba (class in torch_mist.estimators)": [[43, "torch_mist.estimators.AlphaTUBA"]], "ba (class in torch_mist.estimators)": [[43, "torch_mist.estimators.BA"]], "club (class in torch_mist.estimators)": [[43, "torch_mist.estimators.CLUB"]], "discretemutualinformationestimator (class in torch_mist.estimators)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator"]], "discriminativemutualinformationestimator (class in torch_mist.estimators)": [[43, "torch_mist.estimators.DiscriminativeMutualInformationEstimator"]], "doe (class in torch_mist.estimators)": [[43, "torch_mist.estimators.DoE"]], "flo (class in torch_mist.estimators)": [[43, "torch_mist.estimators.FLO"]], "gm (class in torch_mist.estimators)": [[43, "torch_mist.estimators.GM"]], "generativemutualinformationestimator (class in torch_mist.estimators)": [[43, "torch_mist.estimators.GenerativeMutualInformationEstimator"]], "hybridmutualinformationestimator (class in torch_mist.estimators)": [[43, "torch_mist.estimators.HybridMutualInformationEstimator"]], "infonce (class in torch_mist.estimators)": [[43, "torch_mist.estimators.InfoNCE"]], "js (class in torch_mist.estimators)": [[43, "torch_mist.estimators.JS"]], "l1out (class in torch_mist.estimators)": [[43, "torch_mist.estimators.L1Out"]], "mine (class in torch_mist.estimators)": [[43, "torch_mist.estimators.MINE"]], "mutualinformationestimator (class in torch_mist.estimators)": [[43, "torch_mist.estimators.MutualInformationEstimator"]], "nwj (class in torch_mist.estimators)": [[43, "torch_mist.estimators.NWJ"]], "pq (class in torch_mist.estimators)": [[43, "torch_mist.estimators.PQ"]], "smile (class in torch_mist.estimators)": [[43, "torch_mist.estimators.SMILE"]], "tuba (class in torch_mist.estimators)": [[43, "torch_mist.estimators.TUBA"]], "__repr__() (torch_mist.estimators.discretemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator.__repr__"]], "__repr__() (torch_mist.estimators.discriminativemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscriminativeMutualInformationEstimator.__repr__"]], "__repr__() (torch_mist.estimators.doe method)": [[43, "torch_mist.estimators.DoE.__repr__"]], "__repr__() (torch_mist.estimators.gm method)": [[43, "torch_mist.estimators.GM.__repr__"]], "__repr__() (torch_mist.estimators.generativemutualinformationestimator method)": [[43, "torch_mist.estimators.GenerativeMutualInformationEstimator.__repr__"]], "__repr__() (torch_mist.estimators.pq method)": [[43, "torch_mist.estimators.PQ.__repr__"]], "__repr__() (torch_mist.estimators.tuba method)": [[43, "torch_mist.estimators.TUBA.__repr__"]], "alpha_tuba() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.alpha_tuba"]], "approx_log_p_qx() (torch_mist.estimators.discretemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator.approx_log_p_qx"]], "approx_log_p_qx() (torch_mist.estimators.pq method)": [[43, "torch_mist.estimators.PQ.approx_log_p_qx"]], "approx_log_p_qx_given_y() (torch_mist.estimators.pq method)": [[43, "torch_mist.estimators.PQ.approx_log_p_qx_given_y"]], "approx_log_p_qxqy() (torch_mist.estimators.discretemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator.approx_log_p_qxqy"]], "approx_log_p_qy() (torch_mist.estimators.discretemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator.approx_log_p_qy"]], "approx_log_p_qy_given_qx() (torch_mist.estimators.discretemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator.approx_log_p_qy_given_qx"]], "approx_log_p_x() (torch_mist.estimators.gm method)": [[43, "torch_mist.estimators.GM.approx_log_p_x"]], "approx_log_p_x_given_y() (torch_mist.estimators.gm method)": [[43, "torch_mist.estimators.GM.approx_log_p_x_given_y"]], "approx_log_p_xy() (torch_mist.estimators.gm method)": [[43, "torch_mist.estimators.GM.approx_log_p_xy"]], "approx_log_p_y() (torch_mist.estimators.club method)": [[43, "torch_mist.estimators.CLUB.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.doe method)": [[43, "torch_mist.estimators.DoE.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.generativemutualinformationestimator method)": [[43, "torch_mist.estimators.GenerativeMutualInformationEstimator.approx_log_p_y"]], "approx_log_p_y() (torch_mist.estimators.l1out method)": [[43, "torch_mist.estimators.L1Out.approx_log_p_y"]], "approx_log_p_y_given_x() (torch_mist.estimators.generativemutualinformationestimator method)": [[43, "torch_mist.estimators.GenerativeMutualInformationEstimator.approx_log_p_y_given_x"]], "ba() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.ba"]], "club() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.club"]], "compute_log_normalization() (torch_mist.estimators.discriminativemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscriminativeMutualInformationEstimator.compute_log_normalization"]], "compute_log_normalization() (torch_mist.estimators.infonce method)": [[43, "torch_mist.estimators.InfoNCE.compute_log_normalization"]], "compute_log_normalization() (torch_mist.estimators.smile method)": [[43, "torch_mist.estimators.SMILE.compute_log_normalization"]], "compute_log_normalization() (torch_mist.estimators.tuba method)": [[43, "torch_mist.estimators.TUBA.compute_log_normalization"]], "compute_log_normalization_loss() (torch_mist.estimators.tuba method)": [[43, "torch_mist.estimators.TUBA.compute_log_normalization_loss"]], "critic_on_negatives() (torch_mist.estimators.discriminativemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscriminativeMutualInformationEstimator.critic_on_negatives"]], "critic_on_positives() (torch_mist.estimators.discriminativemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscriminativeMutualInformationEstimator.critic_on_positives"]], "discrete() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.discrete"]], "doe() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.doe"]], "expected_log_ratio() (torch_mist.estimators.ba method)": [[43, "torch_mist.estimators.BA.expected_log_ratio"]], "expected_log_ratio() (torch_mist.estimators.hybridmutualinformationestimator method)": [[43, "torch_mist.estimators.HybridMutualInformationEstimator.expected_log_ratio"]], "expected_log_ratio() (torch_mist.estimators.l1out method)": [[43, "torch_mist.estimators.L1Out.expected_log_ratio"]], "expected_log_ratio() (torch_mist.estimators.mutualinformationestimator method)": [[43, "torch_mist.estimators.MutualInformationEstimator.expected_log_ratio"]], "flo() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.flo"]], "forward() (torch_mist.estimators.mutualinformationestimator method)": [[43, "torch_mist.estimators.MutualInformationEstimator.forward"]], "gm() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.gm"]], "infonce() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.infonce"]], "js() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.js"]], "l1out() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.l1out"]], "log_normalization() (torch_mist.estimators.discriminativemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscriminativeMutualInformationEstimator.log_normalization"]], "log_normalization_loss() (torch_mist.estimators.tuba method)": [[43, "torch_mist.estimators.TUBA.log_normalization_loss"]], "log_p_qx_given_qy() (torch_mist.estimators.discretemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator.log_p_qx_given_qy"]], "log_ratio() (torch_mist.estimators.discretemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.discriminativemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscriminativeMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.flo method)": [[43, "torch_mist.estimators.FLO.log_ratio"]], "log_ratio() (torch_mist.estimators.generativemutualinformationestimator method)": [[43, "torch_mist.estimators.GenerativeMutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.l1out method)": [[43, "torch_mist.estimators.L1Out.log_ratio"]], "log_ratio() (torch_mist.estimators.mutualinformationestimator method)": [[43, "torch_mist.estimators.MutualInformationEstimator.log_ratio"]], "log_ratio() (torch_mist.estimators.pq method)": [[43, "torch_mist.estimators.PQ.log_ratio"]], "logits (torch_mist.estimators.discretemutualinformationestimator property)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator.logits"]], "loss() (torch_mist.estimators.discretemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.discriminativemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscriminativeMutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.doe method)": [[43, "torch_mist.estimators.DoE.loss"]], "loss() (torch_mist.estimators.gm method)": [[43, "torch_mist.estimators.GM.loss"]], "loss() (torch_mist.estimators.generativemutualinformationestimator method)": [[43, "torch_mist.estimators.GenerativeMutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.hybridmutualinformationestimator method)": [[43, "torch_mist.estimators.HybridMutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.js method)": [[43, "torch_mist.estimators.JS.loss"]], "loss() (torch_mist.estimators.mutualinformationestimator method)": [[43, "torch_mist.estimators.MutualInformationEstimator.loss"]], "loss() (torch_mist.estimators.pq method)": [[43, "torch_mist.estimators.PQ.loss"]], "loss() (torch_mist.estimators.smile method)": [[43, "torch_mist.estimators.SMILE.loss"]], "loss() (torch_mist.estimators.tuba method)": [[43, "torch_mist.estimators.TUBA.loss"]], "mine() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.mine"]], "nwj() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.nwj"]], "pq() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.pq"]], "q_qx_given_y() (torch_mist.estimators.pq method)": [[43, "torch_mist.estimators.PQ.q_QX_given_y"]], "q_y_given_x() (torch_mist.estimators.generativemutualinformationestimator method)": [[43, "torch_mist.estimators.GenerativeMutualInformationEstimator.q_Y_given_x"]], "quantize_x() (torch_mist.estimators.discretemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator.quantize_x"]], "quantize_x() (torch_mist.estimators.pq method)": [[43, "torch_mist.estimators.PQ.quantize_x"]], "quantize_y() (torch_mist.estimators.discretemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscreteMutualInformationEstimator.quantize_y"]], "smile() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.smile"]], "torch_mist.estimators": [[43, "module-torch_mist.estimators"]], "tuba() (in module torch_mist.estimators)": [[43, "torch_mist.estimators.tuba"]], "unnormalized_log_ratio() (torch_mist.estimators.discriminativemutualinformationestimator method)": [[43, "torch_mist.estimators.DiscriminativeMutualInformationEstimator.unnormalized_log_ratio"]], "unnormalized_log_ratio() (torch_mist.estimators.hybridmutualinformationestimator method)": [[43, "torch_mist.estimators.HybridMutualInformationEstimator.unnormalized_log_ratio"]], "unnormalized_log_ratio() (torch_mist.estimators.mutualinformationestimator method)": [[43, "torch_mist.estimators.MutualInformationEstimator.unnormalized_log_ratio"]], "instantiate_estimator() (in module torch_mist.estimators.utils)": [[44, "torch_mist.estimators.utils.instantiate_estimator"]], "torch_mist.estimators.utils": [[44, "module-torch_mist.estimators.utils"]], "__version__ (in module torch_mist)": [[45, "torch_mist.__version__"]], "estimate_mi() (in module torch_mist)": [[45, "torch_mist.estimate_mi"]], "torch_mist": [[45, "module-torch_mist"]], "torch_mist.nn": [[46, "module-torch_mist.nn"]], "constant (class in torch_mist.nn.utils)": [[47, "torch_mist.nn.utils.Constant"]], "identity (class in torch_mist.nn.utils)": [[47, "torch_mist.nn.utils.Identity"]], "jointdensenn (class in torch_mist.nn.utils)": [[47, "torch_mist.nn.utils.JointDenseNN"]], "mergeoutputs (class in torch_mist.nn.utils)": [[47, "torch_mist.nn.utils.MergeOutputs"]], "skipdensenn (class in torch_mist.nn.utils)": [[47, "torch_mist.nn.utils.SkipDenseNN"]], "__repr__() (torch_mist.nn.utils.constant method)": [[47, "torch_mist.nn.utils.Constant.__repr__"]], "forward() (torch_mist.nn.utils.constant method)": [[47, "torch_mist.nn.utils.Constant.forward"]], "forward() (torch_mist.nn.utils.identity method)": [[47, "torch_mist.nn.utils.Identity.forward"]], "forward() (torch_mist.nn.utils.jointdensenn method)": [[47, "torch_mist.nn.utils.JointDenseNN.forward"]], "forward() (torch_mist.nn.utils.mergeoutputs method)": [[47, "torch_mist.nn.utils.MergeOutputs.forward"]], "forward() (torch_mist.nn.utils.skipdensenn method)": [[47, "torch_mist.nn.utils.SkipDenseNN.forward"]], "torch_mist.nn.utils": [[47, "module-torch_mist.nn.utils"]], "fixedquantization (class in torch_mist.quantization.functions)": [[48, "torch_mist.quantization.functions.FixedQuantization"]], "learnablequantization (class in torch_mist.quantization.functions)": [[48, "torch_mist.quantization.functions.LearnableQuantization"]], "learnablevectorquantization (class in torch_mist.quantization.functions)": [[48, "torch_mist.quantization.functions.LearnableVectorQuantization"]], "quantizationfunction (class in torch_mist.quantization.functions)": [[48, "torch_mist.quantization.functions.QuantizationFunction"]], "vectorquantization (class in torch_mist.quantization.functions)": [[48, "torch_mist.quantization.functions.VectorQuantization"]], "__repr__() (torch_mist.quantization.functions.learnablevectorquantization method)": [[48, "torch_mist.quantization.functions.LearnableVectorQuantization.__repr__"]], "codebook_lookup() (torch_mist.quantization.functions.vectorquantization method)": [[48, "torch_mist.quantization.functions.VectorQuantization.codebook_lookup"]], "forward() (torch_mist.quantization.functions.fixedquantization method)": [[48, "torch_mist.quantization.functions.FixedQuantization.forward"]], "forward() (torch_mist.quantization.functions.learnablevectorquantization method)": [[48, "torch_mist.quantization.functions.LearnableVectorQuantization.forward"]], "forward() (torch_mist.quantization.functions.quantizationfunction method)": [[48, "torch_mist.quantization.functions.QuantizationFunction.forward"]], "forward() (torch_mist.quantization.functions.vectorquantization method)": [[48, "torch_mist.quantization.functions.VectorQuantization.forward"]], "loss() (torch_mist.quantization.functions.learnablequantization method)": [[48, "torch_mist.quantization.functions.LearnableQuantization.loss"]], "n_bins (torch_mist.quantization.functions.fixedquantization property)": [[48, "torch_mist.quantization.functions.FixedQuantization.n_bins"]], "n_bins (torch_mist.quantization.functions.quantizationfunction property)": [[48, "torch_mist.quantization.functions.QuantizationFunction.n_bins"]], "n_bins (torch_mist.quantization.functions.vectorquantization property)": [[48, "torch_mist.quantization.functions.VectorQuantization.n_bins"]], "torch_mist.quantization.functions": [[48, "module-torch_mist.quantization.functions"]], "vector_quantization() (in module torch_mist.quantization.functions)": [[48, "torch_mist.quantization.functions.vector_quantization"]], "vqvae_quantization() (in module torch_mist.quantization.functions)": [[48, "torch_mist.quantization.functions.vqvae_quantization"]], "fixedquantization (class in torch_mist.quantization)": [[49, "torch_mist.quantization.FixedQuantization"]], "learnablequantization (class in torch_mist.quantization)": [[49, "torch_mist.quantization.LearnableQuantization"]], "learnablevectorquantization (class in torch_mist.quantization)": [[49, "torch_mist.quantization.LearnableVectorQuantization"]], "quantizationfunction (class in torch_mist.quantization)": [[49, "torch_mist.quantization.QuantizationFunction"]], "vqvae (class in torch_mist.quantization)": [[49, "torch_mist.quantization.VQVAE"]], "vectorquantization (class in torch_mist.quantization)": [[49, "torch_mist.quantization.VectorQuantization"]], "__repr__() (torch_mist.quantization.learnablevectorquantization method)": [[49, "torch_mist.quantization.LearnableVectorQuantization.__repr__"]], "codebook_lookup() (torch_mist.quantization.vectorquantization method)": [[49, "torch_mist.quantization.VectorQuantization.codebook_lookup"]], "forward() (torch_mist.quantization.fixedquantization method)": [[49, "torch_mist.quantization.FixedQuantization.forward"]], "forward() (torch_mist.quantization.learnablevectorquantization method)": [[49, "torch_mist.quantization.LearnableVectorQuantization.forward"]], "forward() (torch_mist.quantization.quantizationfunction method)": [[49, "torch_mist.quantization.QuantizationFunction.forward"]], "forward() (torch_mist.quantization.vectorquantization method)": [[49, "torch_mist.quantization.VectorQuantization.forward"]], "loss() (torch_mist.quantization.learnablequantization method)": [[49, "torch_mist.quantization.LearnableQuantization.loss"]], "loss() (torch_mist.quantization.vqvae method)": [[49, "torch_mist.quantization.VQVAE.loss"]], "n_bins (torch_mist.quantization.fixedquantization property)": [[49, "torch_mist.quantization.FixedQuantization.n_bins"]], "n_bins (torch_mist.quantization.quantizationfunction property)": [[49, "torch_mist.quantization.QuantizationFunction.n_bins"]], "n_bins (torch_mist.quantization.vectorquantization property)": [[49, "torch_mist.quantization.VectorQuantization.n_bins"]], "quantization (torch_mist.quantization.vqvae property)": [[49, "torch_mist.quantization.VQVAE.quantization"]], "torch_mist.quantization": [[49, "module-torch_mist.quantization"]], "vector_quantization() (in module torch_mist.quantization)": [[49, "torch_mist.quantization.vector_quantization"]], "vqvae() (in module torch_mist.quantization)": [[49, "torch_mist.quantization.vqvae"]], "vqvae_quantization() (in module torch_mist.quantization)": [[49, "torch_mist.quantization.vqvae_quantization"]], "initial_patience (in module torch_mist.quantization.vqvae)": [[50, "torch_mist.quantization.vqvae.INITIAL_PATIENCE"]], "vqvae (class in torch_mist.quantization.vqvae)": [[50, "torch_mist.quantization.vqvae.VQVAE"]], "loss() (torch_mist.quantization.vqvae.vqvae method)": [[50, "torch_mist.quantization.vqvae.VQVAE.loss"]], "quantization (torch_mist.quantization.vqvae.vqvae property)": [[50, "torch_mist.quantization.vqvae.VQVAE.quantization"]], "torch_mist.quantization.vqvae": [[50, "module-torch_mist.quantization.vqvae"]], "vqvae() (in module torch_mist.quantization.vqvae)": [[50, "torch_mist.quantization.vqvae.vqvae"]], "torch_mist.train": [[51, "module-torch_mist.train"]], "train_mi_estimator() (in module torch_mist.train)": [[51, "torch_mist.train.train_mi_estimator"]], "train_vqvae() (in module torch_mist.train)": [[51, "torch_mist.train.train_vqvae"]], "torch_mist.train.mi_estimator": [[52, "module-torch_mist.train.mi_estimator"]], "train_mi_estimator() (in module torch_mist.train.mi_estimator)": [[52, "torch_mist.train.mi_estimator.train_mi_estimator"]], "torch_mist.train.vqvae": [[53, "module-torch_mist.train.vqvae"]], "train_vqvae() (in module torch_mist.train.vqvae)": [[53, "torch_mist.train.vqvae.train_vqvae"]], "torch_mist.utils.batch_utils": [[54, "module-torch_mist.utils.batch_utils"]], "unfold_samples() (in module torch_mist.utils.batch_utils)": [[54, "torch_mist.utils.batch_utils.unfold_samples"]], "t (in module torch_mist.utils.caching)": [[55, "torch_mist.utils.caching.T"]], "cached() (in module torch_mist.utils.caching)": [[55, "torch_mist.utils.caching.cached"]], "reset_cache_after_call() (in module torch_mist.utils.caching)": [[55, "torch_mist.utils.caching.reset_cache_after_call"]], "reset_cache_before_call() (in module torch_mist.utils.caching)": [[55, "torch_mist.utils.caching.reset_cache_before_call"]], "torch_mist.utils.caching": [[55, "module-torch_mist.utils.caching"]], "sampledataset (class in torch_mist.utils.data.dataset)": [[56, "torch_mist.utils.data.dataset.SampleDataset"]], "__getitem__() (torch_mist.utils.data.dataset.sampledataset method)": [[56, "torch_mist.utils.data.dataset.SampleDataset.__getitem__"]], "__len__() (torch_mist.utils.data.dataset.sampledataset method)": [[56, "torch_mist.utils.data.dataset.SampleDataset.__len__"]], "torch_mist.utils.data.dataset": [[56, "module-torch_mist.utils.data.dataset"]], "distributiondataloader (class in torch_mist.utils.data)": [[57, "torch_mist.utils.data.DistributionDataLoader"]], "sameattributedataloader (class in torch_mist.utils.data)": [[57, "torch_mist.utils.data.SameAttributeDataLoader"]], "sameattributesampler (class in torch_mist.utils.data)": [[57, "torch_mist.utils.data.SameAttributeSampler"]], "sampledataset (class in torch_mist.utils.data)": [[57, "torch_mist.utils.data.SampleDataset"]], "__getitem__() (torch_mist.utils.data.sampledataset method)": [[57, "torch_mist.utils.data.SampleDataset.__getitem__"]], "__iter__() (torch_mist.utils.data.distributiondataloader method)": [[57, "torch_mist.utils.data.DistributionDataLoader.__iter__"]], "__iter__() (torch_mist.utils.data.sameattributesampler method)": [[57, "torch_mist.utils.data.SameAttributeSampler.__iter__"]], "__len__() (torch_mist.utils.data.distributiondataloader method)": [[57, "torch_mist.utils.data.DistributionDataLoader.__len__"]], "__len__() (torch_mist.utils.data.sameattributesampler method)": [[57, "torch_mist.utils.data.SameAttributeSampler.__len__"]], "__len__() (torch_mist.utils.data.sampledataset method)": [[57, "torch_mist.utils.data.SampleDataset.__len__"]], "__next__() (torch_mist.utils.data.distributiondataloader method)": [[57, "torch_mist.utils.data.DistributionDataLoader.__next__"]], "_compute_len() (torch_mist.utils.data.sameattributesampler method)": [[57, "torch_mist.utils.data.SameAttributeSampler._compute_len"]], "attributes (torch_mist.utils.data.sameattributesampler property)": [[57, "torch_mist.utils.data.SameAttributeSampler.attributes"]], "compare_attributes() (torch_mist.utils.data.sameattributesampler method)": [[57, "torch_mist.utils.data.SameAttributeSampler.compare_attributes"]], "make_batch() (torch_mist.utils.data.sameattributesampler method)": [[57, "torch_mist.utils.data.SameAttributeSampler.make_batch"]], "sample_same_attributes() (in module torch_mist.utils.data)": [[57, "torch_mist.utils.data.sample_same_attributes"]], "torch_mist.utils.data": [[57, "module-torch_mist.utils.data"]], "distributiondataloader (class in torch_mist.utils.data.loader)": [[58, "torch_mist.utils.data.loader.DistributionDataLoader"]], "sameattributedataloader (class in torch_mist.utils.data.loader)": [[58, "torch_mist.utils.data.loader.SameAttributeDataLoader"]], "__iter__() (torch_mist.utils.data.loader.distributiondataloader method)": [[58, "torch_mist.utils.data.loader.DistributionDataLoader.__iter__"]], "__len__() (torch_mist.utils.data.loader.distributiondataloader method)": [[58, "torch_mist.utils.data.loader.DistributionDataLoader.__len__"]], "__next__() (torch_mist.utils.data.loader.distributiondataloader method)": [[58, "torch_mist.utils.data.loader.DistributionDataLoader.__next__"]], "sample_same_attributes() (in module torch_mist.utils.data.loader)": [[58, "torch_mist.utils.data.loader.sample_same_attributes"]], "torch_mist.utils.data.loader": [[58, "module-torch_mist.utils.data.loader"]], "sameattributesampler (class in torch_mist.utils.data.sampler)": [[59, "torch_mist.utils.data.sampler.SameAttributeSampler"]], "__iter__() (torch_mist.utils.data.sampler.sameattributesampler method)": [[59, "torch_mist.utils.data.sampler.SameAttributeSampler.__iter__"]], "__len__() (torch_mist.utils.data.sampler.sameattributesampler method)": [[59, "torch_mist.utils.data.sampler.SameAttributeSampler.__len__"]], "_compute_len() (torch_mist.utils.data.sampler.sameattributesampler method)": [[59, "torch_mist.utils.data.sampler.SameAttributeSampler._compute_len"]], "attributes (torch_mist.utils.data.sampler.sameattributesampler property)": [[59, "torch_mist.utils.data.sampler.SameAttributeSampler.attributes"]], "compare_attributes() (torch_mist.utils.data.sampler.sameattributesampler method)": [[59, "torch_mist.utils.data.sampler.SameAttributeSampler.compare_attributes"]], "make_batch() (torch_mist.utils.data.sampler.sameattributesampler method)": [[59, "torch_mist.utils.data.sampler.SameAttributeSampler.make_batch"]], "torch_mist.utils.data.sampler": [[59, "module-torch_mist.utils.data.sampler"]], "estimate_mi() (in module torch_mist.utils.estimation)": [[60, "torch_mist.utils.estimation.estimate_mi"]], "evaluate_mi() (in module torch_mist.utils.estimation)": [[60, "torch_mist.utils.estimation.evaluate_mi"]], "torch_mist.utils.estimation": [[60, "module-torch_mist.utils.estimation"]], "estimate_mi() (in module torch_mist.utils)": [[61, "torch_mist.utils.estimate_mi"]], "evaluate_mi() (in module torch_mist.utils)": [[61, "torch_mist.utils.evaluate_mi"]], "torch_mist.utils": [[61, "module-torch_mist.utils"]]}})