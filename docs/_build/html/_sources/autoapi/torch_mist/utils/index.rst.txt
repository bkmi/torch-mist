:py:mod:`torch_mist.utils`
==========================

.. py:module:: torch_mist.utils


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   caching/index.rst
   data/index.rst
   estimate/index.rst


Package Contents
----------------


Functions
~~~~~~~~~

.. autoapisummary::

   torch_mist.utils.estimate_mi
   torch_mist.utils.optimize_mi_estimator



.. py:function:: estimate_mi(estimator: torch_mist.estimators.base.MutualInformationEstimator, dataloader: collections.abc.Iterator[Tuple[torch.Tensor, torch.Tensor]], device: torch.device = torch.device('cpu')) -> Tuple[float, float]


.. py:function:: optimize_mi_estimator(estimator: torch_mist.estimators.base.MutualInformationEstimator, dataloader: collections.abc.Iterator[Tuple[torch.Tensor, torch.Tensor]], device: torch.device = torch.device('cpu'), epochs: int = 1, optimizer_class: Type[torch.optim.Optimizer] = Adam, optimizer_params: Optional[Dict[str, Any]] = None, verbose: bool = False, return_log: bool = True) -> Optional[pandas.DataFrame]


